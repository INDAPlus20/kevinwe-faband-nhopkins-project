{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2","program":"/home/fabian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","--edition=2018","/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=29635a682cf24ed8","-C","extra-filename=-29635a682cf24ed8","--out-dir","/home/fabian/Documents/DD1396/kevinwe-faband-nhopkins-project/src/target/rls/debug/deps","-L","dependency=/home/fabian/Documents/DD1396/kevinwe-faband-nhopkins-project/src/target/rls/debug/deps","--extern","memchr=/home/fabian/Documents/DD1396/kevinwe-faband-nhopkins-project/src/target/rls/debug/deps/libmemchr-667072175c82c6d3.rmeta","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/home/fabian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/fabian/Documents/DD1396/kevinwe-faband-nhopkins-project/src/target/rls/debug/deps/libnom-29635a682cf24ed8.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[8814361878970226839,6136237921552330983]},"crate_root":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src","external_crates":[{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":4,"id":{"name":"memchr","disambiguator":[7078664169841783176,13120130141428563512]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}}],"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":0,"byte_end":17001,"line_start":1,"line_end":519,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":1602},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15513,"byte_end":15519,"line_start":440,"line_end":440,"column_start":19,"column_end":25},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":1651},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15621,"byte_end":15624,"line_start":445,"line_end":445,"column_start":20,"column_end":23},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":1793},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15626,"byte_end":15633,"line_start":445,"line_end":445,"column_start":25,"column_end":32},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":5947},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15635,"byte_end":15638,"line_start":445,"line_end":445,"column_start":34,"column_end":37},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":3243},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15640,"byte_end":15644,"line_start":445,"line_end":445,"column_start":39,"column_end":43},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":1153},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15646,"byte_end":15649,"line_start":445,"line_end":445,"column_start":45,"column_end":48},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":1990},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15651,"byte_end":15654,"line_start":445,"line_end":445,"column_start":50,"column_end":53},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":5284},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15656,"byte_end":15662,"line_start":445,"line_end":445,"column_start":55,"column_end":61},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":5639},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15664,"byte_end":15670,"line_start":445,"line_end":445,"column_start":63,"column_end":69},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":6494},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15672,"byte_end":15677,"line_start":445,"line_end":445,"column_start":71,"column_end":76},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":7513},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15679,"byte_end":15682,"line_start":445,"line_end":445,"column_start":78,"column_end":81},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":1,"index":690},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15773,"byte_end":15780,"line_start":449,"line_end":449,"column_start":21,"column_end":28},"alias_span":null,"name":"v1","value":"","parent":{"krate":0,"index":19}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16268,"byte_end":16269,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16268,"byte_end":16269,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16268,"byte_end":16269,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16268,"byte_end":16269,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16268,"byte_end":16269,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":0,"byte_end":17001,"line_start":1,"line_end":519,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":104},{"krate":0,"index":274},{"krate":0,"index":601},{"krate":0,"index":928},{"krate":0,"index":973},{"krate":0,"index":1102},{"krate":0,"index":1226},{"krate":0,"index":1464},{"krate":0,"index":1577},{"krate":0,"index":1834},{"krate":0,"index":1835}],"decl_id":null,"docs":" # nom, eating data byte by byte","sig":null,"attributes":[{"value":"! # nom, eating data byte by byte","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":40,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! streaming patterns, and as much as possible zero copy.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":109,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ## Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":172,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":187,"byte_end":190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":191,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"! extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":203,"byte_end":224,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":225,"byte_end":228,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! use nom::{","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":229,"byte_end":243,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!   IResult,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":244,"byte_end":258,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"!   bytes::complete::{tag, take_while_m_n},","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":259,"byte_end":304,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"!   combinator::map_res,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":305,"byte_end":331,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"!   sequence::tuple};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":332,"byte_end":355,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":356,"byte_end":359,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug,PartialEq)]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":360,"byte_end":390,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"! pub struct Color {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":391,"byte_end":413,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"!   pub red:     u8,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":414,"byte_end":436,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"!   pub green:   u8,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":437,"byte_end":459,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"!   pub blue:    u8,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":460,"byte_end":482,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":483,"byte_end":488,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":489,"byte_end":492,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! fn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":493,"byte_end":562,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"!   u8::from_str_radix(input, 16)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":563,"byte_end":598,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":599,"byte_end":604,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":605,"byte_end":608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! fn is_hex_digit(c: char) -> bool {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":609,"byte_end":647,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"!   c.is_digit(16)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":648,"byte_end":668,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":669,"byte_end":674,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":675,"byte_end":678,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! fn hex_primary(input: &str) -> IResult<&str, u8> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":679,"byte_end":733,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"!   map_res(","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":734,"byte_end":748,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"!     take_while_m_n(2, 2, is_hex_digit),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":749,"byte_end":792,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"!     from_hex","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":793,"byte_end":809,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"!   )(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":810,"byte_end":824,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":825,"byte_end":830,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":831,"byte_end":834,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! fn hex_color(input: &str) -> IResult<&str, Color> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":835,"byte_end":890,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"!   let (input, _) = tag(\"#\")(input)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":891,"byte_end":931,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"!   let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":932,"byte_end":1027,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"!   Ok((input, Color { red, green, blue }))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1032,"byte_end":1077,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1078,"byte_end":1083,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1084,"byte_end":1087,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1088,"byte_end":1103,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"!   assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1104,"byte_end":1158,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"!     red: 47,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1159,"byte_end":1175,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"!     green: 20,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1176,"byte_end":1194,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"!     blue: 223,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1195,"byte_end":1213,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"!   })));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1214,"byte_end":1225,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1226,"byte_end":1231,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1232,"byte_end":1239,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1240,"byte_end":1243,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1244,"byte_end":1310,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! There are a few [guides](https://github.com/Geal/nom/tree/master/doc) with more details","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1315,"byte_end":1406,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"! about [the design of nom macros](https://github.com/Geal/nom/blob/master/doc/how_nom_macros_work.md),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1407,"byte_end":1512,"line_start":58,"line_end":58,"column_start":1,"column_end":106}},{"value":"! [how to write parsers](https://github.com/Geal/nom/blob/master/doc/making_a_new_parser_from_scratch.md),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1513,"byte_end":1621,"line_start":59,"line_end":59,"column_start":1,"column_end":109}},{"value":"! or the [error management system](https://github.com/Geal/nom/blob/master/doc/error_management.md).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1622,"byte_end":1724,"line_start":60,"line_end":60,"column_start":1,"column_end":103}},{"value":"! You can also check out the [recipes] module that contains examples of common patterns.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1725,"byte_end":1815,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! **Looking for a specific combinator? Read the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1820,"byte_end":1869,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"! [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md)**","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1870,"byte_end":1975,"line_start":64,"line_end":64,"column_start":1,"column_end":106}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1976,"byte_end":1979,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! If you are upgrading to nom 5.0, please read the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":1980,"byte_end":2032,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"! [migration document](https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_5.md).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2033,"byte_end":2125,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2126,"byte_end":2129,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! See also the [FAQ](https://github.com/Geal/nom/blob/master/doc/FAQ.md).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2130,"byte_end":2205,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2206,"byte_end":2209,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! ## Parser combinators","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2210,"byte_end":2235,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2236,"byte_end":2239,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! Parser combinators are an approach to parsers that is very different from","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2240,"byte_end":2317,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"! software like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2318,"byte_end":2391,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"! [yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2392,"byte_end":2470,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"! in a separate syntax and generating the corresponding code, you use very small","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2471,"byte_end":2553,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"! functions with very specific purposes, like \"take 5 bytes\", or \"recognize the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2554,"byte_end":2635,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"! word 'HTTP'\", and assemble them in meaningful patterns like \"recognize","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2636,"byte_end":2710,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"! 'HTTP', then a space, then a version\".","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2711,"byte_end":2753,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"! The resulting code is small, and looks like the grammar you would have","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2754,"byte_end":2828,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"! written with other parser approaches.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2829,"byte_end":2870,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! This gives us a few advantages:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2875,"byte_end":2910,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2911,"byte_end":2914,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! - The parsers are small and easy to write","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2915,"byte_end":2960,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"! - The parsers components are easy to reuse (if they're general enough, please add them to nom!)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":2961,"byte_end":3060,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"! - The parsers components are easy to test separately (unit tests and property-based tests)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3061,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"! - The parser combination code looks close to the grammar you would have written","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3156,"byte_end":3239,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"! - You can build partial parsers, specific to the data you need at the moment, and ignore the rest","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3240,"byte_end":3341,"line_start":89,"line_end":89,"column_start":1,"column_end":102}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3342,"byte_end":3345,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! Here is an example of one such parser, to recognize text between parentheses:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3346,"byte_end":3427,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3428,"byte_end":3431,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3432,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"! use nom::{","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3444,"byte_end":3458,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"!   IResult,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3459,"byte_end":3473,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"!   sequence::delimited,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3474,"byte_end":3500,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"!   // see the \"streaming/complete\" paragraph lower for an explanation of these submodules","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3501,"byte_end":3593,"line_start":97,"line_end":97,"column_start":1,"column_end":93}},{"value":"!   character::complete::char,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3594,"byte_end":3626,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"!   bytes::complete::is_not","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3627,"byte_end":3656,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"! };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3657,"byte_end":3663,"line_start":100,"line_end":100,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! fn parens(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3668,"byte_end":3719,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"!   delimited(char('('), is_not(\")\"), char(')'))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3720,"byte_end":3777,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3778,"byte_end":3783,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3784,"byte_end":3791,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3792,"byte_end":3795,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! It defines a function named `parens` which will recognize a sequence of the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3796,"byte_end":3875,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"! character `(`, the longest byte array not containing `)`, then the character","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3876,"byte_end":3956,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"! `)`, and will return the byte array in the middle.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":3957,"byte_end":4011,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4012,"byte_end":4015,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! Here is another parser, written without using nom's combinators this time:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4016,"byte_end":4094,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4095,"byte_end":4098,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4111,"byte_end":4127,"line_start":114,"line_end":114,"column_start":1,"column_end":17}},{"value":"! extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4128,"byte_end":4149,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4150,"byte_end":4153,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! use nom::{IResult, Err, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4154,"byte_end":4190,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4191,"byte_end":4194,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4195,"byte_end":4212,"line_start":119,"line_end":119,"column_start":1,"column_end":18}},{"value":"! fn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4213,"byte_end":4261,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!   if i.len() < 4 {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4262,"byte_end":4284,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"!     Err(Err::Incomplete(Needed::new(4)))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4285,"byte_end":4329,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"!   } else {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4330,"byte_end":4344,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"!     Ok((&i[4..], &i[0..4]))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4345,"byte_end":4376,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"!   }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4377,"byte_end":4384,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4385,"byte_end":4390,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4391,"byte_end":4398,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4399,"byte_end":4406,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! This function takes a byte array as input, and tries to consume 4 bytes.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4411,"byte_end":4487,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"! Writing all the parsers manually, like this, is dangerous, despite Rust's","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4488,"byte_end":4565,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"! safety features. There are still a lot of mistakes one can make. That's why","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4566,"byte_end":4645,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"! nom provides a list of function and macros to help in developing parsers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4646,"byte_end":4723,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4724,"byte_end":4727,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! With functions, you would write it like this:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4728,"byte_end":4777,"line_start":135,"line_end":135,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4782,"byte_end":4793,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"! use nom::{IResult, bytes::streaming::take};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4794,"byte_end":4841,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"! fn take4(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4842,"byte_end":4892,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!   take(4u8)(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4893,"byte_end":4915,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4916,"byte_end":4921,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4922,"byte_end":4929,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4930,"byte_end":4933,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! With macros, you would write it like this:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4934,"byte_end":4980,"line_start":144,"line_end":144,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4985,"byte_end":4996,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":4997,"byte_end":5013,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"! extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5014,"byte_end":5035,"line_start":148,"line_end":148,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5036,"byte_end":5039,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5040,"byte_end":5057,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"! named!(take4, take!(4));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5058,"byte_end":5086,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5087,"byte_end":5094,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5095,"byte_end":5102,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! nom has used macros for combinators from versions 1 to 4, and from version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5107,"byte_end":5185,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"! 5, it proposes new combinators as functions, but still allows the macros style","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5186,"byte_end":5268,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"! (macros have been rewritten to use the functions under the hood).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5269,"byte_end":5338,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"! For new parsers, we recommend using the functions instead of macros, since","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5339,"byte_end":5417,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"! rustc messages will be much easier to understand.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5418,"byte_end":5471,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5472,"byte_end":5475,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5476,"byte_end":5479,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! A parser in nom is a function which, for an input type `I`, an output type `O`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5480,"byte_end":5562,"line_start":162,"line_end":162,"column_start":1,"column_end":83}},{"value":"! and an optional error type `E`, will have the following signature:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5563,"byte_end":5633,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5634,"byte_end":5637,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5638,"byte_end":5656,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"! fn parser(input: I) -> IResult<I, O, E>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5657,"byte_end":5701,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5702,"byte_end":5709,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5710,"byte_end":5713,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! Or like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5714,"byte_end":5822,"line_start":169,"line_end":169,"column_start":1,"column_end":109}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5823,"byte_end":5826,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5827,"byte_end":5845,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"! fn parser(input: I) -> IResult<I, O>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5846,"byte_end":5887,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5888,"byte_end":5895,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5896,"byte_end":5899,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! `IResult` is an alias for the `Result` type:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5900,"byte_end":5948,"line_start":175,"line_end":175,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5949,"byte_end":5952,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5953,"byte_end":5964,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"! use nom::{Needed, error::ErrorKind};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":5965,"byte_end":6005,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6006,"byte_end":6009,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! type IResult<I, O, E = (I,ErrorKind)> = Result<(I, O), Err<E>>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6010,"byte_end":6077,"line_start":180,"line_end":180,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6078,"byte_end":6081,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! enum Err<E> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6082,"byte_end":6099,"line_start":182,"line_end":182,"column_start":1,"column_end":18}},{"value":"!   Incomplete(Needed),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6100,"byte_end":6125,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"!   Error(E),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6126,"byte_end":6141,"line_start":184,"line_end":184,"column_start":1,"column_end":16}},{"value":"!   Failure(E),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6142,"byte_end":6159,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6160,"byte_end":6165,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6166,"byte_end":6173,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! It can have the following values:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6178,"byte_end":6215,"line_start":189,"line_end":189,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6216,"byte_end":6219,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! - A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6220,"byte_end":6361,"line_start":191,"line_end":191,"column_start":1,"column_end":142}},{"value":"! - An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6362,"byte_end":6485,"line_start":192,"line_end":192,"column_start":1,"column_end":124}},{"value":"! - An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6486,"byte_end":6618,"line_start":193,"line_end":193,"column_start":1,"column_end":133}},{"value":"! - An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6619,"byte_end":6777,"line_start":194,"line_end":194,"column_start":1,"column_end":159}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6778,"byte_end":6781,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"! Please refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md) for an exhaustive list of parsers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6782,"byte_end":6940,"line_start":196,"line_end":196,"column_start":1,"column_end":159}},{"value":"! See also the rest of the documentation [here](https://github.com/Geal/nom/blob/master/doc).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":6941,"byte_end":7036,"line_start":197,"line_end":197,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7037,"byte_end":7040,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ## Making new parsers with function combinators","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7041,"byte_end":7092,"line_start":199,"line_end":199,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7093,"byte_end":7096,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! nom is based on functions that generate parsers, with a signature like","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7097,"byte_end":7171,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"! this: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7172,"byte_end":7247,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"! The arguments of a combinator can be direct values (like `take` which uses","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7248,"byte_end":7326,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"! a number of bytes or character as argument) or even other parsers (like","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7327,"byte_end":7402,"line_start":204,"line_end":204,"column_start":1,"column_end":76}},{"value":"! `delimited` which takes as argument 3 parsers, and returns the result of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7403,"byte_end":7479,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"! the second one if all are successful).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7480,"byte_end":7522,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7523,"byte_end":7526,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! Here are some examples:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7527,"byte_end":7554,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7555,"byte_end":7558,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7559,"byte_end":7570,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"! use nom::IResult;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7571,"byte_end":7592,"line_start":211,"line_end":211,"column_start":1,"column_end":22}},{"value":"! use nom::bytes::complete::{tag, take};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7593,"byte_end":7635,"line_start":212,"line_end":212,"column_start":1,"column_end":43}},{"value":"! fn abcd_parser(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7636,"byte_end":7688,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"!   tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7689,"byte_end":7763,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7764,"byte_end":7769,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7770,"byte_end":7773,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! fn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7774,"byte_end":7825,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"!   take(10u8)(i) // will consume and return 10 bytes of input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7826,"byte_end":7890,"line_start":218,"line_end":218,"column_start":1,"column_end":65}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7891,"byte_end":7896,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7897,"byte_end":7904,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7905,"byte_end":7908,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"! ## Combining parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7909,"byte_end":7933,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7934,"byte_end":7937,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! There are higher level patterns, like the **`alt`** combinator, which","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":7938,"byte_end":8011,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"! provides a choice between multiple parsers. If one branch fails, it tries","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8012,"byte_end":8089,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"! the next, and returns the result of the first parser that succeeds:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8090,"byte_end":8161,"line_start":226,"line_end":226,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8162,"byte_end":8165,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8166,"byte_end":8177,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"! use nom::IResult;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8178,"byte_end":8199,"line_start":229,"line_end":229,"column_start":1,"column_end":22}},{"value":"! use nom::branch::alt;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8200,"byte_end":8225,"line_start":230,"line_end":230,"column_start":1,"column_end":26}},{"value":"! use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8226,"byte_end":8260,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8261,"byte_end":8264,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! let mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8265,"byte_end":8320,"line_start":233,"line_end":233,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8321,"byte_end":8324,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! assert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8325,"byte_end":8400,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"! assert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8401,"byte_end":8476,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"! assert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8477,"byte_end":8588,"line_start":237,"line_end":237,"column_start":1,"column_end":112}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8589,"byte_end":8596,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8597,"byte_end":8600,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"! The **`opt`** combinator makes a parser optional. If the child parser returns","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8601,"byte_end":8682,"line_start":240,"line_end":240,"column_start":1,"column_end":82}},{"value":"! an error, **`opt`** will still succeed and return None:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8683,"byte_end":8742,"line_start":241,"line_end":241,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8743,"byte_end":8746,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8747,"byte_end":8758,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"! use nom::{IResult, combinator::opt, bytes::complete::tag};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8759,"byte_end":8821,"line_start":244,"line_end":244,"column_start":1,"column_end":63}},{"value":"! fn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8822,"byte_end":8882,"line_start":245,"line_end":245,"column_start":1,"column_end":61}},{"value":"!   opt(tag(\"abcd\"))(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8883,"byte_end":8908,"line_start":246,"line_end":246,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8909,"byte_end":8914,"line_start":247,"line_end":247,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8915,"byte_end":8918,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! assert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":8919,"byte_end":9000,"line_start":249,"line_end":249,"column_start":1,"column_end":82}},{"value":"! assert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9001,"byte_end":9072,"line_start":250,"line_end":250,"column_start":1,"column_end":72}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9073,"byte_end":9080,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9081,"byte_end":9084,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! **`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9085,"byte_end":9182,"line_start":253,"line_end":253,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9183,"byte_end":9186,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9187,"byte_end":9198,"line_start":255,"line_end":255,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9199,"byte_end":9235,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"! # #[cfg(feature = \"alloc\")]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9236,"byte_end":9267,"line_start":257,"line_end":257,"column_start":1,"column_end":32}},{"value":"! # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9268,"byte_end":9285,"line_start":258,"line_end":258,"column_start":1,"column_end":18}},{"value":"! use nom::{IResult, multi::many0, bytes::complete::tag};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9286,"byte_end":9345,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"! use std::str;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9346,"byte_end":9363,"line_start":260,"line_end":260,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9364,"byte_end":9367,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! fn multi(i: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9368,"byte_end":9419,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"!   many0(tag(\"abcd\"))(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9420,"byte_end":9447,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9448,"byte_end":9453,"line_start":264,"line_end":264,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9454,"byte_end":9457,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"! let a = \"abcdef\";","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9458,"byte_end":9479,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"! let b = \"abcdabcdef\";","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9480,"byte_end":9505,"line_start":267,"line_end":267,"column_start":1,"column_end":26}},{"value":"! let c = \"azerty\";","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9506,"byte_end":9527,"line_start":268,"line_end":268,"column_start":1,"column_end":22}},{"value":"! assert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9528,"byte_end":9583,"line_start":269,"line_end":269,"column_start":1,"column_end":56}},{"value":"! assert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9584,"byte_end":9647,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"! assert_eq!(multi(c), Ok((\"azerty\", Vec::new())));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9648,"byte_end":9701,"line_start":271,"line_end":271,"column_start":1,"column_end":54}},{"value":"! # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9702,"byte_end":9709,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"! # #[cfg(not(feature = \"alloc\"))]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9710,"byte_end":9746,"line_start":273,"line_end":273,"column_start":1,"column_end":37}},{"value":"! # fn main() {}","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9747,"byte_end":9765,"line_start":274,"line_end":274,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9766,"byte_end":9773,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9774,"byte_end":9777,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! Here are some basic combining macros available:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9778,"byte_end":9829,"line_start":277,"line_end":277,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9830,"byte_end":9833,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"! - **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9834,"byte_end":9945,"line_start":279,"line_end":279,"column_start":1,"column_end":112}},{"value":"! - **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":9946,"byte_end":10064,"line_start":280,"line_end":280,"column_start":1,"column_end":119}},{"value":"! - **`many1`**: Will apply the parser 1 or more times","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10065,"byte_end":10121,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10122,"byte_end":10125,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! There are more complex (and more useful) parsers like `tuple!`, which is","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10126,"byte_end":10202,"line_start":283,"line_end":283,"column_start":1,"column_end":77}},{"value":"! used to apply a series of parsers then assemble their results.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10203,"byte_end":10269,"line_start":284,"line_end":284,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10270,"byte_end":10273,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! Example with `tuple`:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10274,"byte_end":10299,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10300,"byte_end":10303,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10304,"byte_end":10315,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10316,"byte_end":10352,"line_start":289,"line_end":289,"column_start":1,"column_end":37}},{"value":"! # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10353,"byte_end":10370,"line_start":290,"line_end":290,"column_start":1,"column_end":18}},{"value":"! use nom::{error::ErrorKind, Needed,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10371,"byte_end":10410,"line_start":291,"line_end":291,"column_start":1,"column_end":40}},{"value":"! number::streaming::be_u16,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10411,"byte_end":10441,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"! bytes::streaming::{tag, take},","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10442,"byte_end":10476,"line_start":293,"line_end":293,"column_start":1,"column_end":35}},{"value":"! sequence::tuple};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10477,"byte_end":10498,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10499,"byte_end":10502,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"! let mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10503,"byte_end":10559,"line_start":296,"line_end":296,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10560,"byte_end":10563,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! assert_eq!(","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10564,"byte_end":10579,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"!   tpl(&b\"abcdefgh\"[..]),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10580,"byte_end":10608,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"!   Ok((","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10609,"byte_end":10619,"line_start":300,"line_end":300,"column_start":1,"column_end":11}},{"value":"!     &b\"h\"[..],","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10620,"byte_end":10638,"line_start":301,"line_end":301,"column_start":1,"column_end":19}},{"value":"!     (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10639,"byte_end":10683,"line_start":302,"line_end":302,"column_start":1,"column_end":45}},{"value":"!   ))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10684,"byte_end":10692,"line_start":303,"line_end":303,"column_start":1,"column_end":9}},{"value":"! );","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10693,"byte_end":10699,"line_start":304,"line_end":304,"column_start":1,"column_end":7}},{"value":"! assert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10700,"byte_end":10778,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"! let input = &b\"abcdejk\"[..];","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10779,"byte_end":10811,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"! assert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10812,"byte_end":10892,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"! # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10893,"byte_end":10900,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10901,"byte_end":10908,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10909,"byte_end":10912,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"! But you can also use a sequence of combinators written in imperative style,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10913,"byte_end":10992,"line_start":311,"line_end":311,"column_start":1,"column_end":80}},{"value":"! thanks to the `?` operator:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":10993,"byte_end":11024,"line_start":312,"line_end":312,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11025,"byte_end":11028,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11029,"byte_end":11040,"line_start":314,"line_end":314,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11041,"byte_end":11077,"line_start":315,"line_end":315,"column_start":1,"column_end":37}},{"value":"! # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11078,"byte_end":11095,"line_start":316,"line_end":316,"column_start":1,"column_end":18}},{"value":"! use nom::{IResult, bytes::complete::tag};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11096,"byte_end":11141,"line_start":317,"line_end":317,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11142,"byte_end":11145,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq)]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11146,"byte_end":11177,"line_start":319,"line_end":319,"column_start":1,"column_end":32}},{"value":"! struct A {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11178,"byte_end":11192,"line_start":320,"line_end":320,"column_start":1,"column_end":15}},{"value":"!   a: u8,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11193,"byte_end":11205,"line_start":321,"line_end":321,"column_start":1,"column_end":13}},{"value":"!   b: u8","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11206,"byte_end":11217,"line_start":322,"line_end":322,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11218,"byte_end":11223,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11224,"byte_end":11227,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"! fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11228,"byte_end":11288,"line_start":325,"line_end":325,"column_start":1,"column_end":61}},{"value":"! fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11289,"byte_end":11349,"line_start":326,"line_end":326,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11350,"byte_end":11353,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! fn f(i: &[u8]) -> IResult<&[u8], A> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11354,"byte_end":11395,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"!   // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11396,"byte_end":11500,"line_start":329,"line_end":329,"column_start":1,"column_end":105}},{"value":"!   let (i, _) = tag(\"abcd\")(i)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11501,"byte_end":11536,"line_start":330,"line_end":330,"column_start":1,"column_end":36}},{"value":"!   let (i, a) = ret_int1(i)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11537,"byte_end":11569,"line_start":331,"line_end":331,"column_start":1,"column_end":33}},{"value":"!   let (i, _) = tag(\"efgh\")(i)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11570,"byte_end":11605,"line_start":332,"line_end":332,"column_start":1,"column_end":36}},{"value":"!   let (i, b) = ret_int2(i)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11606,"byte_end":11638,"line_start":333,"line_end":333,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11639,"byte_end":11642,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"!   Ok((i, A { a, b }))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11643,"byte_end":11668,"line_start":335,"line_end":335,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11669,"byte_end":11674,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11675,"byte_end":11678,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"! let r = f(b\"abcdefghX\");","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11679,"byte_end":11707,"line_start":338,"line_end":338,"column_start":1,"column_end":29}},{"value":"! assert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11708,"byte_end":11758,"line_start":339,"line_end":339,"column_start":1,"column_end":51}},{"value":"! # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11759,"byte_end":11766,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11767,"byte_end":11774,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11775,"byte_end":11778,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"! ## Streaming / Complete","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11779,"byte_end":11806,"line_start":343,"line_end":343,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11807,"byte_end":11810,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"! Some of nom's modules have `streaming` or `complete` submodules. They hold","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11811,"byte_end":11889,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"! different variants of the same combinators.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11890,"byte_end":11937,"line_start":346,"line_end":346,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11938,"byte_end":11941,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"! A streaming parser assumes that we might not have all of the input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":11942,"byte_end":12018,"line_start":348,"line_end":348,"column_start":1,"column_end":77}},{"value":"! This can happen with some network protocol or large file parsers, where the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12019,"byte_end":12098,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"! input buffer can be full and need to be resized or refilled.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12099,"byte_end":12163,"line_start":350,"line_end":350,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12164,"byte_end":12167,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"! A complete parser assumes that we already have all of the input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12168,"byte_end":12241,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"! This will be the common case with small files that can be read entirely to","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12242,"byte_end":12320,"line_start":353,"line_end":353,"column_start":1,"column_end":79}},{"value":"! memory.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12321,"byte_end":12332,"line_start":354,"line_end":354,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12333,"byte_end":12336,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"! Here is how it works in practice:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12337,"byte_end":12374,"line_start":356,"line_end":356,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12375,"byte_end":12378,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12379,"byte_end":12390,"line_start":358,"line_end":358,"column_start":1,"column_end":12}},{"value":"! use nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12391,"byte_end":12472,"line_start":359,"line_end":359,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12473,"byte_end":12476,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"! fn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12477,"byte_end":12535,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"!   bytes::streaming::take(4u8)(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12536,"byte_end":12572,"line_start":362,"line_end":362,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12573,"byte_end":12578,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"! fn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12583,"byte_end":12640,"line_start":365,"line_end":365,"column_start":1,"column_end":58}},{"value":"!   bytes::complete::take(4u8)(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12641,"byte_end":12676,"line_start":366,"line_end":366,"column_start":1,"column_end":36}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12677,"byte_end":12682,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12683,"byte_end":12686,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"! // both parsers will take 4 bytes as expected","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12687,"byte_end":12736,"line_start":369,"line_end":369,"column_start":1,"column_end":50}},{"value":"! assert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12737,"byte_end":12814,"line_start":370,"line_end":370,"column_start":1,"column_end":78}},{"value":"! assert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12815,"byte_end":12891,"line_start":371,"line_end":371,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12892,"byte_end":12895,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"! // if the input is smaller than 4 bytes, the streaming parser","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12896,"byte_end":12961,"line_start":373,"line_end":373,"column_start":1,"column_end":66}},{"value":"! // will return `Incomplete` to indicate that we need more data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":12962,"byte_end":13028,"line_start":374,"line_end":374,"column_start":1,"column_end":67}},{"value":"! assert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13029,"byte_end":13111,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13112,"byte_end":13115,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"! // but the complete parser will return an error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13116,"byte_end":13167,"line_start":377,"line_end":377,"column_start":1,"column_end":52}},{"value":"! assert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13168,"byte_end":13269,"line_start":378,"line_end":378,"column_start":1,"column_end":102}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13270,"byte_end":13273,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"! // the alpha0 function recognizes 0 or more alphabetic characters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13274,"byte_end":13343,"line_start":380,"line_end":380,"column_start":1,"column_end":70}},{"value":"! fn alpha0_streaming(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13344,"byte_end":13401,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"!   character::streaming::alpha0(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13402,"byte_end":13439,"line_start":382,"line_end":382,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13440,"byte_end":13445,"line_start":383,"line_end":383,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13446,"byte_end":13449,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"! fn alpha0_complete(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13450,"byte_end":13506,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"!   character::complete::alpha0(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13507,"byte_end":13543,"line_start":386,"line_end":386,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13544,"byte_end":13549,"line_start":387,"line_end":387,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13550,"byte_end":13553,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"! // if there's a clear limit to the recognized characters, both parsers work the same way","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13554,"byte_end":13646,"line_start":389,"line_end":389,"column_start":1,"column_end":93}},{"value":"! assert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13647,"byte_end":13708,"line_start":390,"line_end":390,"column_start":1,"column_end":62}},{"value":"! assert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13709,"byte_end":13769,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13770,"byte_end":13773,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"! // but when there's no limit, the streaming version returns `Incomplete`, because it cannot","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13774,"byte_end":13869,"line_start":393,"line_end":393,"column_start":1,"column_end":96}},{"value":"! // know if more input data should be recognized. The whole input could be \"abcd;\", or","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13870,"byte_end":13959,"line_start":394,"line_end":394,"column_start":1,"column_end":90}},{"value":"! // \"abcde;\"","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13960,"byte_end":13975,"line_start":395,"line_end":395,"column_start":1,"column_end":16}},{"value":"! assert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":13976,"byte_end":14055,"line_start":396,"line_end":396,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14056,"byte_end":14059,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"! // while the complete version knows that all of the data is there","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14060,"byte_end":14129,"line_start":398,"line_end":398,"column_start":1,"column_end":70}},{"value":"! assert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14130,"byte_end":14188,"line_start":399,"line_end":399,"column_start":1,"column_end":59}},{"value":"! ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14189,"byte_end":14196,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"! **Going further:** Read the [guides](https://github.com/Geal/nom/tree/master/doc),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14197,"byte_end":14283,"line_start":401,"line_end":401,"column_start":1,"column_end":87}},{"value":"! check out the [recipes]!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14284,"byte_end":14312,"line_start":402,"line_end":402,"column_start":1,"column_end":29}},{"value":"no_std","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14347,"byte_end":14353,"line_start":403,"line_end":403,"column_start":35,"column_end":41}},{"value":"deny(missing_docs)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14568,"byte_end":14590,"line_start":408,"line_end":408,"column_start":1,"column_end":23}},{"value":"warn(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":14591,"byte_end":14626,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15184,"byte_end":15187,"line_start":432,"line_end":432,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":6}],"decl_id":null,"docs":" Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\n it, albeit there it is not public.\n","sig":null,"attributes":[{"value":"/ Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15000,"byte_end":15100,"line_start":429,"line_end":429,"column_start":1,"column_end":101}},{"value":"/ it, albeit there it is not public.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15101,"byte_end":15139,"line_start":430,"line_end":430,"column_start":1,"column_end":39}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15140,"byte_end":15175,"line_start":431,"line_end":431,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15454,"byte_end":15457,"line_start":438,"line_end":438,"column_start":11,"column_end":14},"name":"std","qualname":"::lib::std","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" `std` facade allowing `std`/`core` to be interchangeable. Reexports `alloc` crate optionally,\n as well as `core` or `std`\n internal std exports for no_std compatibility\n","sig":null,"attributes":[{"value":"/ `std` facade allowing `std`/`core` to be interchangeable. Reexports `alloc` crate optionally,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15192,"byte_end":15289,"line_start":433,"line_end":433,"column_start":3,"column_end":100}},{"value":"/ as well as `core` or `std`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15292,"byte_end":15322,"line_start":434,"line_end":434,"column_start":3,"column_end":33}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15325,"byte_end":15353,"line_start":435,"line_end":435,"column_start":3,"column_end":31}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15356,"byte_end":15391,"line_start":436,"line_end":436,"column_start":3,"column_end":38}},{"value":"/ internal std exports for no_std compatibility","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15394,"byte_end":15443,"line_start":437,"line_end":437,"column_start":3,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15743,"byte_end":15750,"line_start":448,"line_end":448,"column_start":13,"column_end":20},"name":"prelude","qualname":"::lib::std::prelude","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" internal reproduction of std prelude\n","sig":null,"attributes":[{"value":"/ internal reproduction of std prelude","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":15690,"byte_end":15730,"line_start":447,"line_end":447,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":2174},{"krate":0,"index":2184},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":2187},{"krate":0,"index":2306},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2297},{"krate":0,"index":2295},{"krate":0,"index":2294},{"krate":0,"index":2308},{"krate":0,"index":99}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16446,"byte_end":16458,"line_start":484,"line_end":484,"column_start":1,"column_end":13}},{"value":"! Error management","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22506,"byte_end":22526,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22527,"byte_end":22530,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Parsers are generic over their error type, requiring that it implements","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22531,"byte_end":22606,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! the `error::ParseError<Input>` trait.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22607,"byte_end":22648,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23019,"byte_end":23029,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<I>: Sized","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" This trait must be implemented by the error type of a nom parser.","sig":null,"attributes":[{"value":"/ This trait must be implemented by the error type of a nom parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22706,"byte_end":22775,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22776,"byte_end":22779,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are already implementations of it for `(Input, ErrorKind)`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22780,"byte_end":22848,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ and `VerboseError<Input>`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22849,"byte_end":22879,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22880,"byte_end":22883,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides methods to create an error from some combinators,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22884,"byte_end":22949,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ and combine existing errors in combinators like `alt`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":22950,"byte_end":23008,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23113,"byte_end":23128,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"name":"from_error_kind","qualname":"::error::ParseError::from_error_kind","value":"pub fn from_error_kind(I, ErrorKind) -> Self","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23044,"byte_end":23107,"line_start":17,"line_end":17,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23376,"byte_end":23382,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"name":"append","qualname":"::error::ParseError::append","value":"pub fn append(I, ErrorKind, Self) -> Self","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23168,"byte_end":23236,"line_start":20,"line_end":20,"column_start":3,"column_end":71}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23239,"byte_end":23304,"line_start":21,"line_end":21,"column_start":3,"column_end":68}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23307,"byte_end":23370,"line_start":22,"line_end":22,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23510,"byte_end":23519,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"name":"from_char","qualname":"::error::ParseError::from_char","value":"pub fn from_char(I, char) -> Self","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Creates an error from an input position and an expected character\n","sig":null,"attributes":[{"value":"/ Creates an error from an input position and an expected character","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23435,"byte_end":23504,"line_start":25,"line_end":25,"column_start":3,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23730,"byte_end":23732,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"name":"or","qualname":"::error::ParseError::or","value":"pub fn or(Self, Self) -> Self","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Combines two existing errors. This function is used to compare errors\n generated in various branches of [alt]\n","sig":null,"attributes":[{"value":"/ Combines two existing errors. This function is used to compare errors","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23606,"byte_end":23679,"line_start":30,"line_end":30,"column_start":3,"column_end":76}},{"value":"/ generated in various branches of [alt]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23682,"byte_end":23724,"line_start":31,"line_end":31,"column_start":3,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23892,"byte_end":23904,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"ContextError","qualname":"::error::ContextError","value":"ContextError<I>: Sized","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" This trait is required by the `context` combinator to add a static string\n to an existing error\n","sig":null,"attributes":[{"value":"/ This trait is required by the `context` combinator to add a static string","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23779,"byte_end":23856,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ to an existing error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23857,"byte_end":23881,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24154,"byte_end":24165,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"name":"add_context","qualname":"::error::ContextError::add_context","value":"pub fn add_context(I, &'static str, Self) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23919,"byte_end":24005,"line_start":40,"line_end":40,"column_start":3,"column_end":89}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24008,"byte_end":24093,"line_start":41,"line_end":41,"column_start":3,"column_end":88}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24096,"byte_end":24148,"line_start":42,"line_end":42,"column_start":3,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24381,"byte_end":24398,"line_start":50,"line_end":50,"column_start":11,"column_end":28},"name":"FromExternalError","qualname":"::error::FromExternalError","value":"FromExternalError<I, E>","parent":null,"children":[{"krate":0,"index":46}],"decl_id":null,"docs":" This trait is required by the [map_res] combinator to integrate\n error types from external functions, like [std::str::FromStr]\n","sig":null,"attributes":[{"value":"/ This trait is required by the [map_res] combinator to integrate","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24237,"byte_end":24304,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ error types from external functions, like [std::str::FromStr]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24305,"byte_end":24370,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24537,"byte_end":24556,"line_start":53,"line_end":53,"column_start":6,"column_end":25},"name":"from_external_error","qualname":"::error::FromExternalError::from_external_error","value":"pub fn from_external_error(I, ErrorKind, E) -> Self","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, an [ErrorKind] indicating the\n wrapping parser, and an external error\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, an [ErrorKind] indicating the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24409,"byte_end":24486,"line_start":51,"line_end":51,"column_start":3,"column_end":80}},{"value":"/ wrapping parser, and an external error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24489,"byte_end":24531,"line_start":52,"line_end":52,"column_start":3,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2174},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24708,"byte_end":24713,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { input, code }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"decl_id":null,"docs":" default error type, only contains the error' location and code\n","sig":null,"attributes":[{"value":"/ default error type, only contains the error' location and code","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24602,"byte_end":24668,"line_start":56,"line_end":56,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24771,"byte_end":24776,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"name":"input","qualname":"::error::Error::input","value":"I","parent":{"krate":0,"index":2174},"children":[],"decl_id":null,"docs":" position of the error in the input data\n","sig":null,"attributes":[{"value":"/ position of the error in the input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24721,"byte_end":24764,"line_start":59,"line_end":59,"column_start":3,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2177},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24808,"byte_end":24812,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"name":"code","qualname":"::error::Error::code","value":"error::ErrorKind","parent":{"krate":0,"index":2174},"children":[],"decl_id":null,"docs":" nom error code\n","sig":null,"attributes":[{"value":"/ nom error code","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24783,"byte_end":24801,"line_start":61,"line_end":61,"column_start":3,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24888,"byte_end":24891,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"new","qualname":"<Error<I>>::new","value":"pub fn new(I, ErrorKind) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" creates a new basic error\n","sig":null,"attributes":[{"value":"/ creates a new basic error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24849,"byte_end":24878,"line_start":66,"line_end":66,"column_start":3,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26643,"byte_end":26653,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"make_error","qualname":"::error::make_error","value":"pub fn make_error<I, E: ParseError<I>>(I, ErrorKind) -> E","parent":null,"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26572,"byte_end":26635,"line_start":133,"line_end":133,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26952,"byte_end":26964,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"append_error","qualname":"::error::append_error","value":"pub fn append_error<I, E: ParseError<I>>(I, ErrorKind, E) -> E","parent":null,"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26746,"byte_end":26814,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26815,"byte_end":26880,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":26881,"byte_end":26944,"line_start":140,"line_end":140,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":30088,"byte_end":30095,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"context","qualname":"::error::context","value":"pub fn context<I: Clone, E: ContextError<I>, F, O>(&'static str, F)\n-> /*impl Trait*/ where F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Create a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":29856,"byte_end":29941,"line_start":230,"line_end":230,"column_start":1,"column_end":86}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":29942,"byte_end":30027,"line_start":231,"line_end":231,"column_start":1,"column_end":86}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":30028,"byte_end":30080,"line_start":232,"line_end":232,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34218,"byte_end":34221,"line_start":367,"line_end":367,"column_start":3,"column_end":6},"name":"Tag","qualname":"::error::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34225,"byte_end":34231,"line_start":368,"line_end":368,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::error::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34235,"byte_end":34241,"line_start":369,"line_end":369,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::error::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34245,"byte_end":34248,"line_start":370,"line_end":370,"column_start":3,"column_end":6},"name":"Alt","qualname":"::error::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34252,"byte_end":34257,"line_start":371,"line_end":371,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::error::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34261,"byte_end":34264,"line_start":372,"line_end":372,"column_start":3,"column_end":6},"name":"IsA","qualname":"::error::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34268,"byte_end":34281,"line_start":373,"line_end":373,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::error::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34285,"byte_end":34306,"line_start":374,"line_end":374,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::error::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34310,"byte_end":34315,"line_start":375,"line_end":375,"column_start":3,"column_end":8},"name":"Many0","qualname":"::error::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34319,"byte_end":34324,"line_start":376,"line_end":376,"column_start":3,"column_end":8},"name":"Many1","qualname":"::error::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34328,"byte_end":34336,"line_start":377,"line_end":377,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::error::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2210},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34340,"byte_end":34345,"line_start":378,"line_end":378,"column_start":3,"column_end":8},"name":"Count","qualname":"::error::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34349,"byte_end":34358,"line_start":379,"line_end":379,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::error::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34362,"byte_end":34373,"line_start":380,"line_end":380,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::error::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34377,"byte_end":34387,"line_start":381,"line_end":381,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::error::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34391,"byte_end":34396,"line_start":382,"line_end":382,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::error::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2220},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34400,"byte_end":34405,"line_start":383,"line_end":383,"column_start":3,"column_end":8},"name":"Digit","qualname":"::error::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2222},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34409,"byte_end":34417,"line_start":384,"line_end":384,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::error::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2224},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34421,"byte_end":34429,"line_start":385,"line_end":385,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::error::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34433,"byte_end":34445,"line_start":386,"line_end":386,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::error::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34449,"byte_end":34454,"line_start":387,"line_end":387,"column_start":3,"column_end":8},"name":"Space","qualname":"::error::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34458,"byte_end":34468,"line_start":388,"line_end":388,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::error::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34472,"byte_end":34485,"line_start":389,"line_end":389,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::error::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34489,"byte_end":34492,"line_start":390,"line_end":390,"column_start":3,"column_end":6},"name":"Eof","qualname":"::error::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34496,"byte_end":34502,"line_start":391,"line_end":391,"column_start":3,"column_end":9},"name":"Switch","qualname":"::error::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34506,"byte_end":34513,"line_start":392,"line_end":392,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::error::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34517,"byte_end":34522,"line_start":393,"line_end":393,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::error::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34526,"byte_end":34532,"line_start":394,"line_end":394,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::error::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34536,"byte_end":34540,"line_start":395,"line_end":395,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34544,"byte_end":34548,"line_start":396,"line_end":396,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::error::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34552,"byte_end":34563,"line_start":397,"line_end":397,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::error::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34567,"byte_end":34580,"line_start":398,"line_end":398,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::error::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34584,"byte_end":34594,"line_start":399,"line_end":399,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::error::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34598,"byte_end":34611,"line_start":400,"line_end":400,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::error::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2256},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34615,"byte_end":34629,"line_start":401,"line_end":401,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::error::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2258},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34633,"byte_end":34643,"line_start":402,"line_end":402,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::error::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2260},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34647,"byte_end":34655,"line_start":403,"line_end":403,"column_start":3,"column_end":11},"name":"Complete","qualname":"::error::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2262},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34659,"byte_end":34662,"line_start":404,"line_end":404,"column_start":3,"column_end":6},"name":"Fix","qualname":"::error::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2264},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34666,"byte_end":34673,"line_start":405,"line_end":405,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::error::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2266},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34677,"byte_end":34693,"line_start":406,"line_end":406,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::error::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2268},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34697,"byte_end":34705,"line_start":407,"line_end":407,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::error::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34709,"byte_end":34715,"line_start":408,"line_end":408,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::error::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34719,"byte_end":34722,"line_start":409,"line_end":409,"column_start":3,"column_end":6},"name":"Not","qualname":"::error::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2274},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34726,"byte_end":34737,"line_start":410,"line_end":410,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::error::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34741,"byte_end":34747,"line_start":411,"line_end":411,"column_start":3,"column_end":9},"name":"Verify","qualname":"::error::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34751,"byte_end":34760,"line_start":412,"line_end":412,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::error::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34764,"byte_end":34775,"line_start":413,"line_end":413,"column_start":3,"column_end":14},"name":"TakeWhileMN","qualname":"::error::ErrorKind::TakeWhileMN","value":"ErrorKind::TakeWhileMN","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34779,"byte_end":34786,"line_start":414,"line_end":414,"column_start":3,"column_end":10},"name":"ParseTo","qualname":"::error::ErrorKind::ParseTo","value":"ErrorKind::ParseTo","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34790,"byte_end":34798,"line_start":415,"line_end":415,"column_start":3,"column_end":11},"name":"TooLarge","qualname":"::error::ErrorKind::TooLarge","value":"ErrorKind::TooLarge","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2286},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34802,"byte_end":34812,"line_start":416,"line_end":416,"column_start":3,"column_end":13},"name":"Many0Count","qualname":"::error::ErrorKind::Many0Count","value":"ErrorKind::Many0Count","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2288},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34816,"byte_end":34826,"line_start":417,"line_end":417,"column_start":3,"column_end":13},"name":"Many1Count","qualname":"::error::ErrorKind::Many1Count","value":"ErrorKind::Many1Count","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34830,"byte_end":34835,"line_start":418,"line_end":418,"column_start":3,"column_end":8},"name":"Float","qualname":"::error::ErrorKind::Float","value":"ErrorKind::Float","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34839,"byte_end":34846,"line_start":419,"line_end":419,"column_start":3,"column_end":10},"name":"Satisfy","qualname":"::error::ErrorKind::Satisfy","value":"ErrorKind::Satisfy","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2187},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34204,"byte_end":34213,"line_start":366,"line_end":366,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    ManyTill,\n    Count,\n    TakeUntil,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    NonEmpty,\n    ManyMN,\n    Not,\n    Permutation,\n    Verify,\n    TakeTill1,\n    TakeWhileMN,\n    ParseTo,\n    TooLarge,\n    Many0Count,\n    Many1Count,\n    Float,\n    Satisfy,\n}","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2274},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292}],"decl_id":null,"docs":" Indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ Indicates which parser returned an error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34053,"byte_end":34097,"line_start":362,"line_end":362,"column_start":1,"column_end":45}},{"value":"allow(deprecated, missing_docs)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34161,"byte_end":34194,"line_start":365,"line_end":365,"column_start":1,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34098,"byte_end":34114,"line_start":363,"line_end":363,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2308},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34934,"byte_end":34946,"line_start":425,"line_end":425,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::error::error_to_u32","value":"pub fn error_to_u32(&ErrorKind) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a number\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34868,"byte_end":34888,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"/ Converts an ErrorKind to a number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34889,"byte_end":34926,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"rustfmt::skip","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":34851,"byte_end":34867,"line_start":422,"line_end":422,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37644,"byte_end":37655,"line_start":487,"line_end":487,"column_start":10,"column_end":21},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a text description\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37564,"byte_end":37584,"line_start":485,"line_end":485,"column_start":3,"column_end":23}},{"value":"/ Converts an ErrorKind to a text description","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37587,"byte_end":37634,"line_start":486,"line_end":486,"column_start":3,"column_end":50}},{"value":"rustfmt::skip","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37545,"byte_end":37561,"line_start":484,"line_end":484,"column_start":3,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50871,"byte_end":50878,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"Result<(I, O), Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50379,"byte_end":50420,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50421,"byte_end":50424,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It depends on the input type `I`, the output type `O`, and the error type `E`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50425,"byte_end":50506,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ (by default `(I, nom::ErrorKind)`)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50507,"byte_end":50545,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50546,"byte_end":50549,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Ok` side is a pair containing the remainder of the input (the part of the data that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50550,"byte_end":50642,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ was not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50643,"byte_end":50737,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50738,"byte_end":50741,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Outside of the parsing code, you can use the [Finish::finish] method to convert","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50742,"byte_end":50825,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ it to a more common result type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50826,"byte_end":50861,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51015,"byte_end":51021,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"Finish","qualname":"::internal::Finish","value":"Finish<I, O, E>","parent":null,"children":[{"krate":0,"index":119}],"decl_id":null,"docs":" Helper trait to convert a parser's result to a more manageable type\n","sig":null,"attributes":[{"value":"/ Helper trait to convert a parser's result to a more manageable type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":50933,"byte_end":51004,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51767,"byte_end":51773,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"finish","qualname":"::internal::Finish::finish","value":"pub fn finish(Self) -> Result<(I, O), E>","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" converts the parser's result to a type that is more consumable by error\n management libraries. It keeps the same `Ok` branch, and merges `Err::Error`\n and `Err::Failure` into the `Err` side.","sig":null,"attributes":[{"value":"/ converts the parser's result to a type that is more consumable by error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51035,"byte_end":51110,"line_start":22,"line_end":22,"column_start":3,"column_end":78}},{"value":"/ management libraries. It keeps the same `Ok` branch, and merges `Err::Error`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51113,"byte_end":51193,"line_start":23,"line_end":23,"column_start":3,"column_end":83}},{"value":"/ and `Err::Failure` into the `Err` side.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51196,"byte_end":51239,"line_start":24,"line_end":24,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51242,"byte_end":51245,"line_start":25,"line_end":25,"column_start":3,"column_end":6}},{"value":"/ *warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51248,"byte_end":51330,"line_start":26,"line_end":26,"column_start":3,"column_end":85}},{"value":"/ - \"complete\" parsers: It will not be an issue, `Incomplete` is never used","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51333,"byte_end":51410,"line_start":27,"line_end":27,"column_start":3,"column_end":80}},{"value":"/ - \"streaming\" parsers: `Incomplete` will be returned if there's not enough data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51413,"byte_end":51496,"line_start":28,"line_end":28,"column_start":3,"column_end":86}},{"value":"/ for the parser to decide, and you should gather more data before parsing again.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51499,"byte_end":51582,"line_start":29,"line_end":29,"column_start":3,"column_end":86}},{"value":"/ Once the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51585,"byte_end":51676,"line_start":30,"line_end":30,"column_start":3,"column_end":94}},{"value":"/ you can get out of the parsing loop and call `finish()` on the parser's result","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51679,"byte_end":51761,"line_start":31,"line_end":31,"column_start":3,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52492,"byte_end":52499,"line_start":52,"line_end":52,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":" Needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ Needs more data, but we do not know how much","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52441,"byte_end":52489,"line_start":51,"line_end":51,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52550,"byte_end":52554,"line_start":54,"line_end":54,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(NonZeroUsize)","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":" Contains the required data size in bytes\n","sig":null,"attributes":[{"value":"/ Contains the required data size in bytes","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52503,"byte_end":52547,"line_start":53,"line_end":53,"column_start":3,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2310},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52430,"byte_end":52436,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed {\n\n    /// Needs more data, but we do not know how much\n    Unknown,\n\n    /// Contains the required data size in bytes\n    Size(NonZeroUsize),\n}","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2313}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52266,"byte_end":52339,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52385,"byte_end":52420,"line_start":49,"line_end":49,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52679,"byte_end":52682,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"new","qualname":"<Needed>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero\n","sig":null,"attributes":[{"value":"/ Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52589,"byte_end":52669,"line_start":58,"line_end":58,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52873,"byte_end":52881,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if we know how many bytes we need\n","sig":null,"attributes":[{"value":"/ Indicates if we know how many bytes we need","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52816,"byte_end":52863,"line_start":66,"line_end":66,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53032,"byte_end":53035,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: Fn(NonZeroUsize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52927,"byte_end":53010,"line_start":71,"line_end":71,"column_start":3,"column_end":86}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53013,"byte_end":53022,"line_start":72,"line_end":72,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54107,"byte_end":54117,"line_start":99,"line_end":99,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::Err::Incomplete","value":"Err::Incomplete(Needed)","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" There was not enough data\n","sig":null,"attributes":[{"value":"/ There was not enough data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54075,"byte_end":54104,"line_start":98,"line_end":98,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2333},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54173,"byte_end":54178,"line_start":101,"line_end":101,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::Err::Error","value":"Err::Error(E)","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The parser had an error (recoverable)\n","sig":null,"attributes":[{"value":"/ The parser had an error (recoverable)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54129,"byte_end":54170,"line_start":100,"line_end":100,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54341,"byte_end":54348,"line_start":105,"line_end":105,"column_start":3,"column_end":10},"name":"Failure","qualname":"::internal::Err::Failure","value":"Err::Failure(E)","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The parser had an unrecoverable error: we got to the right\n branch and we know other branches won't work, so backtrack\n as fast as possible\n","sig":null,"attributes":[{"value":"/ The parser had an unrecoverable error: we got to the right","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54185,"byte_end":54247,"line_start":102,"line_end":102,"column_start":3,"column_end":65}},{"value":"/ branch and we know other branches won't work, so backtrack","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54250,"byte_end":54312,"line_start":103,"line_end":103,"column_start":3,"column_end":65}},{"value":"/ as fast as possible","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54315,"byte_end":54338,"line_start":104,"line_end":104,"column_start":3,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2328},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54064,"byte_end":54067,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<E> {\n\n    /// There was not enough data\n    Incomplete(Needed),\n\n    /// The parser had an error (recoverable)\n    Error(E),\n\n    /// The parser had an unrecoverable error: we got to the right\n    /// branch and we know other branches won't work, so backtrack\n    /// as fast as possible\n    Failure(E),\n}","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336}],"decl_id":null,"docs":" The `Err` enum indicates the parser was not successful","sig":null,"attributes":[{"value":"/ The `Err` enum indicates the parser was not successful","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53182,"byte_end":53240,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53241,"byte_end":53244,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It has three cases:","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53245,"byte_end":53268,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53269,"byte_end":53272,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ * `Incomplete` indicates that more data is needed to decide. The `Needed` enum","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53273,"byte_end":53355,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ can contain how many additional bytes are necessary. If you are sure your parser","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53356,"byte_end":53440,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ is working on full data, you can wrap your parser with the `complete` combinator","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53441,"byte_end":53525,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ to transform that case in `Error`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53526,"byte_end":53563,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ * `Error` means some parser did not succeed, but another one might (as an example,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53564,"byte_end":53650,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/ when testing different branches of an `alt` combinator)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53651,"byte_end":53710,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/ * `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53711,"byte_end":53801,"line_start":91,"line_end":91,"column_start":1,"column_end":91}},{"value":"/ to decide on the next parser to apply, and that parser fails, you know there's no need","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53802,"byte_end":53892,"line_start":92,"line_end":92,"column_start":1,"column_end":91}},{"value":"/ to try other parsers, you were already in the right branch, so the data is invalid","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53893,"byte_end":53979,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":53980,"byte_end":53983,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54019,"byte_end":54054,"line_start":96,"line_end":96,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54422,"byte_end":54435,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<Err<E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the result is Incomplete\n","sig":null,"attributes":[{"value":"/ Tests if the result is Incomplete","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54375,"byte_end":54412,"line_start":109,"line_end":109,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54600,"byte_end":54603,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"name":"map","qualname":"<Err<E>>::map","value":"pub fn map<E2, F>(Self, F) -> Err<E2> where F: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Applies the given function to the inner error\n","sig":null,"attributes":[{"value":"/ Applies the given function to the inner error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54541,"byte_end":54590,"line_start":118,"line_end":118,"column_start":3,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54920,"byte_end":54927,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"convert","qualname":"<Err<E>>::convert","value":"pub fn convert<F>(Err<F>) -> Self where E: From<F>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54834,"byte_end":54910,"line_start":130,"line_end":130,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":55157,"byte_end":55166,"line_start":141,"line_end":141,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<(T, ErrorKind)>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<(U, ErrorKind)> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":55065,"byte_end":55147,"line_start":140,"line_end":140,"column_start":3,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56817,"byte_end":56823,"line_start":203,"line_end":203,"column_start":11,"column_end":17},"name":"Parser","qualname":"::internal::Parser","value":"Parser<I, O, E>","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":168}],"decl_id":null,"docs":" All nom parsers implement this trait\n","sig":null,"attributes":[{"value":"/ All nom parsers implement this trait","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56766,"byte_end":56806,"line_start":202,"line_end":202,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56977,"byte_end":56982,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"name":"parse","qualname":"::internal::Parser::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" A parser takes in input type, and returns a `Result` containing\n either the remaining input and the output value, or an error\n","sig":null,"attributes":[{"value":"/ A parser takes in input type, and returns a `Result` containing","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56837,"byte_end":56904,"line_start":204,"line_end":204,"column_start":3,"column_end":70}},{"value":"/ either the remaining input and the output value, or an error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56907,"byte_end":56971,"line_start":205,"line_end":205,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57081,"byte_end":57084,"line_start":209,"line_end":209,"column_start":6,"column_end":9},"name":"map","qualname":"::internal::Parser::map","value":"pub fn map<G, O2>(Self, G) -> Map<Self, G, O> where G: Fn(O) -> O2,\nSelf: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Maps a function over the result of a parser\n","sig":null,"attributes":[{"value":"/ Maps a function over the result of a parser","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57028,"byte_end":57075,"line_start":208,"line_end":208,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57380,"byte_end":57388,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"name":"flat_map","qualname":"::internal::Parser::flat_map","value":"pub fn flat_map<G, H, O2>(Self, G) -> FlatMap<Self, G, O> where G: Fn(O) -> H,\nH: Parser<I, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Creates a second parser from the output of the first one, then apply over the rest of the input\n","sig":null,"attributes":[{"value":"/ Creates a second parser from the output of the first one, then apply over the rest of the input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57275,"byte_end":57374,"line_start":221,"line_end":221,"column_start":3,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57680,"byte_end":57688,"line_start":236,"line_end":236,"column_start":6,"column_end":14},"name":"and_then","qualname":"::internal::Parser::and_then","value":"pub fn and_then<G, O2>(Self, G) -> AndThen<Self, G, O> where\nG: Parser<O, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Applies a second parser over the output of the first one\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the output of the first one","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57614,"byte_end":57674,"line_start":235,"line_end":235,"column_start":3,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57978,"byte_end":57981,"line_start":249,"line_end":249,"column_start":6,"column_end":9},"name":"and","qualname":"::internal::Parser::and","value":"pub fn and<G, O2>(Self, G) -> And<Self, G> where G: Parser<I, O2, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Applies a second parser after the first one, return their results as a tuple\n","sig":null,"attributes":[{"value":"/ Applies a second parser after the first one, return their results as a tuple","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":57892,"byte_end":57972,"line_start":248,"line_end":248,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58187,"byte_end":58189,"line_start":258,"line_end":258,"column_start":6,"column_end":8},"name":"or","qualname":"::internal::Parser::or","value":"pub fn or<G>(Self, G) -> Or<Self, G> where G: Parser<I, O, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Applies a second parser over the input if the first one failed\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the input if the first one failed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58115,"byte_end":58181,"line_start":257,"line_end":257,"column_start":3,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58451,"byte_end":58455,"line_start":268,"line_end":268,"column_start":6,"column_end":10},"name":"into","qualname":"::internal::Parser::into","value":"pub fn into<O2: From<O>, E2: From<E>>(Self) -> Into<Self, O, O2, E, E2> where\nSelf: core::marker::Sized","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" automatically converts the parser's output and error values to another type, as long as they\n implement the `From` trait\n","sig":null,"attributes":[{"value":"/ automatically converts the parser's output and error values to another type, as long as they","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58316,"byte_end":58412,"line_start":266,"line_end":266,"column_start":3,"column_end":99}},{"value":"/ implement the `From` trait","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58415,"byte_end":58445,"line_start":267,"line_end":267,"column_start":3,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59263,"byte_end":59266,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"Map","qualname":"::internal::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" Implementation of `Parser:::map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser:::map`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59179,"byte_end":59215,"line_start":301,"line_end":301,"column_start":1,"column_end":37}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59216,"byte_end":59251,"line_start":302,"line_end":302,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59684,"byte_end":59691,"line_start":320,"line_end":320,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::internal::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":" Implementation of `Parser::flat_map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::flat_map`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59596,"byte_end":59636,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59637,"byte_end":59672,"line_start":319,"line_end":319,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60097,"byte_end":60104,"line_start":337,"line_end":337,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::internal::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" Implementation of `Parser::and_then`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and_then`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60009,"byte_end":60049,"line_start":335,"line_end":335,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60050,"byte_end":60085,"line_start":336,"line_end":336,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60517,"byte_end":60520,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"And","qualname":"::internal::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"decl_id":null,"docs":" Implementation of `Parser::and`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60434,"byte_end":60469,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60470,"byte_end":60505,"line_start":354,"line_end":354,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60894,"byte_end":60896,"line_start":372,"line_end":372,"column_start":12,"column_end":14},"name":"Or","qualname":"::internal::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" Implementation of `Parser::or`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::or`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60812,"byte_end":60846,"line_start":370,"line_end":370,"column_start":1,"column_end":35}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60847,"byte_end":60882,"line_start":371,"line_end":371,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61393,"byte_end":61397,"line_start":393,"line_end":393,"column_start":12,"column_end":16},"name":"Into","qualname":"::internal::Into","value":"Into {  }","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Implementation of `Parser::into`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::into`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61309,"byte_end":61345,"line_start":391,"line_end":391,"column_start":1,"column_end":37}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61346,"byte_end":61381,"line_start":392,"line_end":392,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":63440,"byte_end":63451,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":296}],"decl_id":null,"docs":" Abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ Abstract method to calculate the input length","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":63380,"byte_end":63429,"line_start":20,"line_end":20,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":63559,"byte_end":63568,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ Calculates the input length, as indicated by its name,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":63456,"byte_end":63514,"line_start":22,"line_end":22,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":63517,"byte_end":63553,"line_start":23,"line_end":23,"column_start":3,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":307},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":64330,"byte_end":64336,"line_start":63,"line_end":63,"column_start":11,"column_end":17},"name":"Offset","qualname":"::traits::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":308}],"decl_id":null,"docs":" Useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ Useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":64230,"byte_end":64319,"line_start":62,"line_end":62,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":64423,"byte_end":64429,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"name":"offset","qualname":"::traits::Offset::offset","value":"pub fn offset(&Self, &Self) -> usize","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ Offset between the first byte of self and the first byte of the argument","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":64341,"byte_end":64417,"line_start":64,"line_end":64,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":65660,"byte_end":65667,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::traits::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":320}],"decl_id":null,"docs":" Helper trait for types that can be viewed as a byte slice\n","sig":null,"attributes":[{"value":"/ Helper trait for types that can be viewed as a byte slice","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":65588,"byte_end":65649,"line_start":128,"line_end":128,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":65718,"byte_end":65726,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::traits::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":" Casts the input type to a byte slice\n","sig":null,"attributes":[{"value":"/ Casts the input type to a byte slice","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":65672,"byte_end":65712,"line_start":130,"line_end":130,"column_start":3,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":332},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67496,"byte_end":67502,"line_start":230,"line_end":230,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" Transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ Transforms common types to a char for basic token parsing","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67424,"byte_end":67485,"line_start":229,"line_end":229,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67539,"byte_end":67546,"line_start":232,"line_end":232,"column_start":6,"column_end":13},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67507,"byte_end":67533,"line_start":231,"line_end":231,"column_start":3,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67723,"byte_end":67731,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67565,"byte_end":67611,"line_start":234,"line_end":234,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67614,"byte_end":67617,"line_start":235,"line_end":235,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str` it recognizes alphabetic","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67620,"byte_end":67668,"line_start":236,"line_end":236,"column_start":3,"column_end":51}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67671,"byte_end":67717,"line_start":237,"line_end":237,"column_start":3,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67827,"byte_end":67838,"line_start":242,"line_end":242,"column_start":6,"column_end":17},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67750,"byte_end":67796,"line_start":240,"line_end":240,"column_start":3,"column_end":49}},{"value":"/ or a decimal digit","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67799,"byte_end":67821,"line_start":241,"line_end":241,"column_start":3,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67900,"byte_end":67912,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"pub fn is_dec_digit(Self) -> bool","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is a decimal digit","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67856,"byte_end":67894,"line_start":243,"line_end":243,"column_start":3,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67971,"byte_end":67983,"line_start":246,"line_end":246,"column_start":6,"column_end":18},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an hex digit","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":67930,"byte_end":67965,"line_start":245,"line_end":245,"column_start":3,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":68044,"byte_end":68056,"line_start":248,"line_end":248,"column_start":6,"column_end":18},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an octal digit","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":68001,"byte_end":68038,"line_start":247,"line_end":247,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":68114,"byte_end":68117,"line_start":250,"line_end":250,"column_start":6,"column_end":9},"name":"len","qualname":"::traits::AsChar::len","value":"pub fn len(Self) -> usize","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ Gets the len in bytes for self","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":68074,"byte_end":68108,"line_start":249,"line_end":249,"column_start":3,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70656,"byte_end":70665,"line_start":381,"line_end":381,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382}],"decl_id":null,"docs":" Abstracts common iteration operations on the input type\n","sig":null,"attributes":[{"value":"/ Abstracts common iteration operations on the input type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70586,"byte_end":70645,"line_start":380,"line_end":380,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70798,"byte_end":70802,"line_start":385,"line_end":385,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70670,"byte_end":70731,"line_start":382,"line_end":382,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70734,"byte_end":70737,"line_start":383,"line_end":383,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70740,"byte_end":70790,"line_start":384,"line_end":384,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":376},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71012,"byte_end":71016,"line_start":389,"line_end":389,"column_start":8,"column_end":12},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter: Iterator<Item = (usize, Self::Item)>;","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item and its position\n for use with [Slice]. If we're iterating over `&str`, the position\n corresponds to the byte index of the character\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item and its position","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70806,"byte_end":70878,"line_start":386,"line_end":386,"column_start":3,"column_end":75}},{"value":"/ for use with [Slice]. If we're iterating over `&str`, the position","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70881,"byte_end":70951,"line_start":387,"line_end":387,"column_start":3,"column_end":73}},{"value":"/ corresponds to the byte index of the character","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":70954,"byte_end":71004,"line_start":388,"line_end":388,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71122,"byte_end":71130,"line_start":392,"line_end":392,"column_start":8,"column_end":16},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem: Iterator<Item = Self::Item>;","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71059,"byte_end":71114,"line_start":391,"line_end":391,"column_start":3,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71234,"byte_end":71246,"line_start":395,"line_end":395,"column_start":6,"column_end":18},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"pub fn iter_indices(&Self) -> Self::Iter","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements and their byte offsets","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71164,"byte_end":71228,"line_start":394,"line_end":394,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71318,"byte_end":71331,"line_start":397,"line_end":397,"column_start":6,"column_end":19},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"pub fn iter_elements(&Self) -> Self::IterElem","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71271,"byte_end":71312,"line_start":396,"line_end":396,"column_start":3,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71408,"byte_end":71416,"line_start":399,"line_end":399,"column_start":6,"column_end":14},"name":"position","qualname":"::traits::InputIter::position","value":"pub fn position<P>(&Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ Finds the byte position of the element","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71360,"byte_end":71402,"line_start":398,"line_end":398,"column_start":3,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71570,"byte_end":71581,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"pub fn slice_index(&Self, usize) -> Result<usize, Needed>","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ Get the byte offset from the element's position in the stream","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71499,"byte_end":71564,"line_start":402,"line_end":402,"column_start":3,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71675,"byte_end":71684,"line_start":407,"line_end":407,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake: Sized","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" Abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ Abstracts slicing operations","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71632,"byte_end":71664,"line_start":406,"line_end":406,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71764,"byte_end":71768,"line_start":409,"line_end":409,"column_start":6,"column_end":10},"name":"take","qualname":"::traits::InputTake::take","value":"pub fn take(&Self, usize) -> Self","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Returns a slice of `count` bytes. panics if count > length\n","sig":null,"attributes":[{"value":"/ Returns a slice of `count` bytes. panics if count > length","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71696,"byte_end":71758,"line_start":408,"line_end":408,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71880,"byte_end":71890,"line_start":411,"line_end":411,"column_start":6,"column_end":16},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"pub fn take_split(&Self, usize) -> (Self, Self)","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Split the stream at the `count` byte offset. panics if count > length\n","sig":null,"attributes":[{"value":"/ Split the stream at the `count` byte offset. panics if count > length","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71801,"byte_end":71874,"line_start":410,"line_end":410,"column_start":3,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":415},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75547,"byte_end":75565,"line_start":573,"line_end":573,"column_start":11,"column_end":29},"name":"UnspecializedInput","qualname":"::traits::UnspecializedInput","value":"UnspecializedInput","parent":null,"children":[],"decl_id":null,"docs":" Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","sig":null,"attributes":[{"value":"/ Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":74982,"byte_end":75093,"line_start":564,"line_end":564,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75094,"byte_end":75097,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ When implementing a custom input type, it is possible to use directly the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75098,"byte_end":75175,"line_start":566,"line_end":566,"column_start":1,"column_end":78}},{"value":"/ default implementation: If the input type implements `InputLength`, `InputIter`,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75176,"byte_end":75260,"line_start":567,"line_end":567,"column_start":1,"column_end":85}},{"value":"/ `InputTake` and `Clone`, you can implement `UnspecializedInput` and get","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75261,"byte_end":75336,"line_start":568,"line_end":568,"column_start":1,"column_end":76}},{"value":"/ a default version of `InputTakeAtPosition` and `Compare`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75337,"byte_end":75398,"line_start":569,"line_end":569,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75399,"byte_end":75402,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, you might want to write a custom implementation of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75403,"byte_end":75482,"line_start":571,"line_end":571,"column_start":1,"column_end":80}},{"value":"/ `InputTakeAtPosition` (like the one for `&[u8]`).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75483,"byte_end":75536,"line_start":572,"line_end":572,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":416},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75764,"byte_end":75783,"line_start":578,"line_end":578,"column_start":11,"column_end":30},"name":"InputTakeAtPosition","qualname":"::traits::InputTakeAtPosition","value":"InputTakeAtPosition: Sized","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427}],"decl_id":null,"docs":" Methods to take as much input as possible until the provided function returns true for the current element.","sig":null,"attributes":[{"value":"/ Methods to take as much input as possible until the provided function returns true for the current element.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75570,"byte_end":75681,"line_start":575,"line_end":575,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75682,"byte_end":75685,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ A large part of nom's basic parsers are built using this trait.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75686,"byte_end":75753,"line_start":577,"line_end":577,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":417},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75923,"byte_end":75927,"line_start":582,"line_end":582,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputTakeAtPosition::Item","value":"type Item;","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75795,"byte_end":75856,"line_start":579,"line_end":579,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75859,"byte_end":75862,"line_start":580,"line_end":580,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75865,"byte_end":75915,"line_start":581,"line_end":581,"column_start":3,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76184,"byte_end":76201,"line_start":588,"line_end":588,"column_start":6,"column_end":23},"name":"split_at_position","qualname":"::traits::InputTakeAtPosition::split_at_position","value":"pub fn split_at_position<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75932,"byte_end":76019,"line_start":584,"line_end":584,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76022,"byte_end":76068,"line_start":585,"line_end":585,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76071,"byte_end":76074,"line_start":586,"line_end":586,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76077,"byte_end":76178,"line_start":587,"line_end":587,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76616,"byte_end":76634,"line_start":598,"line_end":598,"column_start":6,"column_end":24},"name":"split_at_position1","qualname":"::traits::InputTakeAtPosition::split_at_position1","value":"pub fn split_at_position1<P, E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76315,"byte_end":76401,"line_start":592,"line_end":592,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76404,"byte_end":76450,"line_start":593,"line_end":593,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76453,"byte_end":76456,"line_start":594,"line_end":594,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76459,"byte_end":76500,"line_start":595,"line_end":595,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76503,"byte_end":76506,"line_start":596,"line_end":596,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76509,"byte_end":76610,"line_start":597,"line_end":597,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77033,"byte_end":77059,"line_start":610,"line_end":610,"column_start":6,"column_end":32},"name":"split_at_position_complete","qualname":"::traits::InputTakeAtPosition::split_at_position_complete","value":"pub fn split_at_position_complete<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76779,"byte_end":76866,"line_start":606,"line_end":606,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76869,"byte_end":76915,"line_start":607,"line_end":607,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76918,"byte_end":76921,"line_start":608,"line_end":608,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":76924,"byte_end":77027,"line_start":609,"line_end":609,"column_start":3,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77489,"byte_end":77516,"line_start":623,"line_end":623,"column_start":6,"column_end":33},"name":"split_at_position1_complete","qualname":"::traits::InputTakeAtPosition::split_at_position1_complete","value":"pub fn split_at_position1_complete<P,\n                                   E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77186,"byte_end":77272,"line_start":617,"line_end":617,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77275,"byte_end":77321,"line_start":618,"line_end":618,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77324,"byte_end":77327,"line_start":619,"line_end":619,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77330,"byte_end":77371,"line_start":620,"line_end":620,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77374,"byte_end":77377,"line_start":621,"line_end":621,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77380,"byte_end":77483,"line_start":622,"line_end":622,"column_start":3,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2583},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84290,"byte_end":84292,"line_start":899,"line_end":899,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":2582},"children":[],"decl_id":null,"docs":" Comparison was successful\n","sig":null,"attributes":[{"value":"/ Comparison was successful","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84258,"byte_end":84287,"line_start":898,"line_end":898,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2585},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84331,"byte_end":84341,"line_start":901,"line_end":901,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":2582},"children":[],"decl_id":null,"docs":" We need more data to be sure\n","sig":null,"attributes":[{"value":"/ We need more data to be sure","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84296,"byte_end":84328,"line_start":900,"line_end":900,"column_start":3,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2587},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84369,"byte_end":84374,"line_start":903,"line_end":903,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":2582},"children":[],"decl_id":null,"docs":" Comparison failed\n","sig":null,"attributes":[{"value":"/ Comparison failed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84345,"byte_end":84366,"line_start":902,"line_end":902,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2582},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84240,"byte_end":84253,"line_start":897,"line_end":897,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"pub enum CompareResult {\n\n    /// Comparison was successful\n    Ok,\n\n    /// We need more data to be sure\n    Incomplete,\n\n    /// Comparison failed\n    Error,\n}","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2587}],"decl_id":null,"docs":" Indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ Indicates wether a comparison was successful, an error, or","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84112,"byte_end":84174,"line_start":894,"line_end":894,"column_start":1,"column_end":63}},{"value":"/ if more data was needed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84175,"byte_end":84202,"line_start":895,"line_end":895,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":479},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84425,"byte_end":84432,"line_start":907,"line_end":907,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" Abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ Abstracts comparison operations","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84379,"byte_end":84414,"line_start":906,"line_end":906,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84493,"byte_end":84500,"line_start":909,"line_end":909,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"pub fn compare(&Self, T) -> CompareResult","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84440,"byte_end":84487,"line_start":908,"line_end":908,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84804,"byte_end":84819,"line_start":917,"line_end":917,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"pub fn compare_no_case(&Self, T) -> CompareResult","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84534,"byte_end":84581,"line_start":910,"line_end":910,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84584,"byte_end":84614,"line_start":911,"line_end":911,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84617,"byte_end":84620,"line_start":912,"line_end":912,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str`, the comparison is done","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84623,"byte_end":84670,"line_start":913,"line_end":913,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84673,"byte_end":84718,"line_start":914,"line_end":914,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84721,"byte_end":84771,"line_start":915,"line_end":915,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":84774,"byte_end":84798,"line_start":916,"line_end":916,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":509},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":88585,"byte_end":88594,"line_start":1083,"line_end":1083,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" Look for a token in self\n","sig":null,"attributes":[{"value":"/ Look for a token in self","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":88546,"byte_end":88574,"line_start":1082,"line_end":1082,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":88651,"byte_end":88661,"line_start":1085,"line_end":1085,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"pub fn find_token(&Self, T) -> bool","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" Returns true if self contains the token\n","sig":null,"attributes":[{"value":"/ Returns true if self contains the token","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":88602,"byte_end":88645,"line_start":1084,"line_end":1084,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":534},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":89991,"byte_end":90004,"line_start":1147,"line_end":1147,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":536}],"decl_id":null,"docs":" Look for a substring in self\n","sig":null,"attributes":[{"value":"/ Look for a substring in self","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":89948,"byte_end":89980,"line_start":1146,"line_end":1146,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":90079,"byte_end":90093,"line_start":1149,"line_end":1149,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"pub fn find_substring(&Self, T) -> Option<usize>","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Returns the byte position of the substring if it is found\n","sig":null,"attributes":[{"value":"/ Returns the byte position of the substring if it is found","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":90012,"byte_end":90073,"line_start":1148,"line_end":1148,"column_start":3,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":91896,"byte_end":91903,"line_start":1223,"line_end":1223,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":551}],"decl_id":null,"docs":" Used to integrate `str`'s `parse()` method\n","sig":null,"attributes":[{"value":"/ Used to integrate `str`'s `parse()` method","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":91839,"byte_end":91885,"line_start":1222,"line_end":1222,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92058,"byte_end":92066,"line_start":1226,"line_end":1226,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"pub fn parse_to(&Self) -> Option<R>","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Succeeds if `parse()` succeeded. The byte slice implementation\n will first convert it to a `&str`, then apply the `parse()` function\n","sig":null,"attributes":[{"value":"/ Succeeds if `parse()` succeeded. The byte slice implementation","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":91911,"byte_end":91977,"line_start":1224,"line_end":1224,"column_start":3,"column_end":69}},{"value":"/ will first convert it to a `&str`, then apply the `parse()` function","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":91980,"byte_end":92052,"line_start":1225,"line_end":1225,"column_start":3,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92512,"byte_end":92517,"line_start":1246,"line_end":1246,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":" Slicing operations using ranges.","sig":null,"attributes":[{"value":"/ Slicing operations using ranges.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92346,"byte_end":92382,"line_start":1241,"line_end":1241,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92383,"byte_end":92386,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ This trait is loosely based on","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92387,"byte_end":92421,"line_start":1243,"line_end":1243,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92422,"byte_end":92458,"line_start":1244,"line_end":1244,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92459,"byte_end":92501,"line_start":1245,"line_end":1245,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92578,"byte_end":92583,"line_start":1248,"line_end":1248,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"pub fn slice(&Self, R) -> Self","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Slices self according to the range argument\n","sig":null,"attributes":[{"value":"/ Slices self according to the range argument","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":92525,"byte_end":92572,"line_start":1247,"line_end":1247,"column_start":3,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":568},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96244,"byte_end":96254,"line_start":1396,"line_end":1396,"column_start":11,"column_end":21},"name":"ExtendInto","qualname":"::traits::ExtendInto","value":"ExtendInto","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"decl_id":null,"docs":" Abstracts something which can extend an `Extend`.\n Used to build modified input slices in `escaped_transform`\n","sig":null,"attributes":[{"value":"/ Abstracts something which can extend an `Extend`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96117,"byte_end":96170,"line_start":1394,"line_end":1394,"column_start":1,"column_end":54}},{"value":"/ Used to build modified input slices in `escaped_transform`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96171,"byte_end":96233,"line_start":1395,"line_end":1395,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":569},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96387,"byte_end":96391,"line_start":1400,"line_end":1400,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::ExtendInto::Item","value":"type Item;","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96259,"byte_end":96320,"line_start":1397,"line_end":1397,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96323,"byte_end":96326,"line_start":1398,"line_end":1398,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96329,"byte_end":96379,"line_start":1399,"line_end":1399,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":570},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96438,"byte_end":96446,"line_start":1403,"line_end":1403,"column_start":8,"column_end":16},"name":"Extender","qualname":"::traits::ExtendInto::Extender","value":"type Extender;","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" The type that will be produced\n","sig":null,"attributes":[{"value":"/ The type that will be produced","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96396,"byte_end":96430,"line_start":1402,"line_end":1402,"column_start":3,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96502,"byte_end":96513,"line_start":1406,"line_end":1406,"column_start":6,"column_end":17},"name":"new_builder","qualname":"::traits::ExtendInto::new_builder","value":"pub fn new_builder(&Self) -> Self::Extender","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Create a new `Extend` of the correct type\n","sig":null,"attributes":[{"value":"/ Create a new `Extend` of the correct type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96451,"byte_end":96496,"line_start":1405,"line_end":1405,"column_start":3,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96592,"byte_end":96603,"line_start":1408,"line_end":1408,"column_start":6,"column_end":17},"name":"extend_into","qualname":"::traits::ExtendInto::extend_into","value":"pub fn extend_into(&Self, &mut Self::Extender)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Accumulate the input into an accumulator\n","sig":null,"attributes":[{"value":"/ Accumulate the input into an accumulator","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":96542,"byte_end":96586,"line_start":1407,"line_end":1407,"column_start":3,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":573},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98981,"byte_end":98988,"line_start":1532,"line_end":1532,"column_start":11,"column_end":18},"name":"ToUsize","qualname":"::traits::ToUsize","value":"ToUsize","parent":null,"children":[{"krate":0,"index":574}],"decl_id":null,"docs":" Helper trait to convert numbers to usize.","sig":null,"attributes":[{"value":"/ Helper trait to convert numbers to usize.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98675,"byte_end":98720,"line_start":1526,"line_end":1526,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98721,"byte_end":98724,"line_start":1527,"line_end":1527,"column_start":1,"column_end":4}},{"value":"/ By default, usize implements `From<u8>` and `From<u16>` but not","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98725,"byte_end":98792,"line_start":1528,"line_end":1528,"column_start":1,"column_end":68}},{"value":"/ `From<u32>` and `From<u64>` because that would be invalid on some","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98793,"byte_end":98862,"line_start":1529,"line_end":1529,"column_start":1,"column_end":70}},{"value":"/ platforms. This trait implements the conversion for platforms","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98863,"byte_end":98928,"line_start":1530,"line_end":1530,"column_start":1,"column_end":66}},{"value":"/ with 32 and 64 bits pointer platforms","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98929,"byte_end":98970,"line_start":1531,"line_end":1531,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":99025,"byte_end":99033,"line_start":1534,"line_end":1534,"column_start":6,"column_end":14},"name":"to_usize","qualname":"::traits::ToUsize::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" converts self to usize\n","sig":null,"attributes":[{"value":"/ converts self to usize","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":98993,"byte_end":99019,"line_start":1533,"line_end":1533,"column_start":3,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":585},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":99700,"byte_end":99712,"line_start":1575,"line_end":1575,"column_start":11,"column_end":23},"name":"ErrorConvert","qualname":"::traits::ErrorConvert","value":"ErrorConvert<E>","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" Equivalent From implementation to avoid orphan rules in bits parsers\n","sig":null,"attributes":[{"value":"/ Equivalent From implementation to avoid orphan rules in bits parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":99617,"byte_end":99689,"line_start":1574,"line_end":1574,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":99761,"byte_end":99768,"line_start":1577,"line_end":1577,"column_start":6,"column_end":13},"name":"convert","qualname":"::traits::ErrorConvert::convert","value":"pub fn convert(Self) -> E","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Transform to another error type\n","sig":null,"attributes":[{"value":"/ Transform to another error type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":99720,"byte_end":99755,"line_start":1576,"line_end":1576,"column_start":3,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":601},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":665},{"krate":0,"index":672},{"krate":0,"index":682},{"krate":0,"index":690},{"krate":0,"index":699},{"krate":0,"index":706},{"krate":0,"index":715},{"krate":0,"index":722},{"krate":0,"index":732},{"krate":0,"index":739},{"krate":0,"index":744},{"krate":0,"index":751},{"krate":0,"index":756},{"krate":0,"index":763},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":790},{"krate":0,"index":799},{"krate":0,"index":806},{"krate":0,"index":815},{"krate":0,"index":821},{"krate":0,"index":828},{"krate":0,"index":833},{"krate":0,"index":840},{"krate":0,"index":845},{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":864},{"krate":0,"index":869},{"krate":0,"index":878},{"krate":0,"index":885},{"krate":0,"index":890},{"krate":0,"index":897},{"krate":0,"index":902},{"krate":0,"index":910},{"krate":0,"index":922}],"decl_id":null,"docs":" General purpose combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16514,"byte_end":16526,"line_start":490,"line_end":490,"column_start":1,"column_end":13}},{"value":"! General purpose combinators","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":101690,"byte_end":101721,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"allow(unused_imports)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":101723,"byte_end":101748,"line_start":3,"line_end":3,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102551,"byte_end":102555,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"rest","qualname":"::combinator::rest","value":"pub fn rest<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>>, T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102288,"byte_end":102319,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102320,"byte_end":102323,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102324,"byte_end":102335,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102336,"byte_end":102368,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102369,"byte_end":102399,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102400,"byte_end":102465,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102466,"byte_end":102525,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102526,"byte_end":102533,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102534,"byte_end":102543,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103001,"byte_end":103009,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"rest_len","qualname":"::combinator::rest_len","value":"pub fn rest_len<T, E: ParseError<T>>(T) -> IResult<T, usize, E> where\nT: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the remaining input.","sig":null,"attributes":[{"value":"/ Return the length of the remaining input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102714,"byte_end":102759,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102760,"byte_end":102763,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102764,"byte_end":102775,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102776,"byte_end":102808,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest_len;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102809,"byte_end":102843,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102844,"byte_end":102912,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102913,"byte_end":102975,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102976,"byte_end":102983,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":102984,"byte_end":102993,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103722,"byte_end":103725,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<I, O1, O2, E, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: FnMut(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":" Maps a function on the result of a parser.","sig":null,"attributes":[{"value":"/ Maps a function on the result of a parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103144,"byte_end":103190,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103191,"byte_end":103194,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103195,"byte_end":103206,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103207,"byte_end":103243,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult,Parser};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103244,"byte_end":103298,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103299,"byte_end":103340,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103341,"byte_end":103370,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103371,"byte_end":103388,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103389,"byte_end":103392,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut parser = map(digit1, |s: &str| s.len());","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103393,"byte_end":103445,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103446,"byte_end":103449,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // the parser will count how many characters were returned by digit1","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103450,"byte_end":103522,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103523,"byte_end":103575,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103576,"byte_end":103579,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103580,"byte_end":103617,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103618,"byte_end":103698,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103699,"byte_end":103706,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103707,"byte_end":103714,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":103986,"byte_end":103990,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"mapc","qualname":"::combinator::mapc","value":"pub fn mapc<I, O1, O2, E, F, G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I)\n-> IResult<I, O1, E>, G: Fn(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104923,"byte_end":104930,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"map_res","qualname":"::combinator::map_res","value":"pub fn map_res<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning a `Result` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning a `Result` over the result of a parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104160,"byte_end":104232,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104233,"byte_end":104236,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104237,"byte_end":104248,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104249,"byte_end":104285,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104286,"byte_end":104333,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104334,"byte_end":104375,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_res;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104376,"byte_end":104409,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104410,"byte_end":104427,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104428,"byte_end":104431,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_res(digit1, |s: &str| s.parse::<u8>());","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104432,"byte_end":104495,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104496,"byte_end":104499,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104500,"byte_end":104563,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104564,"byte_end":104608,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104609,"byte_end":104612,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104613,"byte_end":104650,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104651,"byte_end":104724,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104725,"byte_end":104728,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104729,"byte_end":104818,"line_start":111,"line_end":111,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104819,"byte_end":104899,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104900,"byte_end":104907,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":104908,"byte_end":104915,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105390,"byte_end":105398,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"map_resc","qualname":"::combinator::map_resc","value":"pub fn map_resc<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F,\n                G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I) ->\nIResult<I, O1, E>, G: Fn(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":690},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106393,"byte_end":106400,"line_start":167,"line_end":167,"column_start":8,"column_end":15},"name":"map_opt","qualname":"::combinator::map_opt","value":"pub fn map_opt<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Option<O2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning an `Option` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning an `Option` over the result of a parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105624,"byte_end":105697,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105698,"byte_end":105701,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105702,"byte_end":105713,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105714,"byte_end":105750,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105751,"byte_end":105798,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105799,"byte_end":105840,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_opt;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105841,"byte_end":105874,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105875,"byte_end":105892,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105893,"byte_end":105896,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105897,"byte_end":105965,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105966,"byte_end":105969,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":105970,"byte_end":106033,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106034,"byte_end":106078,"line_start":158,"line_end":158,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106079,"byte_end":106082,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106083,"byte_end":106120,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106121,"byte_end":106194,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106195,"byte_end":106198,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106199,"byte_end":106288,"line_start":163,"line_end":163,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106289,"byte_end":106369,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106370,"byte_end":106377,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106378,"byte_end":106385,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":106834,"byte_end":106842,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"map_optc","qualname":"::combinator::map_optc","value":"pub fn map_optc<I: Clone, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nOption<O2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107590,"byte_end":107600,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"map_parser","qualname":"::combinator::map_parser","value":"pub fn map_parser<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<O1, O2, E>,\nO1: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser over the result of another one.","sig":null,"attributes":[{"value":"/ Applies a parser over the result of another one.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107049,"byte_end":107101,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107102,"byte_end":107105,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107106,"byte_end":107117,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107118,"byte_end":107154,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107155,"byte_end":107202,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107203,"byte_end":107244,"line_start":203,"line_end":203,"column_start":1,"column_end":42}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107245,"byte_end":107280,"line_start":204,"line_end":204,"column_start":1,"column_end":36}},{"value":"/ use nom::combinator::map_parser;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107281,"byte_end":107317,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107318,"byte_end":107335,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107336,"byte_end":107339,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_parser(take(5u8), digit1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107340,"byte_end":107390,"line_start":208,"line_end":208,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107391,"byte_end":107394,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107395,"byte_end":107445,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107446,"byte_end":107494,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107495,"byte_end":107566,"line_start":212,"line_end":212,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107567,"byte_end":107574,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107575,"byte_end":107582,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":107940,"byte_end":107951,"line_start":232,"line_end":232,"column_start":8,"column_end":19},"name":"map_parserc","qualname":"::combinator::map_parserc","value":"pub fn map_parserc<I: Clone, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nIResult<O1, O2, E>, O1: InputLength","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":722},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108761,"byte_end":108769,"line_start":261,"line_end":261,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<I, O1, O2, E: ParseError<I>, F, G, H>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Fn(O1) -> H, H: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","sig":null,"attributes":[{"value":"/ Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108188,"byte_end":108300,"line_start":245,"line_end":245,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108301,"byte_end":108304,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108305,"byte_end":108316,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108317,"byte_end":108353,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108354,"byte_end":108401,"line_start":249,"line_end":249,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108402,"byte_end":108437,"line_start":250,"line_end":250,"column_start":1,"column_end":36}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108438,"byte_end":108472,"line_start":251,"line_end":251,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::flat_map;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108473,"byte_end":108507,"line_start":252,"line_end":252,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108508,"byte_end":108525,"line_start":253,"line_end":253,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108526,"byte_end":108529,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let mut parse = flat_map(u8, take);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108530,"byte_end":108569,"line_start":255,"line_end":255,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108570,"byte_end":108573,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108574,"byte_end":108644,"line_start":257,"line_end":257,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108645,"byte_end":108737,"line_start":258,"line_end":258,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108738,"byte_end":108745,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":108746,"byte_end":108753,"line_start":260,"line_end":260,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109522,"byte_end":109525,"line_start":293,"line_end":293,"column_start":8,"column_end":11},"name":"opt","qualname":"::combinator::opt","value":"pub fn opt<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Optional parser: Will return `None` if not successful.","sig":null,"attributes":[{"value":"/ Optional parser: Will return `None` if not successful.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109048,"byte_end":109106,"line_start":276,"line_end":276,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109107,"byte_end":109110,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109111,"byte_end":109122,"line_start":278,"line_end":278,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109123,"byte_end":109159,"line_start":279,"line_end":279,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109160,"byte_end":109207,"line_start":280,"line_end":280,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::opt;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109208,"byte_end":109237,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109238,"byte_end":109279,"line_start":282,"line_end":282,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109280,"byte_end":109297,"line_start":283,"line_end":283,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109298,"byte_end":109301,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ fn parser(i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109302,"byte_end":109357,"line_start":285,"line_end":285,"column_start":1,"column_end":56}},{"value":"/   opt(alpha1)(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109358,"byte_end":109378,"line_start":286,"line_end":286,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109379,"byte_end":109384,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109385,"byte_end":109388,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109389,"byte_end":109446,"line_start":289,"line_end":289,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109447,"byte_end":109498,"line_start":290,"line_end":290,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109499,"byte_end":109506,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109507,"byte_end":109514,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":739},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":109859,"byte_end":109863,"line_start":308,"line_end":308,"column_start":8,"column_end":12},"name":"optc","qualname":"::combinator::optc","value":"pub fn optc<I: Clone, O, E: ParseError<I>, F>(I, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":744},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110653,"byte_end":110657,"line_start":334,"line_end":334,"column_start":8,"column_end":12},"name":"cond","qualname":"::combinator::cond","value":"pub fn cond<I, O, E: ParseError<I>, F>(bool, F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls the parser if the condition is met.","sig":null,"attributes":[{"value":"/ Calls the parser if the condition is met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110001,"byte_end":110046,"line_start":315,"line_end":315,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110047,"byte_end":110050,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110051,"byte_end":110062,"line_start":317,"line_end":317,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110063,"byte_end":110099,"line_start":318,"line_end":318,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110100,"byte_end":110157,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/ use nom::combinator::cond;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110158,"byte_end":110188,"line_start":320,"line_end":320,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110189,"byte_end":110230,"line_start":321,"line_end":321,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110231,"byte_end":110248,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110249,"byte_end":110252,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ fn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110253,"byte_end":110317,"line_start":324,"line_end":324,"column_start":1,"column_end":65}},{"value":"/   cond(b, alpha1)(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110318,"byte_end":110342,"line_start":325,"line_end":325,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110343,"byte_end":110348,"line_start":326,"line_end":326,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110349,"byte_end":110352,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110353,"byte_end":110416,"line_start":328,"line_end":328,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110417,"byte_end":110477,"line_start":329,"line_end":329,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110478,"byte_end":110570,"line_start":330,"line_end":330,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110571,"byte_end":110629,"line_start":331,"line_end":331,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110630,"byte_end":110637,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110638,"byte_end":110645,"line_start":333,"line_end":333,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":110992,"byte_end":110997,"line_start":354,"line_end":354,"column_start":8,"column_end":13},"name":"condc","qualname":"::combinator::condc","value":"pub fn condc<I, O, E: ParseError<I>, F>(I, bool, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":756},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111591,"byte_end":111595,"line_start":376,"line_end":376,"column_start":8,"column_end":12},"name":"peek","qualname":"::combinator::peek","value":"pub fn peek<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to apply its parser without consuming the input.","sig":null,"attributes":[{"value":"/ Tries to apply its parser without consuming the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111141,"byte_end":111199,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111200,"byte_end":111203,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111204,"byte_end":111215,"line_start":363,"line_end":363,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111216,"byte_end":111252,"line_start":364,"line_end":364,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111253,"byte_end":111300,"line_start":365,"line_end":365,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::peek;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111301,"byte_end":111331,"line_start":366,"line_end":366,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111332,"byte_end":111373,"line_start":367,"line_end":367,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111374,"byte_end":111391,"line_start":368,"line_end":368,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111392,"byte_end":111395,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ let mut parser = peek(alpha1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111396,"byte_end":111430,"line_start":370,"line_end":370,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111431,"byte_end":111434,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111435,"byte_end":111490,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111491,"byte_end":111567,"line_start":373,"line_end":373,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111568,"byte_end":111575,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111576,"byte_end":111583,"line_start":375,"line_end":375,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":763},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":111872,"byte_end":111877,"line_start":390,"line_end":390,"column_start":8,"column_end":13},"name":"peekc","qualname":"::combinator::peekc","value":"pub fn peekc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":768},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112472,"byte_end":112475,"line_start":414,"line_end":414,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I: InputLength + Clone, E: ParseError<I>>(I) -> IResult<I, I, E>","parent":null,"children":[],"decl_id":null,"docs":" returns its input if it is at the end of input data","sig":null,"attributes":[{"value":"/ returns its input if it is at the end of input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112008,"byte_end":112063,"line_start":397,"line_end":397,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112064,"byte_end":112067,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ When we're at the end of the data, this combinator","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112068,"byte_end":112122,"line_start":399,"line_end":399,"column_start":1,"column_end":55}},{"value":"/ will succeed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112123,"byte_end":112139,"line_start":400,"line_end":400,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112140,"byte_end":112143,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112144,"byte_end":112151,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112152,"byte_end":112188,"line_start":403,"line_end":403,"column_start":1,"column_end":37}},{"value":"/ # use std::str;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112189,"byte_end":112208,"line_start":404,"line_end":404,"column_start":1,"column_end":20}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112209,"byte_end":112257,"line_start":405,"line_end":405,"column_start":1,"column_end":49}},{"value":"/ # use nom::combinator::eof;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112258,"byte_end":112289,"line_start":406,"line_end":406,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112290,"byte_end":112293,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112294,"byte_end":112311,"line_start":408,"line_end":408,"column_start":1,"column_end":18}},{"value":"/ let parser = eof;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112312,"byte_end":112333,"line_start":409,"line_end":409,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112334,"byte_end":112406,"line_start":410,"line_end":410,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112407,"byte_end":112448,"line_start":411,"line_end":411,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112449,"byte_end":112456,"line_start":412,"line_end":412,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112457,"byte_end":112464,"line_start":413,"line_end":413,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113155,"byte_end":113163,"line_start":438,"line_end":438,"column_start":8,"column_end":16},"name":"complete","qualname":"::combinator::complete","value":"pub fn complete<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms Incomplete into `Error`.","sig":null,"attributes":[{"value":"/ Transforms Incomplete into `Error`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112715,"byte_end":112754,"line_start":423,"line_end":423,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112755,"byte_end":112758,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112759,"byte_end":112770,"line_start":425,"line_end":425,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112771,"byte_end":112807,"line_start":426,"line_end":426,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112808,"byte_end":112855,"line_start":427,"line_end":427,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112856,"byte_end":112892,"line_start":428,"line_end":428,"column_start":1,"column_end":37}},{"value":"/ use nom::combinator::complete;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112893,"byte_end":112927,"line_start":429,"line_end":429,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112928,"byte_end":112945,"line_start":430,"line_end":430,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112946,"byte_end":112949,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ let mut parser = complete(take(5u8));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112950,"byte_end":112991,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112992,"byte_end":112995,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":112996,"byte_end":113051,"line_start":434,"line_end":434,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113052,"byte_end":113131,"line_start":435,"line_end":435,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113132,"byte_end":113139,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113140,"byte_end":113147,"line_start":437,"line_end":437,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113498,"byte_end":113507,"line_start":452,"line_end":452,"column_start":8,"column_end":17},"name":"completec","qualname":"::combinator::completec","value":"pub fn completec<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E>\nwhere F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114193,"byte_end":114206,"line_start":475,"line_end":475,"column_start":8,"column_end":21},"name":"all_consuming","qualname":"::combinator::all_consuming","value":"pub fn all_consuming<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nI: InputLength, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if all the input has been consumed by its child parser.","sig":null,"attributes":[{"value":"/ Succeeds if all the input has been consumed by its child parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113642,"byte_end":113710,"line_start":459,"line_end":459,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113711,"byte_end":113714,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113715,"byte_end":113726,"line_start":461,"line_end":461,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113727,"byte_end":113763,"line_start":462,"line_end":462,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113764,"byte_end":113811,"line_start":463,"line_end":463,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::all_consuming;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113812,"byte_end":113851,"line_start":464,"line_end":464,"column_start":1,"column_end":40}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113852,"byte_end":113893,"line_start":465,"line_end":465,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113894,"byte_end":113911,"line_start":466,"line_end":466,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113912,"byte_end":113915,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ let mut parser = all_consuming(alpha1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113916,"byte_end":113959,"line_start":468,"line_end":468,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113960,"byte_end":113963,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":113964,"byte_end":114013,"line_start":470,"line_end":470,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114014,"byte_end":114085,"line_start":471,"line_end":471,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114086,"byte_end":114169,"line_start":472,"line_end":472,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114170,"byte_end":114177,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114178,"byte_end":114185,"line_start":474,"line_end":474,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115216,"byte_end":115222,"line_start":509,"line_end":509,"column_start":8,"column_end":14},"name":"verify","qualname":"::combinator::verify","value":"pub fn verify<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the child parser if it satisfies a verification function.","sig":null,"attributes":[{"value":"/ Returns the result of the child parser if it satisfies a verification function.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114535,"byte_end":114618,"line_start":490,"line_end":490,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114619,"byte_end":114622,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ The verification function takes as argument a reference to the output of the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114623,"byte_end":114703,"line_start":492,"line_end":492,"column_start":1,"column_end":81}},{"value":"/ parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114704,"byte_end":114715,"line_start":493,"line_end":493,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114716,"byte_end":114719,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114720,"byte_end":114731,"line_start":495,"line_end":495,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114732,"byte_end":114768,"line_start":496,"line_end":496,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114769,"byte_end":114816,"line_start":497,"line_end":497,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::verify;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114817,"byte_end":114849,"line_start":498,"line_end":498,"column_start":1,"column_end":33}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114850,"byte_end":114891,"line_start":499,"line_end":499,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114892,"byte_end":114909,"line_start":500,"line_end":500,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114910,"byte_end":114913,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ let mut parser = verify(alpha1, |s: &str| s.len() == 4);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114914,"byte_end":114974,"line_start":502,"line_end":502,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114975,"byte_end":114978,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":114979,"byte_end":115028,"line_start":504,"line_end":504,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115029,"byte_end":115108,"line_start":505,"line_end":505,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115109,"byte_end":115192,"line_start":506,"line_end":506,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115193,"byte_end":115200,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115201,"byte_end":115208,"line_start":508,"line_end":508,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":799},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115671,"byte_end":115678,"line_start":532,"line_end":532,"column_start":8,"column_end":15},"name":"verifyc","qualname":"::combinator::verifyc","value":"pub fn verifyc<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116371,"byte_end":116376,"line_start":561,"line_end":561,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, O1: Clone, O2, E: ParseError<I>, F>(O1, F) -> /*impl Trait*/\nwhere F: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the provided value if the child parser succeeds.","sig":null,"attributes":[{"value":"/ Returns the provided value if the child parser succeeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115911,"byte_end":115971,"line_start":546,"line_end":546,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115972,"byte_end":115975,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115976,"byte_end":115987,"line_start":548,"line_end":548,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":115988,"byte_end":116024,"line_start":549,"line_end":549,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116025,"byte_end":116072,"line_start":550,"line_end":550,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116073,"byte_end":116104,"line_start":551,"line_end":551,"column_start":1,"column_end":32}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116105,"byte_end":116146,"line_start":552,"line_end":552,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116147,"byte_end":116164,"line_start":553,"line_end":553,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116165,"byte_end":116168,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ let mut parser = value(1234, alpha1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116169,"byte_end":116210,"line_start":555,"line_end":555,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116211,"byte_end":116214,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116215,"byte_end":116262,"line_start":557,"line_end":557,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116263,"byte_end":116347,"line_start":558,"line_end":558,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116348,"byte_end":116355,"line_start":559,"line_end":559,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116356,"byte_end":116363,"line_start":560,"line_end":560,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":815},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116610,"byte_end":116616,"line_start":572,"line_end":572,"column_start":8,"column_end":14},"name":"valuec","qualname":"::combinator::valuec","value":"pub fn valuec<I, O1: Clone, O2, E: ParseError<I>, F>(I, O1, F)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":821},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117218,"byte_end":117221,"line_start":598,"line_end":598,"column_start":8,"column_end":11},"name":"not","qualname":"::combinator::not","value":"pub fn not<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the child parser returns an error.","sig":null,"attributes":[{"value":"/ Succeeds if the child parser returns an error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116788,"byte_end":116838,"line_start":583,"line_end":583,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116839,"byte_end":116842,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116843,"byte_end":116854,"line_start":585,"line_end":585,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116855,"byte_end":116891,"line_start":586,"line_end":586,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116892,"byte_end":116939,"line_start":587,"line_end":587,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::not;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116940,"byte_end":116969,"line_start":588,"line_end":588,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":116970,"byte_end":117011,"line_start":589,"line_end":589,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117012,"byte_end":117029,"line_start":590,"line_end":590,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117030,"byte_end":117033,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ let mut parser = not(alpha1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117034,"byte_end":117067,"line_start":592,"line_end":592,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117068,"byte_end":117071,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"123\"), Ok((\"123\", ())));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117072,"byte_end":117119,"line_start":594,"line_end":594,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117120,"byte_end":117194,"line_start":595,"line_end":595,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117195,"byte_end":117202,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117203,"byte_end":117210,"line_start":597,"line_end":597,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117589,"byte_end":117593,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"notc","qualname":"::combinator::notc","value":"pub fn notc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, (), E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":833},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118302,"byte_end":118311,"line_start":636,"line_end":636,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                 E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" If the child parser was successful, return the consumed input as produced value.","sig":null,"attributes":[{"value":"/ If the child parser was successful, return the consumed input as produced value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117734,"byte_end":117818,"line_start":620,"line_end":620,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117819,"byte_end":117822,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117823,"byte_end":117834,"line_start":622,"line_end":622,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117835,"byte_end":117871,"line_start":623,"line_end":623,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117872,"byte_end":117919,"line_start":624,"line_end":624,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::recognize;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117920,"byte_end":117955,"line_start":625,"line_end":625,"column_start":1,"column_end":36}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":117956,"byte_end":118005,"line_start":626,"line_end":626,"column_start":1,"column_end":50}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118006,"byte_end":118044,"line_start":627,"line_end":627,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118045,"byte_end":118062,"line_start":628,"line_end":628,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118063,"byte_end":118066,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize(separated_pair(alpha1, char(','), alpha1));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118067,"byte_end":118141,"line_start":630,"line_end":630,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118142,"byte_end":118145,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118146,"byte_end":118205,"line_start":632,"line_end":632,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118206,"byte_end":118278,"line_start":633,"line_end":633,"column_start":1,"column_end":73}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118279,"byte_end":118286,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118287,"byte_end":118294,"line_start":635,"line_end":635,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118706,"byte_end":118716,"line_start":655,"line_end":655,"column_start":8,"column_end":18},"name":"recognizec","qualname":"::combinator::recognizec","value":"pub fn recognizec<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                  E: ParseError<I>, F>(I, F) -> IResult<I, I, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":845},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120434,"byte_end":120442,"line_start":703,"line_end":703,"column_start":8,"column_end":16},"name":"consumed","qualname":"::combinator::consumed","value":"pub fn consumed<I, O, F, E>(F) -> /*impl Trait*/ where I: Clone + Offset +\nSlice<RangeTo<usize>>, E: ParseError<I>, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" if the child parser was successful, return the consumed input with the output\n as a tuple. Functions similarly to [recognize](fn.recognize.html) except it\n returns the parser output as well.","sig":null,"attributes":[{"value":"/ if the child parser was successful, return the consumed input with the output","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118902,"byte_end":118983,"line_start":665,"line_end":665,"column_start":1,"column_end":82}},{"value":"/ as a tuple. Functions similarly to [recognize](fn.recognize.html) except it","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":118984,"byte_end":119063,"line_start":666,"line_end":666,"column_start":1,"column_end":80}},{"value":"/ returns the parser output as well.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119064,"byte_end":119102,"line_start":667,"line_end":667,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119103,"byte_end":119106,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ This can be useful especially in cases where the output is not the same type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119107,"byte_end":119187,"line_start":669,"line_end":669,"column_start":1,"column_end":81}},{"value":"/ as the input, or the input is a user defined type.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119188,"byte_end":119242,"line_start":670,"line_end":670,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119243,"byte_end":119246,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ Returned tuple is of the format `(consumed input, produced output)`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119247,"byte_end":119319,"line_start":672,"line_end":672,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119320,"byte_end":119323,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119324,"byte_end":119335,"line_start":674,"line_end":674,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119336,"byte_end":119372,"line_start":675,"line_end":675,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119373,"byte_end":119420,"line_start":676,"line_end":676,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::{consumed, value, recognize, map};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119421,"byte_end":119480,"line_start":677,"line_end":677,"column_start":1,"column_end":60}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119481,"byte_end":119530,"line_start":678,"line_end":678,"column_start":1,"column_end":50}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119531,"byte_end":119565,"line_start":679,"line_end":679,"column_start":1,"column_end":35}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119566,"byte_end":119604,"line_start":680,"line_end":680,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119605,"byte_end":119608,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ fn inner_parser(input: &str) -> IResult<&str, bool> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119609,"byte_end":119666,"line_start":682,"line_end":682,"column_start":1,"column_end":58}},{"value":"/     value(true, tag(\"1234\"))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119667,"byte_end":119706,"line_start":683,"line_end":683,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119707,"byte_end":119712,"line_start":684,"line_end":684,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119713,"byte_end":119716,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119717,"byte_end":119734,"line_start":686,"line_end":686,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119735,"byte_end":119738,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ let mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119739,"byte_end":119834,"line_start":688,"line_end":688,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119835,"byte_end":119838,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119839,"byte_end":119917,"line_start":690,"line_end":690,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":119918,"byte_end":119999,"line_start":691,"line_end":691,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120000,"byte_end":120003,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120004,"byte_end":120007,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ // the first output (representing the consumed input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120008,"byte_end":120065,"line_start":694,"line_end":694,"column_start":1,"column_end":58}},{"value":"/ // should be the same as that of the `recognize` parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120066,"byte_end":120126,"line_start":695,"line_end":695,"column_start":1,"column_end":61}},{"value":"/ let mut recognize_parser = recognize(inner_parser);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120127,"byte_end":120182,"line_start":696,"line_end":696,"column_start":1,"column_end":56}},{"value":"/ let mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120183,"byte_end":120272,"line_start":697,"line_end":697,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120273,"byte_end":120276,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120277,"byte_end":120343,"line_start":699,"line_end":699,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120344,"byte_end":120410,"line_start":700,"line_end":700,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120411,"byte_end":120418,"line_start":701,"line_end":701,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120419,"byte_end":120426,"line_start":702,"line_end":702,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":120919,"byte_end":120928,"line_start":723,"line_end":723,"column_start":8,"column_end":17},"name":"consumedc","qualname":"::combinator::consumedc","value":"pub fn consumedc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, (I, O), E>\nwhere I: Clone + Offset + Slice<RangeTo<usize>>, E: ParseError<E>, F: Fn(I) ->\nIResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121558,"byte_end":121561,"line_start":747,"line_end":747,"column_start":8,"column_end":11},"name":"cut","qualname":"::combinator::cut","value":"pub fn cut<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" transforms an error to failure","sig":null,"attributes":[{"value":"/ transforms an error to failure","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121136,"byte_end":121170,"line_start":732,"line_end":732,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121171,"byte_end":121174,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121175,"byte_end":121186,"line_start":734,"line_end":734,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121187,"byte_end":121223,"line_start":735,"line_end":735,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121224,"byte_end":121271,"line_start":736,"line_end":736,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::cut;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121272,"byte_end":121301,"line_start":737,"line_end":737,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121302,"byte_end":121343,"line_start":738,"line_end":738,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121344,"byte_end":121361,"line_start":739,"line_end":739,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121362,"byte_end":121365,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ let mut parser = cut(alpha1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121366,"byte_end":121399,"line_start":741,"line_end":741,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121400,"byte_end":121403,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121404,"byte_end":121455,"line_start":743,"line_end":743,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121456,"byte_end":121534,"line_start":744,"line_end":744,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121535,"byte_end":121542,"line_start":745,"line_end":745,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121543,"byte_end":121550,"line_start":746,"line_end":746,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":864},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121812,"byte_end":121816,"line_start":758,"line_end":758,"column_start":8,"column_end":12},"name":"cutc","qualname":"::combinator::cutc","value":"pub fn cutc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":869},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122652,"byte_end":122656,"line_start":788,"line_end":788,"column_start":8,"column_end":12},"name":"into","qualname":"::combinator::into","value":"pub fn into<I, O1, O2, E1, E2, F>(F) -> /*impl Trait*/ where O1: Into<O2>,\nE1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>, F: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":" automatically converts the child parser's result to another type","sig":null,"attributes":[{"value":"/ automatically converts the child parser's result to another type","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":121949,"byte_end":122017,"line_start":765,"line_end":765,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122018,"byte_end":122021,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ it will be able to convert the output value and the error value","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122022,"byte_end":122089,"line_start":767,"line_end":767,"column_start":1,"column_end":68}},{"value":"/ as long as the `Into` implementations are available","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122090,"byte_end":122145,"line_start":768,"line_end":768,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122146,"byte_end":122149,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122150,"byte_end":122161,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122162,"byte_end":122198,"line_start":771,"line_end":771,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122199,"byte_end":122222,"line_start":772,"line_end":772,"column_start":1,"column_end":24}},{"value":"/ use nom::combinator::into;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122223,"byte_end":122253,"line_start":773,"line_end":773,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122254,"byte_end":122295,"line_start":774,"line_end":774,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122296,"byte_end":122313,"line_start":775,"line_end":775,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122314,"byte_end":122317,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/  fn parser1(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122318,"byte_end":122367,"line_start":777,"line_end":777,"column_start":1,"column_end":50}},{"value":"/    alpha1(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122368,"byte_end":122384,"line_start":778,"line_end":778,"column_start":1,"column_end":17}},{"value":"/  }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122385,"byte_end":122391,"line_start":779,"line_end":779,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122392,"byte_end":122395,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/  let mut parser2 = into(parser1);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122396,"byte_end":122433,"line_start":781,"line_end":781,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122434,"byte_end":122437,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ // the parser converts the &str output of the child parser into a Vec<u8>","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122438,"byte_end":122515,"line_start":783,"line_end":783,"column_start":1,"column_end":78}},{"value":"/ let bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122516,"byte_end":122572,"line_start":784,"line_end":784,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122573,"byte_end":122628,"line_start":785,"line_end":785,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122629,"byte_end":122636,"line_start":786,"line_end":786,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":122637,"byte_end":122644,"line_start":787,"line_end":787,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":878},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123145,"byte_end":123150,"line_start":806,"line_end":806,"column_start":8,"column_end":13},"name":"intoc","qualname":"::combinator::intoc","value":"pub fn intoc<I, O1, O2, E1, E2, F>(I, F) -> IResult<I, O2, E2> where\nO1: Into<O2>, E1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>,\nF: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":885},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124117,"byte_end":124125,"line_start":835,"line_end":835,"column_start":8,"column_end":16},"name":"iterator","qualname":"::combinator::iterator","value":"pub fn iterator<Input, Output, Error, F>(Input, F)\n-> ParserIterator<Input, Error, F> where F: Parser<Input, Output, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator from input data and a parser.","sig":null,"attributes":[{"value":"/ Creates an iterator from input data and a parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123347,"byte_end":123400,"line_start":817,"line_end":817,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123401,"byte_end":123404,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ Call the iterator's [ParserIterator::finish] method to get the remaining input if successful,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123405,"byte_end":123502,"line_start":819,"line_end":819,"column_start":1,"column_end":98}},{"value":"/ or the error value if we encountered an error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123503,"byte_end":123553,"line_start":820,"line_end":820,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123554,"byte_end":123557,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123558,"byte_end":123569,"line_start":822,"line_end":822,"column_start":1,"column_end":12}},{"value":"/ use nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123570,"byte_end":123688,"line_start":823,"line_end":823,"column_start":1,"column_end":119}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123689,"byte_end":123723,"line_start":824,"line_end":824,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123724,"byte_end":123727,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ let data = \"abc|defg|hijkl|mnopqr|123\";","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123728,"byte_end":123771,"line_start":826,"line_end":826,"column_start":1,"column_end":44}},{"value":"/ let mut it = iterator(data, terminated(alpha1, tag(\"|\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123772,"byte_end":123834,"line_start":827,"line_end":827,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123835,"byte_end":123838,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ let parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123839,"byte_end":123907,"line_start":829,"line_end":829,"column_start":1,"column_end":69}},{"value":"/ let res: IResult<_,_> = it.finish();","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123908,"byte_end":123948,"line_start":830,"line_end":830,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123949,"byte_end":123952,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":123953,"byte_end":124063,"line_start":832,"line_end":832,"column_start":1,"column_end":111}},{"value":"/ assert_eq!(res, Ok((\"123\", ())));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124064,"byte_end":124101,"line_start":833,"line_end":833,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124102,"byte_end":124109,"line_start":834,"line_end":834,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":890},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124433,"byte_end":124447,"line_start":848,"line_end":848,"column_start":12,"column_end":26},"name":"ParserIterator","qualname":"::combinator::ParserIterator","value":"ParserIterator {  }","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"decl_id":null,"docs":" Main structure associated to the [iterator] function.\n","sig":null,"attributes":[{"value":"/ Main structure associated to the [iterator] function.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124364,"byte_end":124421,"line_start":847,"line_end":847,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124674,"byte_end":124680,"line_start":856,"line_end":856,"column_start":10,"column_end":16},"name":"finish","qualname":"<ParserIterator<I, E, F>>::finish","value":"pub fn finish(Self) -> IResult<I, (), E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining input if parsing was successful, or the error if we encountered an error.\n","sig":null,"attributes":[{"value":"/ Returns the remaining input if parsing was successful, or the error if we encountered an error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124565,"byte_end":124664,"line_start":855,"line_end":855,"column_start":3,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":922},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126645,"byte_end":126652,"line_start":930,"line_end":930,"column_start":8,"column_end":15},"name":"success","qualname":"::combinator::success","value":"pub fn success<I, O: Clone, E: ParseError<I>>(O) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" a parser which always succeeds with given value without consuming any input.","sig":null,"attributes":[{"value":"/ a parser which always succeeds with given value without consuming any input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":125867,"byte_end":125947,"line_start":908,"line_end":908,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":125948,"byte_end":125951,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ It can be used for example as the last alternative in `alt` to","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":125952,"byte_end":126018,"line_start":910,"line_end":910,"column_start":1,"column_end":67}},{"value":"/ specify the default case.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126019,"byte_end":126048,"line_start":911,"line_end":911,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126049,"byte_end":126052,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126053,"byte_end":126064,"line_start":913,"line_end":913,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126065,"byte_end":126101,"line_start":914,"line_end":914,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126102,"byte_end":126149,"line_start":915,"line_end":915,"column_start":1,"column_end":48}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126150,"byte_end":126175,"line_start":916,"line_end":916,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::{success, value};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126176,"byte_end":126218,"line_start":917,"line_end":917,"column_start":1,"column_end":43}},{"value":"/ use nom::character::complete::char;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126219,"byte_end":126258,"line_start":918,"line_end":918,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126259,"byte_end":126276,"line_start":919,"line_end":919,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126277,"byte_end":126280,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ let mut parser = success::<_,_,(_,ErrorKind)>(10);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126281,"byte_end":126335,"line_start":921,"line_end":921,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126336,"byte_end":126383,"line_start":922,"line_end":922,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126384,"byte_end":126387,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ let mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126388,"byte_end":126489,"line_start":924,"line_end":924,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(sign(\"+10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126490,"byte_end":126533,"line_start":925,"line_end":925,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(sign(\"-10\"), Ok((\"10\", -1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126534,"byte_end":126578,"line_start":926,"line_end":926,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(sign(\"10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126579,"byte_end":126621,"line_start":927,"line_end":927,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126622,"byte_end":126629,"line_start":928,"line_end":928,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":126630,"byte_end":126637,"line_start":929,"line_end":929,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":928},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"branch","qualname":"::branch","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":948},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":3942},{"krate":0,"index":3949},{"krate":0,"index":3957},{"krate":0,"index":3966},{"krate":0,"index":3976},{"krate":0,"index":3987},{"krate":0,"index":3999},{"krate":0,"index":4012},{"krate":0,"index":4026},{"krate":0,"index":4041},{"krate":0,"index":4057},{"krate":0,"index":4074},{"krate":0,"index":4092},{"krate":0,"index":4111},{"krate":0,"index":4131},{"krate":0,"index":4152},{"krate":0,"index":4174},{"krate":0,"index":4197},{"krate":0,"index":4221},{"krate":0,"index":4246},{"krate":0,"index":4272},{"krate":0,"index":4280},{"krate":0,"index":4290},{"krate":0,"index":4302},{"krate":0,"index":4316},{"krate":0,"index":4332},{"krate":0,"index":4350},{"krate":0,"index":4370},{"krate":0,"index":4392},{"krate":0,"index":4416},{"krate":0,"index":4442},{"krate":0,"index":4470},{"krate":0,"index":4500},{"krate":0,"index":4532},{"krate":0,"index":4566},{"krate":0,"index":4602},{"krate":0,"index":4640},{"krate":0,"index":4680},{"krate":0,"index":4722},{"krate":0,"index":4766}],"decl_id":null,"docs":" Choice combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16547,"byte_end":16559,"line_start":492,"line_end":492,"column_start":1,"column_end":13}},{"value":"! Choice combinators","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":169759,"byte_end":169781,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":943},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170035,"byte_end":170038,"line_start":13,"line_end":13,"column_start":11,"column_end":14},"name":"Alt","qualname":"::branch::Alt","value":"Alt<I, O, E>","parent":null,"children":[{"krate":0,"index":947}],"decl_id":null,"docs":" Helper trait for the [alt()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [alt()] combinator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":169914,"byte_end":169958,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":169959,"byte_end":169962,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":169963,"byte_end":170024,"line_start":12,"line_end":12,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170146,"byte_end":170152,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"name":"choice","qualname":"::branch::Alt::choice","value":"pub fn choice(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":" Tests each parser in the tuple and returns the result of the first one that succeeds\n","sig":null,"attributes":[{"value":"/ Tests each parser in the tuple and returns the result of the first one that succeeds","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170052,"byte_end":170140,"line_start":14,"line_end":14,"column_start":3,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171343,"byte_end":171346,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"alt","qualname":"::branch::alt","value":"pub fn alt<I: Clone, O, E: ParseError<I>, List: Alt<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Tests a list of parsers one by one until one succeeds.","sig":null,"attributes":[{"value":"/ Tests a list of parsers one by one until one succeeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170198,"byte_end":170256,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170257,"byte_end":170260,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It takes as argument a tuple of parsers. There is a maximum of 21","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170261,"byte_end":170330,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ parsers. If you need more, it is possible to nest them in other `alt` calls,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170331,"byte_end":170411,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ like this: `alt(parser_a, alt(parser_b, parser_c))`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170412,"byte_end":170467,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170468,"byte_end":170471,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170472,"byte_end":170483,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170484,"byte_end":170520,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170521,"byte_end":170576,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170577,"byte_end":170628,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170629,"byte_end":170654,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170655,"byte_end":170672,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170673,"byte_end":170724,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/   alt((alpha1, digit1))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170725,"byte_end":170759,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170760,"byte_end":170766,"line_start":32,"line_end":32,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170767,"byte_end":170770,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // the first parser, alpha1, recognizes the input","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170771,"byte_end":170824,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170825,"byte_end":170872,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170873,"byte_end":170876,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // the first parser returns an error, so alt tries the second one","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170877,"byte_end":170946,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":170947,"byte_end":171000,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171001,"byte_end":171004,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // both parsers failed, and with the default error type, alt will return the last error","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171005,"byte_end":171096,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171097,"byte_end":171182,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171183,"byte_end":171190,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171191,"byte_end":171198,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171199,"byte_end":171202,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ With a custom error type, it is possible to have alt return the error of the parser","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171203,"byte_end":171290,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/ that went the farthest in the input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171291,"byte_end":171335,"line_start":46,"line_end":46,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":955},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171613,"byte_end":171624,"line_start":56,"line_end":56,"column_start":11,"column_end":22},"name":"Permutation","qualname":"::branch::Permutation","value":"Permutation<I, O, E>","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" Helper trait for the [permutation()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [permutation()] combinator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171484,"byte_end":171536,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171537,"byte_end":171540,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171541,"byte_end":171602,"line_start":55,"line_end":55,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171731,"byte_end":171742,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"name":"permutation","qualname":"::branch::Permutation::permutation","value":"pub fn permutation(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Tries to apply all parsers in the tuple in various orders until all of them succeed\n","sig":null,"attributes":[{"value":"/ Tries to apply all parsers in the tuple in various orders until all of them succeed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171638,"byte_end":171725,"line_start":57,"line_end":57,"column_start":3,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":960},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173459,"byte_end":173470,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"permutation","qualname":"::branch::permutation","value":"pub fn permutation<I: Clone, O, E: ParseError<I>,\n                   List: Permutation<I, O, E>>(List) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Applies a list of parsers in any order.","sig":null,"attributes":[{"value":"/ Applies a list of parsers in any order.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171788,"byte_end":171831,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171832,"byte_end":171835,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Permutation will succeed if all of the child parsers succeeded.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171836,"byte_end":171903,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/ It takes as argument a tuple of parsers, and returns a","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171904,"byte_end":171962,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ tuple of the parser results.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171963,"byte_end":171995,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":171996,"byte_end":171999,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172000,"byte_end":172011,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172012,"byte_end":172048,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172049,"byte_end":172113,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172114,"byte_end":172165,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172166,"byte_end":172199,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172200,"byte_end":172217,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, (&str, &str)> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172218,"byte_end":172277,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/   permutation((alpha1, digit1))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172278,"byte_end":172320,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172321,"byte_end":172326,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172327,"byte_end":172330,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // permutation recognizes alphabetic characters then digit","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172331,"byte_end":172393,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172394,"byte_end":172453,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172454,"byte_end":172457,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // but also in inverse order","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172458,"byte_end":172490,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172491,"byte_end":172550,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172551,"byte_end":172554,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // it will fail if one of the parsers failed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172555,"byte_end":172603,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172604,"byte_end":172687,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172688,"byte_end":172695,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172696,"byte_end":172703,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172704,"byte_end":172707,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The parsers are applied greedily: if there are multiple unapplied parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172708,"byte_end":172785,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ that could parse the next slice of input, the first one is used.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172786,"byte_end":172854,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172855,"byte_end":172866,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172867,"byte_end":172924,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172925,"byte_end":172958,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ use nom::character::complete::{anychar, char};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":172959,"byte_end":173009,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173010,"byte_end":173013,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, (char, char)> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173014,"byte_end":173073,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/   permutation((anychar, char('a')))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173074,"byte_end":173120,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173121,"byte_end":173126,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173127,"byte_end":173130,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'b', then char('a') parses 'a'","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173131,"byte_end":173183,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173184,"byte_end":173235,"line_start":100,"line_end":100,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173236,"byte_end":173239,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'a', then char('a') fails on 'b',","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173240,"byte_end":173295,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ // even though char('a') followed by anychar would succeed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173296,"byte_end":173358,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173359,"byte_end":173439,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173440,"byte_end":173447,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/branch/mod.rs","byte_start":173448,"byte_end":173451,"line_start":106,"line_end":106,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":973},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":998},{"krate":0,"index":1005},{"krate":0,"index":1014},{"krate":0,"index":1021},{"krate":0,"index":1031},{"krate":0,"index":1038},{"krate":0,"index":1050},{"krate":0,"index":1059},{"krate":0,"index":1071},{"krate":0,"index":1080},{"krate":0,"index":1085},{"krate":0,"index":4812},{"krate":0,"index":4820},{"krate":0,"index":4830},{"krate":0,"index":4842},{"krate":0,"index":4856},{"krate":0,"index":4872},{"krate":0,"index":4890},{"krate":0,"index":4910},{"krate":0,"index":4932},{"krate":0,"index":4956},{"krate":0,"index":4982},{"krate":0,"index":5010},{"krate":0,"index":5040},{"krate":0,"index":5072},{"krate":0,"index":5106},{"krate":0,"index":5142},{"krate":0,"index":5180},{"krate":0,"index":5220},{"krate":0,"index":5262},{"krate":0,"index":5306},{"krate":0,"index":1095}],"decl_id":null,"docs":" Combinators applying parsers in sequence\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16576,"byte_end":16588,"line_start":494,"line_end":494,"column_start":1,"column_end":13}},{"value":"! Combinators applying parsers in sequence","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":207863,"byte_end":207907,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208698,"byte_end":208702,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"pair","qualname":"::sequence::pair","value":"pub fn pair<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208006,"byte_end":208047,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208048,"byte_end":208100,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208101,"byte_end":208104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208105,"byte_end":208120,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208121,"byte_end":208161,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208162,"byte_end":208204,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208205,"byte_end":208216,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208217,"byte_end":208264,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208265,"byte_end":208293,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::pair;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208294,"byte_end":208322,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208323,"byte_end":208357,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208358,"byte_end":208361,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut parser = pair(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208362,"byte_end":208412,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208413,"byte_end":208416,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208417,"byte_end":208476,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208477,"byte_end":208542,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208543,"byte_end":208609,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208610,"byte_end":208682,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":208683,"byte_end":208690,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":998},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209084,"byte_end":209089,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"pairc","qualname":"::sequence::pairc","value":"pub fn pairc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, (O1, O2), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209992,"byte_end":210000,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"preceded","qualname":"::sequence::preceded","value":"pub fn preceded<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209298,"byte_end":209358,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209359,"byte_end":209406,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209407,"byte_end":209410,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209411,"byte_end":209426,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ * `first` The opening parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209427,"byte_end":209460,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ * `second` The second parser to get object.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209461,"byte_end":209508,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209509,"byte_end":209520,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209521,"byte_end":209568,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209569,"byte_end":209597,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::preceded;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209598,"byte_end":209630,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209631,"byte_end":209665,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209666,"byte_end":209669,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let mut parser = preceded(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209670,"byte_end":209724,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209725,"byte_end":209728,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209729,"byte_end":209779,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209780,"byte_end":209836,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209837,"byte_end":209903,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209904,"byte_end":209976,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":209977,"byte_end":209984,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210346,"byte_end":210355,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"precededc","qualname":"::sequence::precededc","value":"pub fn precededc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211272,"byte_end":211282,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"terminated","qualname":"::sequence::terminated","value":"pub fn terminated<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the second parser and discards it.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210562,"byte_end":210603,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the second parser and discards it.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210604,"byte_end":210670,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210671,"byte_end":210674,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210675,"byte_end":210690,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210691,"byte_end":210731,"line_start":107,"line_end":107,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to match an object.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210732,"byte_end":210784,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210785,"byte_end":210796,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210797,"byte_end":210844,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210845,"byte_end":210873,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::terminated;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210874,"byte_end":210908,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210909,"byte_end":210943,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210944,"byte_end":210947,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ let mut parser = terminated(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":210948,"byte_end":211004,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211005,"byte_end":211008,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211009,"byte_end":211059,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211060,"byte_end":211116,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211117,"byte_end":211183,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211184,"byte_end":211256,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211257,"byte_end":211264,"line_start":121,"line_end":121,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1031},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211651,"byte_end":211662,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"terminatedc","qualname":"::sequence::terminatedc","value":"pub fn terminatedc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1038},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212702,"byte_end":212716,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"separated_pair","qualname":"::sequence::separated_pair","value":"pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the sep_parser and discards it,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211871,"byte_end":211912,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the sep_parser and discards it,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211913,"byte_end":211976,"line_start":151,"line_end":151,"column_start":1,"column_end":64}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":211977,"byte_end":212029,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212030,"byte_end":212033,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212034,"byte_end":212049,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212050,"byte_end":212090,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212091,"byte_end":212133,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212134,"byte_end":212176,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212177,"byte_end":212188,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212189,"byte_end":212236,"line_start":159,"line_end":159,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212237,"byte_end":212265,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212266,"byte_end":212304,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212305,"byte_end":212339,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212340,"byte_end":212343,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212344,"byte_end":212414,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212415,"byte_end":212418,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212419,"byte_end":212479,"line_start":166,"line_end":166,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212480,"byte_end":212546,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212547,"byte_end":212613,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212614,"byte_end":212686,"line_start":169,"line_end":169,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":212687,"byte_end":212694,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1050},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213182,"byte_end":213197,"line_start":190,"line_end":190,"column_start":8,"column_end":23},"name":"separated_pairc","qualname":"::sequence::separated_pairc","value":"pub fn separated_pairc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, (O1, O3), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1059},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214313,"byte_end":214322,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"delimited","qualname":"::sequence::delimited","value":"pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser,\n and finally matches an object from the third parser and discards it.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213471,"byte_end":213531,"line_start":204,"line_end":204,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213532,"byte_end":213579,"line_start":205,"line_end":205,"column_start":1,"column_end":48}},{"value":"/ and finally matches an object from the third parser and discards it.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213580,"byte_end":213652,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213653,"byte_end":213656,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213657,"byte_end":213672,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply and discard.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213673,"byte_end":213725,"line_start":209,"line_end":209,"column_start":1,"column_end":53}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213726,"byte_end":213768,"line_start":210,"line_end":210,"column_start":1,"column_end":43}},{"value":"/ * `third` The third parser to apply and discard.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213769,"byte_end":213821,"line_start":211,"line_end":211,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213822,"byte_end":213833,"line_start":212,"line_end":212,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213834,"byte_end":213881,"line_start":213,"line_end":213,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213882,"byte_end":213910,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::delimited;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213911,"byte_end":213944,"line_start":215,"line_end":215,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213945,"byte_end":213979,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213980,"byte_end":213983,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let mut parser = delimited(tag(\"(\"), tag(\"abc\"), tag(\")\"));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":213984,"byte_end":214047,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214048,"byte_end":214051,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"(abc)\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214052,"byte_end":214101,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"(abc)def\"), Ok((\"def\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214102,"byte_end":214157,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214158,"byte_end":214224,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214225,"byte_end":214297,"line_start":223,"line_end":223,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214298,"byte_end":214305,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1071},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":214779,"byte_end":214789,"line_start":244,"line_end":244,"column_start":8,"column_end":18},"name":"delimitedc","qualname":"::sequence::delimitedc","value":"pub fn delimitedc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1080},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215187,"byte_end":215192,"line_start":261,"line_end":261,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::sequence::Tuple","value":"Tuple<I, O, E>","parent":null,"children":[{"krate":0,"index":1084}],"decl_id":null,"docs":" Helper trait for the tuple combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the tuple combinator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215056,"byte_end":215098,"line_start":258,"line_end":258,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215099,"byte_end":215102,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of parsers of up to 21 elements.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215103,"byte_end":215176,"line_start":260,"line_end":260,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215279,"byte_end":215284,"line_start":263,"line_end":263,"column_start":6,"column_end":11},"name":"parse","qualname":"::sequence::Tuple::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Parses the input and returns a tuple of results of each parser.\n","sig":null,"attributes":[{"value":"/ Parses the input and returns a tuple of results of each parser.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":215206,"byte_end":215273,"line_start":262,"line_end":262,"column_start":3,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1095},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217769,"byte_end":217774,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"tuple","qualname":"::sequence::tuple","value":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"Applies a tuple of parsers one by one and returns their results as a tuple.","sig":null,"attributes":[{"value":"/Applies a tuple of parsers one by one and returns their results as a tuple.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217328,"byte_end":217406,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217407,"byte_end":217410,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217411,"byte_end":217422,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217423,"byte_end":217462,"line_start":327,"line_end":327,"column_start":1,"column_end":40}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217463,"byte_end":217492,"line_start":328,"line_end":328,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217493,"byte_end":217544,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/ let mut parser = tuple((alpha1, digit1, alpha1));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217545,"byte_end":217598,"line_start":330,"line_end":330,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217599,"byte_end":217602,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217603,"byte_end":217672,"line_start":332,"line_end":332,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217673,"byte_end":217753,"line_start":333,"line_end":333,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/sequence/mod.rs","byte_start":217754,"byte_end":217761,"line_start":334,"line_end":334,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1102},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1130},{"krate":0,"index":1135},{"krate":0,"index":1142},{"krate":0,"index":1147},{"krate":0,"index":1155},{"krate":0,"index":1164},{"krate":0,"index":1171},{"krate":0,"index":1180},{"krate":0,"index":1187},{"krate":0,"index":1196},{"krate":0,"index":1203},{"krate":0,"index":1210},{"krate":0,"index":1219}],"decl_id":null,"docs":" Combinators applying their child parser multiple times\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16607,"byte_end":16619,"line_start":496,"line_end":496,"column_start":1,"column_end":13}},{"value":"! Combinators applying their child parser multiple times","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":245413,"byte_end":245471,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1123},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259440,"byte_end":259451,"line_start":482,"line_end":482,"column_start":8,"column_end":19},"name":"many0_count","qualname":"::multi::many0_count","value":"pub fn many0_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many0_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258817,"byte_end":258863,"line_start":463,"line_end":463,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258864,"byte_end":258916,"line_start":464,"line_end":464,"column_start":1,"column_end":53}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258917,"byte_end":258932,"line_start":465,"line_end":465,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258933,"byte_end":258963,"line_start":466,"line_end":466,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258964,"byte_end":258975,"line_start":467,"line_end":467,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":258976,"byte_end":259012,"line_start":468,"line_end":468,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259013,"byte_end":259069,"line_start":469,"line_end":469,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0_count;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259070,"byte_end":259102,"line_start":470,"line_end":470,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259103,"byte_end":259137,"line_start":471,"line_end":471,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259138,"byte_end":259141,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259142,"byte_end":259190,"line_start":473,"line_end":473,"column_start":1,"column_end":49}},{"value":"/   many0_count(tag(\"abc\"))(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259191,"byte_end":259223,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259224,"byte_end":259229,"line_start":475,"line_end":475,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259230,"byte_end":259233,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259234,"byte_end":259280,"line_start":477,"line_end":477,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259281,"byte_end":259330,"line_start":478,"line_end":478,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259331,"byte_end":259383,"line_start":479,"line_end":479,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259384,"byte_end":259424,"line_start":480,"line_end":480,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":259425,"byte_end":259432,"line_start":481,"line_end":481,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260135,"byte_end":260147,"line_start":514,"line_end":514,"column_start":8,"column_end":20},"name":"many0_countc","qualname":"::multi::many0_countc","value":"pub fn many0_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":261090,"byte_end":261101,"line_start":544,"line_end":544,"column_start":8,"column_end":19},"name":"many1_count","qualname":"::multi::many1_count","value":"pub fn many1_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n Fails if the embedded parser does not succeed\n at least once.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many1_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260303,"byte_end":260349,"line_start":523,"line_end":523,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260350,"byte_end":260402,"line_start":524,"line_end":524,"column_start":1,"column_end":53}},{"value":"/ Fails if the embedded parser does not succeed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260403,"byte_end":260452,"line_start":525,"line_end":525,"column_start":1,"column_end":50}},{"value":"/ at least once.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260453,"byte_end":260471,"line_start":526,"line_end":526,"column_start":1,"column_end":19}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260472,"byte_end":260487,"line_start":527,"line_end":527,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260488,"byte_end":260518,"line_start":528,"line_end":528,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260519,"byte_end":260530,"line_start":529,"line_end":529,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260531,"byte_end":260567,"line_start":530,"line_end":530,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260568,"byte_end":260633,"line_start":531,"line_end":531,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1_count;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260634,"byte_end":260666,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260667,"byte_end":260701,"line_start":533,"line_end":533,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260702,"byte_end":260705,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260706,"byte_end":260754,"line_start":535,"line_end":535,"column_start":1,"column_end":49}},{"value":"/   many1_count(tag(\"abc\"))(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260755,"byte_end":260787,"line_start":536,"line_end":536,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260788,"byte_end":260793,"line_start":537,"line_end":537,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260794,"byte_end":260797,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260798,"byte_end":260844,"line_start":539,"line_end":539,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260845,"byte_end":260894,"line_start":540,"line_end":540,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260895,"byte_end":260990,"line_start":541,"line_end":541,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":260991,"byte_end":261074,"line_start":542,"line_end":542,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":261075,"byte_end":261082,"line_start":543,"line_end":543,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":261973,"byte_end":261985,"line_start":580,"line_end":580,"column_start":8,"column_end":20},"name":"many1_countc","qualname":"::multi::many1_countc","value":"pub fn many1_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264712,"byte_end":264716,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fill","qualname":"::multi::fill","value":"pub fn fill<'a, I, O, E, F>(F, &'a mut [O]) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E> + 'a, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\n the input runs out before the given slice is full.\n # Arguments\n * `f` The parser to apply.\n * `buf` The slice to fill\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fill;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263737,"byte_end":263836,"line_start":642,"line_end":642,"column_start":1,"column_end":100}},{"value":"/ the input runs out before the given slice is full.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263837,"byte_end":263891,"line_start":643,"line_end":643,"column_start":1,"column_end":55}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263892,"byte_end":263907,"line_start":644,"line_end":644,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263908,"byte_end":263938,"line_start":645,"line_end":645,"column_start":1,"column_end":31}},{"value":"/ * `buf` The slice to fill","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263939,"byte_end":263968,"line_start":646,"line_end":646,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263969,"byte_end":263980,"line_start":647,"line_end":647,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":263981,"byte_end":264017,"line_start":648,"line_end":648,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264018,"byte_end":264083,"line_start":649,"line_end":649,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fill;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264084,"byte_end":264109,"line_start":650,"line_end":650,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264110,"byte_end":264144,"line_start":651,"line_end":651,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264145,"byte_end":264148,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, [&str; 2]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264149,"byte_end":264201,"line_start":653,"line_end":653,"column_start":1,"column_end":53}},{"value":"/   let mut buf = [\"\", \"\"];","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264202,"byte_end":264231,"line_start":654,"line_end":654,"column_start":1,"column_end":30}},{"value":"/   let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264232,"byte_end":264286,"line_start":655,"line_end":655,"column_start":1,"column_end":55}},{"value":"/   Ok((rest, buf))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264287,"byte_end":264308,"line_start":656,"line_end":656,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264309,"byte_end":264314,"line_start":657,"line_end":657,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264315,"byte_end":264318,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264319,"byte_end":264378,"line_start":659,"line_end":659,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264379,"byte_end":264464,"line_start":660,"line_end":660,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264465,"byte_end":264553,"line_start":661,"line_end":661,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264554,"byte_end":264630,"line_start":662,"line_end":662,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264631,"byte_end":264696,"line_start":663,"line_end":663,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":264697,"byte_end":264704,"line_start":664,"line_end":664,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":266230,"byte_end":266240,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"fold_many0","qualname":"::multi::fold_many0","value":"pub fn fold_many0<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many0;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265312,"byte_end":265363,"line_start":694,"line_end":694,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265364,"byte_end":265421,"line_start":695,"line_end":695,"column_start":1,"column_end":58}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265422,"byte_end":265437,"line_start":696,"line_end":696,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265438,"byte_end":265468,"line_start":697,"line_end":697,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265469,"byte_end":265500,"line_start":698,"line_end":698,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265501,"byte_end":265558,"line_start":699,"line_end":699,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265559,"byte_end":265593,"line_start":700,"line_end":700,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265594,"byte_end":265605,"line_start":701,"line_end":701,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265606,"byte_end":265642,"line_start":702,"line_end":702,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265643,"byte_end":265699,"line_start":703,"line_end":703,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265700,"byte_end":265731,"line_start":704,"line_end":704,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265732,"byte_end":265766,"line_start":705,"line_end":705,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265767,"byte_end":265770,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265771,"byte_end":265823,"line_start":707,"line_end":707,"column_start":1,"column_end":53}},{"value":"/   fold_many0(","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265824,"byte_end":265841,"line_start":708,"line_end":708,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265842,"byte_end":265861,"line_start":709,"line_end":709,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265862,"byte_end":265881,"line_start":710,"line_end":710,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265882,"byte_end":265915,"line_start":711,"line_end":711,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265916,"byte_end":265941,"line_start":712,"line_end":712,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265942,"byte_end":265955,"line_start":713,"line_end":713,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265956,"byte_end":265965,"line_start":714,"line_end":714,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265966,"byte_end":265976,"line_start":715,"line_end":715,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265977,"byte_end":265982,"line_start":716,"line_end":716,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265983,"byte_end":265986,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":265987,"byte_end":266050,"line_start":718,"line_end":718,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":266051,"byte_end":266110,"line_start":719,"line_end":719,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":266111,"byte_end":266168,"line_start":720,"line_end":720,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":266169,"byte_end":266214,"line_start":721,"line_end":721,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":266215,"byte_end":266222,"line_start":722,"line_end":722,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267029,"byte_end":267040,"line_start":763,"line_end":763,"column_start":8,"column_end":19},"name":"fold_many0c","qualname":"::multi::fold_many0c","value":"pub fn fold_many0c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1171},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268318,"byte_end":268328,"line_start":805,"line_end":805,"column_start":8,"column_end":18},"name":"fold_many1","qualname":"::multi::fold_many1","value":"pub fn fold_many1<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least\n once.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fold_many1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267256,"byte_end":267307,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267308,"byte_end":267365,"line_start":775,"line_end":775,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267366,"byte_end":267424,"line_start":776,"line_end":776,"column_start":1,"column_end":59}},{"value":"/ once.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267425,"byte_end":267434,"line_start":777,"line_end":777,"column_start":1,"column_end":10}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267435,"byte_end":267450,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267451,"byte_end":267481,"line_start":779,"line_end":779,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267482,"byte_end":267513,"line_start":780,"line_end":780,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267514,"byte_end":267571,"line_start":781,"line_end":781,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267572,"byte_end":267606,"line_start":782,"line_end":782,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267607,"byte_end":267618,"line_start":783,"line_end":783,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267619,"byte_end":267655,"line_start":784,"line_end":784,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267656,"byte_end":267721,"line_start":785,"line_end":785,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fold_many1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267722,"byte_end":267753,"line_start":786,"line_end":786,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267754,"byte_end":267788,"line_start":787,"line_end":787,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267789,"byte_end":267792,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267793,"byte_end":267845,"line_start":789,"line_end":789,"column_start":1,"column_end":53}},{"value":"/   fold_many1(","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267846,"byte_end":267863,"line_start":790,"line_end":790,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267864,"byte_end":267883,"line_start":791,"line_end":791,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267884,"byte_end":267903,"line_start":792,"line_end":792,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267904,"byte_end":267937,"line_start":793,"line_end":793,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267938,"byte_end":267963,"line_start":794,"line_end":794,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267964,"byte_end":267977,"line_start":795,"line_end":795,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267978,"byte_end":267987,"line_start":796,"line_end":796,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267988,"byte_end":267998,"line_start":797,"line_end":797,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":267999,"byte_end":268004,"line_start":798,"line_end":798,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268005,"byte_end":268008,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268009,"byte_end":268072,"line_start":800,"line_end":800,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268073,"byte_end":268132,"line_start":801,"line_end":801,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268133,"byte_end":268223,"line_start":802,"line_end":802,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268224,"byte_end":268302,"line_start":803,"line_end":803,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":268303,"byte_end":268310,"line_start":804,"line_end":804,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269336,"byte_end":269347,"line_start":852,"line_end":852,"column_start":8,"column_end":19},"name":"fold_many1c","qualname":"::multi::fold_many1c","value":"pub fn fold_many1c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270754,"byte_end":270767,"line_start":899,"line_end":899,"column_start":8,"column_end":21},"name":"fold_many_m_n","qualname":"::multi::fold_many_m_n","value":"pub fn fold_many_m_n<I, O, E, F, G, R>(usize, usize, F, R, G)\n-> /*impl Trait*/ where I: Clone + PartialEq, F: Parser<I, O, E>, G: Fn(R, O)\n-> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser `n` times or until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least `m`\n times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser `n` times or until it fails and accumulates","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269563,"byte_end":269627,"line_start":863,"line_end":863,"column_start":1,"column_end":65}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269628,"byte_end":269685,"line_start":864,"line_end":864,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least `m`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269686,"byte_end":269748,"line_start":865,"line_end":865,"column_start":1,"column_end":63}},{"value":"/ times.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269749,"byte_end":269759,"line_start":866,"line_end":866,"column_start":1,"column_end":11}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269760,"byte_end":269775,"line_start":867,"line_end":867,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269776,"byte_end":269819,"line_start":868,"line_end":868,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269820,"byte_end":269863,"line_start":869,"line_end":869,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269864,"byte_end":269894,"line_start":870,"line_end":870,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269895,"byte_end":269926,"line_start":871,"line_end":871,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269927,"byte_end":269984,"line_start":872,"line_end":872,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":269985,"byte_end":270019,"line_start":873,"line_end":873,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270020,"byte_end":270031,"line_start":874,"line_end":874,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270032,"byte_end":270068,"line_start":875,"line_end":875,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270069,"byte_end":270125,"line_start":876,"line_end":876,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many_m_n;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270126,"byte_end":270160,"line_start":877,"line_end":877,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270161,"byte_end":270195,"line_start":878,"line_end":878,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270196,"byte_end":270199,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270200,"byte_end":270252,"line_start":880,"line_end":880,"column_start":1,"column_end":53}},{"value":"/   fold_many_m_n(","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270253,"byte_end":270273,"line_start":881,"line_end":881,"column_start":1,"column_end":21}},{"value":"/     0,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270274,"byte_end":270284,"line_start":882,"line_end":882,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270285,"byte_end":270295,"line_start":883,"line_end":883,"column_start":1,"column_end":11}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270296,"byte_end":270315,"line_start":884,"line_end":884,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270316,"byte_end":270335,"line_start":885,"line_end":885,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270336,"byte_end":270369,"line_start":886,"line_end":886,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270370,"byte_end":270395,"line_start":887,"line_end":887,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270396,"byte_end":270409,"line_start":888,"line_end":888,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270410,"byte_end":270419,"line_start":889,"line_end":889,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270420,"byte_end":270430,"line_start":890,"line_end":890,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270431,"byte_end":270436,"line_start":891,"line_end":891,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270437,"byte_end":270440,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270441,"byte_end":270504,"line_start":893,"line_end":893,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270505,"byte_end":270564,"line_start":894,"line_end":894,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270565,"byte_end":270622,"line_start":895,"line_end":895,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270623,"byte_end":270668,"line_start":896,"line_end":896,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270669,"byte_end":270738,"line_start":897,"line_end":897,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":270739,"byte_end":270746,"line_start":898,"line_end":898,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":271773,"byte_end":271787,"line_start":943,"line_end":943,"column_start":8,"column_end":22},"name":"fold_many_m_nc","qualname":"::multi::fold_many_m_nc","value":"pub fn fold_many_m_nc<I, O, E, F, G, R>(I, usize, usize, F, R, G)\n-> IResult<I, R, E> where I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>,\nG: Fn(R, O) -> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1203},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272762,"byte_end":272773,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"length_data","qualname":"::multi::length_data","value":"pub fn length_data<I, N, E, F>(F) -> /*impl Trait*/ where I: InputLength +\nInputTake, N: ToUsize, F: Parser<I, N, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the parser and returns a\n subslice of the input of that size.\n If the parser returns `Incomplete`,\n `length_data` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_data;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the parser and returns a","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272074,"byte_end":272121,"line_start":961,"line_end":961,"column_start":1,"column_end":48}},{"value":"/ subslice of the input of that size.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272122,"byte_end":272161,"line_start":962,"line_end":962,"column_start":1,"column_end":40}},{"value":"/ If the parser returns `Incomplete`,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272162,"byte_end":272201,"line_start":963,"line_end":963,"column_start":1,"column_end":40}},{"value":"/ `length_data` will return an error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272202,"byte_end":272241,"line_start":964,"line_end":964,"column_start":1,"column_end":40}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272242,"byte_end":272257,"line_start":965,"line_end":965,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272258,"byte_end":272288,"line_start":966,"line_end":966,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272289,"byte_end":272300,"line_start":967,"line_end":967,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272301,"byte_end":272337,"line_start":968,"line_end":968,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272338,"byte_end":272394,"line_start":969,"line_end":969,"column_start":1,"column_end":57}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272395,"byte_end":272433,"line_start":970,"line_end":970,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_data;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272434,"byte_end":272466,"line_start":971,"line_end":971,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272467,"byte_end":272501,"line_start":972,"line_end":972,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272502,"byte_end":272505,"line_start":973,"line_end":973,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272506,"byte_end":272556,"line_start":974,"line_end":974,"column_start":1,"column_end":51}},{"value":"/   length_data(be_u16)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272557,"byte_end":272585,"line_start":975,"line_end":975,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272586,"byte_end":272591,"line_start":976,"line_end":976,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272592,"byte_end":272595,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272596,"byte_end":272670,"line_start":978,"line_end":978,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272671,"byte_end":272746,"line_start":979,"line_end":979,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":272747,"byte_end":272754,"line_start":980,"line_end":980,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":274111,"byte_end":274123,"line_start":1026,"line_end":1026,"column_start":8,"column_end":20},"name":"length_value","qualname":"::multi::length_value","value":"pub fn length_value<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength + InputTake, N: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n takes a subslice of the input of that size,\n then applies the second parser on that subslice.\n If the second parser returns `Incomplete`,\n `length_value` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_value;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273237,"byte_end":273277,"line_start":1004,"line_end":1004,"column_start":1,"column_end":41}},{"value":"/ takes a subslice of the input of that size,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273278,"byte_end":273325,"line_start":1005,"line_end":1005,"column_start":1,"column_end":48}},{"value":"/ then applies the second parser on that subslice.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273326,"byte_end":273378,"line_start":1006,"line_end":1006,"column_start":1,"column_end":53}},{"value":"/ If the second parser returns `Incomplete`,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273379,"byte_end":273425,"line_start":1007,"line_end":1007,"column_start":1,"column_end":47}},{"value":"/ `length_value` will return an error.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273426,"byte_end":273466,"line_start":1008,"line_end":1008,"column_start":1,"column_end":41}},{"value":"/ # Arguments","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273467,"byte_end":273482,"line_start":1009,"line_end":1009,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273483,"byte_end":273513,"line_start":1010,"line_end":1010,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273514,"byte_end":273525,"line_start":1011,"line_end":1011,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273526,"byte_end":273562,"line_start":1012,"line_end":1012,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273563,"byte_end":273628,"line_start":1013,"line_end":1013,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273629,"byte_end":273667,"line_start":1014,"line_end":1014,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_value;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273668,"byte_end":273701,"line_start":1015,"line_end":1015,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273702,"byte_end":273736,"line_start":1016,"line_end":1016,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273737,"byte_end":273740,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273741,"byte_end":273791,"line_start":1018,"line_end":1018,"column_start":1,"column_end":51}},{"value":"/   length_value(be_u16, tag(\"abc\"))(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273792,"byte_end":273833,"line_start":1019,"line_end":1019,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273834,"byte_end":273839,"line_start":1020,"line_end":1020,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273840,"byte_end":273843,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273844,"byte_end":273918,"line_start":1022,"line_end":1022,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":273919,"byte_end":274019,"line_start":1023,"line_end":1023,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":274020,"byte_end":274095,"line_start":1024,"line_end":1024,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":274096,"byte_end":274103,"line_start":1025,"line_end":1025,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1219},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/multi/mod.rs","byte_start":274868,"byte_end":274881,"line_start":1056,"line_end":1056,"column_start":8,"column_end":21},"name":"length_valuec","qualname":"::multi::length_valuec","value":"pub fn length_valuec<I, O, N, E, F, G>(I, F, G) -> IResult<I, O, E> where\nI: Clone + InputLength + InputTake, N: ToUsize, F: Fn(I) -> IResult<I, N, E>,\nG: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1226},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::bytes","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/mod.rs","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1242},{"krate":0,"index":1353}],"decl_id":null,"docs":" Parsers recognizing bytes streams\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16636,"byte_end":16648,"line_start":499,"line_end":499,"column_start":1,"column_end":13}},{"value":"! Parsers recognizing bytes streams","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/mod.rs","byte_start":310514,"byte_end":310551,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1242},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bytes::complete","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1268},{"krate":0,"index":1274},{"krate":0,"index":1281},{"krate":0,"index":1288},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1309},{"krate":0,"index":1316},{"krate":0,"index":1323},{"krate":0,"index":1329},{"krate":0,"index":1335},{"krate":0,"index":1346}],"decl_id":null,"docs":" Parsers recognizing bytes streams, complete input version\n","sig":null,"attributes":[{"value":"! Parsers recognizing bytes streams, complete input version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":340905,"byte_end":340966,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342070,"byte_end":342073,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::complete::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern","sig":null,"attributes":[{"value":"/ Recognizes a pattern","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341300,"byte_end":341324,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341325,"byte_end":341328,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341329,"byte_end":341425,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341426,"byte_end":341465,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341466,"byte_end":341469,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341470,"byte_end":341566,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341567,"byte_end":341580,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341581,"byte_end":341592,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341593,"byte_end":341629,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341630,"byte_end":341695,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341696,"byte_end":341730,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341731,"byte_end":341734,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341735,"byte_end":341782,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341783,"byte_end":341804,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341805,"byte_end":341810,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341811,"byte_end":341814,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341815,"byte_end":341882,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341883,"byte_end":341977,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":341978,"byte_end":342054,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342055,"byte_end":342062,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343536,"byte_end":343547,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::complete::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342571,"byte_end":342613,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342614,"byte_end":342617,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342618,"byte_end":342714,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342715,"byte_end":342778,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342779,"byte_end":342782,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342783,"byte_end":342880,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342881,"byte_end":342894,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342895,"byte_end":342906,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342907,"byte_end":342943,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":342944,"byte_end":343009,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag_no_case;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343010,"byte_end":343052,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343053,"byte_end":343056,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343057,"byte_end":343104,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343105,"byte_end":343134,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343135,"byte_end":343140,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343141,"byte_end":343144,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343145,"byte_end":343212,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343213,"byte_end":343280,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343281,"byte_end":343348,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343349,"byte_end":343443,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343444,"byte_end":343520,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":343521,"byte_end":343528,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344905,"byte_end":344911,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::complete::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344056,"byte_end":344098,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344099,"byte_end":344102,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344103,"byte_end":344212,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344213,"byte_end":344216,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344217,"byte_end":344262,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344263,"byte_end":344266,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344267,"byte_end":344351,"line_start":104,"line_end":104,"column_start":1,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344352,"byte_end":344365,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344366,"byte_end":344377,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344378,"byte_end":344414,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344415,"byte_end":344480,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_not;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344481,"byte_end":344518,"line_start":109,"line_end":109,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344519,"byte_end":344522,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344523,"byte_end":344573,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344574,"byte_end":344600,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344601,"byte_end":344606,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344607,"byte_end":344610,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344611,"byte_end":344681,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344682,"byte_end":344748,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344749,"byte_end":344807,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344808,"byte_end":344889,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":344890,"byte_end":344897,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1281},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346117,"byte_end":346121,"line_start":155,"line_end":155,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::complete::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345231,"byte_end":345288,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345289,"byte_end":345292,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345293,"byte_end":345385,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345386,"byte_end":345412,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345413,"byte_end":345416,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345417,"byte_end":345503,"line_start":138,"line_end":138,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345504,"byte_end":345517,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345518,"byte_end":345529,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345530,"byte_end":345566,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345567,"byte_end":345632,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_a;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345633,"byte_end":345668,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345669,"byte_end":345672,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345673,"byte_end":345717,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345718,"byte_end":345751,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345752,"byte_end":345757,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345758,"byte_end":345761,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345762,"byte_end":345826,"line_start":149,"line_end":149,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345827,"byte_end":345903,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345904,"byte_end":345974,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":345975,"byte_end":346027,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346028,"byte_end":346101,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346102,"byte_end":346109,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347222,"byte_end":347232,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::complete::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346440,"byte_end":346512,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346513,"byte_end":346516,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346517,"byte_end":346612,"line_start":170,"line_end":170,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346613,"byte_end":346654,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346655,"byte_end":346668,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346669,"byte_end":346680,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346681,"byte_end":346717,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346718,"byte_end":346774,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_while;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346775,"byte_end":346816,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346817,"byte_end":346855,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346856,"byte_end":346859,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346860,"byte_end":346909,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346910,"byte_end":346944,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346945,"byte_end":346950,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346951,"byte_end":346954,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":346955,"byte_end":347024,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347025,"byte_end":347088,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347089,"byte_end":347152,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347153,"byte_end":347206,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347207,"byte_end":347214,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1295},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348368,"byte_end":348379,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::complete::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347490,"byte_end":347566,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347567,"byte_end":347570,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347571,"byte_end":347666,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347667,"byte_end":347708,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347709,"byte_end":347712,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347713,"byte_end":347807,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347808,"byte_end":347821,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347822,"byte_end":347833,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347834,"byte_end":347870,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347871,"byte_end":347936,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347937,"byte_end":347979,"line_start":208,"line_end":208,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":347980,"byte_end":348018,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348019,"byte_end":348022,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348023,"byte_end":348072,"line_start":211,"line_end":211,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348073,"byte_end":348108,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348109,"byte_end":348114,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348115,"byte_end":348118,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348119,"byte_end":348188,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348189,"byte_end":348252,"line_start":216,"line_end":216,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348253,"byte_end":348352,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348353,"byte_end":348360,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1302},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349826,"byte_end":349840,"line_start":256,"line_end":256,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::complete::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength +\nSlice<RangeFrom<usize>>, F: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348697,"byte_end":348777,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348778,"byte_end":348781,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348782,"byte_end":348877,"line_start":234,"line_end":234,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348878,"byte_end":348919,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348920,"byte_end":348923,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":348924,"byte_end":349023,"line_start":237,"line_end":237,"column_start":1,"column_end":100}},{"value":"/ of range (m <= len <= n).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349024,"byte_end":349053,"line_start":238,"line_end":238,"column_start":1,"column_end":30}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349054,"byte_end":349067,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349068,"byte_end":349079,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349080,"byte_end":349116,"line_start":241,"line_end":241,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349117,"byte_end":349182,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while_m_n;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349183,"byte_end":349228,"line_start":243,"line_end":243,"column_start":1,"column_end":46}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349229,"byte_end":349267,"line_start":244,"line_end":244,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349268,"byte_end":349271,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349272,"byte_end":349327,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349328,"byte_end":349372,"line_start":247,"line_end":247,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349373,"byte_end":349378,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349379,"byte_end":349382,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349383,"byte_end":349458,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349459,"byte_end":349532,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349533,"byte_end":349602,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349603,"byte_end":349703,"line_start":253,"line_end":253,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349704,"byte_end":349810,"line_start":254,"line_end":254,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":349811,"byte_end":349818,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1309},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352368,"byte_end":352377,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::complete::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351639,"byte_end":351708,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351709,"byte_end":351712,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351713,"byte_end":351800,"line_start":321,"line_end":321,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351801,"byte_end":351842,"line_start":322,"line_end":322,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351843,"byte_end":351856,"line_start":323,"line_end":323,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351857,"byte_end":351868,"line_start":324,"line_end":324,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351869,"byte_end":351905,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351906,"byte_end":351962,"line_start":326,"line_end":326,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_till;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":351963,"byte_end":352003,"line_start":327,"line_end":327,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352004,"byte_end":352007,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352008,"byte_end":352059,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352060,"byte_end":352092,"line_start":330,"line_end":330,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352093,"byte_end":352098,"line_start":331,"line_end":331,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352099,"byte_end":352102,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352103,"byte_end":352166,"line_start":333,"line_end":333,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352167,"byte_end":352250,"line_start":334,"line_end":334,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352251,"byte_end":352306,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352307,"byte_end":352352,"line_start":336,"line_end":336,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352353,"byte_end":352360,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1316},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353586,"byte_end":353596,"line_start":370,"line_end":370,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::complete::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352634,"byte_end":352707,"line_start":348,"line_end":348,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352708,"byte_end":352711,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352712,"byte_end":352799,"line_start":350,"line_end":350,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352800,"byte_end":352841,"line_start":351,"line_end":351,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352842,"byte_end":352845,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352846,"byte_end":352938,"line_start":353,"line_end":353,"column_start":1,"column_end":93}},{"value":"/ predicate matches the first input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352939,"byte_end":352977,"line_start":354,"line_end":354,"column_start":1,"column_end":39}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352978,"byte_end":352991,"line_start":355,"line_end":355,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":352992,"byte_end":353003,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353004,"byte_end":353040,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353041,"byte_end":353106,"line_start":358,"line_end":358,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_till1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353107,"byte_end":353148,"line_start":359,"line_end":359,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353149,"byte_end":353152,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353153,"byte_end":353204,"line_start":361,"line_end":361,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353205,"byte_end":353238,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353239,"byte_end":353244,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353245,"byte_end":353248,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353249,"byte_end":353312,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353313,"byte_end":353427,"line_start":366,"line_end":366,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353428,"byte_end":353483,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353484,"byte_end":353570,"line_start":368,"line_end":368,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353571,"byte_end":353578,"line_start":369,"line_end":369,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354629,"byte_end":354633,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::complete::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353912,"byte_end":353990,"line_start":383,"line_end":383,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353991,"byte_end":353994,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":353995,"byte_end":354095,"line_start":385,"line_end":385,"column_start":1,"column_end":101}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354096,"byte_end":354109,"line_start":386,"line_end":386,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354110,"byte_end":354121,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354122,"byte_end":354158,"line_start":388,"line_end":388,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354159,"byte_end":354224,"line_start":389,"line_end":389,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354225,"byte_end":354260,"line_start":390,"line_end":390,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354261,"byte_end":354264,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354265,"byte_end":354311,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354312,"byte_end":354333,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354334,"byte_end":354339,"line_start":394,"line_end":394,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354340,"byte_end":354343,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354344,"byte_end":354398,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354399,"byte_end":354451,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354452,"byte_end":354537,"line_start":398,"line_end":398,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354538,"byte_end":354613,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354614,"byte_end":354621,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1329},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355801,"byte_end":355811,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::complete::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":354989,"byte_end":355059,"line_start":415,"line_end":415,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355060,"byte_end":355063,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355064,"byte_end":355159,"line_start":417,"line_end":417,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355160,"byte_end":355190,"line_start":418,"line_end":418,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355191,"byte_end":355204,"line_start":419,"line_end":419,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355205,"byte_end":355216,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355217,"byte_end":355253,"line_start":421,"line_end":421,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355254,"byte_end":355319,"line_start":422,"line_end":422,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355320,"byte_end":355361,"line_start":423,"line_end":423,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355362,"byte_end":355365,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355366,"byte_end":355416,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355417,"byte_end":355443,"line_start":426,"line_end":426,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355444,"byte_end":355449,"line_start":427,"line_end":427,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355450,"byte_end":355453,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355454,"byte_end":355528,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355529,"byte_end":355638,"line_start":430,"line_end":430,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355639,"byte_end":355724,"line_start":431,"line_end":431,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355725,"byte_end":355785,"line_start":432,"line_end":432,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":355786,"byte_end":355793,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":357004,"byte_end":357011,"line_start":472,"line_end":472,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::complete::escaped","value":"pub fn escaped<'a, Input: 'a, Error, F, G, O1, O2>(F, char, G)\n-> /*impl Trait*/ where Input: Clone + crate::traits::Offset + InputLength +\nInputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356241,"byte_end":356291,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356292,"byte_end":356295,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356296,"byte_end":356393,"line_start":453,"line_end":453,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356394,"byte_end":356473,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356474,"byte_end":356529,"line_start":455,"line_end":455,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356530,"byte_end":356543,"line_start":456,"line_end":456,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356544,"byte_end":356551,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356552,"byte_end":356588,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356589,"byte_end":356645,"line_start":459,"line_end":459,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356646,"byte_end":356689,"line_start":460,"line_end":460,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::complete::escaped;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356690,"byte_end":356728,"line_start":461,"line_end":461,"column_start":1,"column_end":39}},{"value":"/ use nom::character::complete::one_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356729,"byte_end":356770,"line_start":462,"line_end":462,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356771,"byte_end":356774,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356775,"byte_end":356819,"line_start":464,"line_end":464,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356820,"byte_end":356868,"line_start":465,"line_end":465,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356869,"byte_end":356874,"line_start":466,"line_end":466,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356875,"byte_end":356878,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356879,"byte_end":356925,"line_start":468,"line_end":468,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356926,"byte_end":356984,"line_start":469,"line_end":469,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356985,"byte_end":356992,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":356993,"byte_end":356996,"line_start":471,"line_end":471,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1346},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/complete.rs","byte_start":359058,"byte_end":359066,"line_start":547,"line_end":547,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::complete::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1353},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bytes::streaming","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":1393},{"krate":0,"index":1400},{"krate":0,"index":1407},{"krate":0,"index":1414},{"krate":0,"index":1421},{"krate":0,"index":1428},{"krate":0,"index":1435},{"krate":0,"index":1441},{"krate":0,"index":1447},{"krate":0,"index":1457}],"decl_id":null,"docs":" Parsers recognizing bytes streams, streaming version\n","sig":null,"attributes":[{"value":"! Parsers recognizing bytes streams, streaming version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":364558,"byte_end":364614,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365697,"byte_end":365700,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::streaming::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern.","sig":null,"attributes":[{"value":"/ Recognizes a pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":364956,"byte_end":364981,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":364982,"byte_end":364985,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":364986,"byte_end":365082,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365083,"byte_end":365123,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365124,"byte_end":365137,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365138,"byte_end":365149,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365150,"byte_end":365186,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365187,"byte_end":365252,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365253,"byte_end":365288,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365289,"byte_end":365292,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365293,"byte_end":365340,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365341,"byte_end":365362,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365363,"byte_end":365368,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365369,"byte_end":365372,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365373,"byte_end":365440,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365441,"byte_end":365535,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365536,"byte_end":365614,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365615,"byte_end":365681,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":365682,"byte_end":365689,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1380},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367180,"byte_end":367191,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::streaming::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366327,"byte_end":366369,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366370,"byte_end":366373,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366374,"byte_end":366470,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366471,"byte_end":366534,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366535,"byte_end":366548,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366549,"byte_end":366560,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366561,"byte_end":366597,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366598,"byte_end":366663,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag_no_case;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366664,"byte_end":366707,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366708,"byte_end":366711,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366712,"byte_end":366759,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366760,"byte_end":366789,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366790,"byte_end":366795,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366796,"byte_end":366799,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366800,"byte_end":366867,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366868,"byte_end":366935,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":366936,"byte_end":367003,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367004,"byte_end":367098,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367099,"byte_end":367164,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367165,"byte_end":367172,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368670,"byte_end":368676,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::streaming::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367828,"byte_end":367870,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367871,"byte_end":367874,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367875,"byte_end":367984,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367985,"byte_end":367988,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":367989,"byte_end":368034,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368035,"byte_end":368038,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368039,"byte_end":368120,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368121,"byte_end":368134,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368135,"byte_end":368146,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368147,"byte_end":368183,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368184,"byte_end":368240,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_not;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368241,"byte_end":368279,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368280,"byte_end":368283,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368284,"byte_end":368334,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368335,"byte_end":368361,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368362,"byte_end":368367,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368368,"byte_end":368371,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368372,"byte_end":368442,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368443,"byte_end":368509,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368510,"byte_end":368585,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368586,"byte_end":368654,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368655,"byte_end":368662,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1393},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369959,"byte_end":369963,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::streaming::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":368987,"byte_end":369044,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369045,"byte_end":369048,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369049,"byte_end":369141,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369142,"byte_end":369168,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369169,"byte_end":369172,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Streaming specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369173,"byte_end":369197,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369198,"byte_end":369295,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ or if the pattern reaches the end of the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369296,"byte_end":369347,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369348,"byte_end":369361,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369362,"byte_end":369373,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369374,"byte_end":369410,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369411,"byte_end":369467,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_a;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369468,"byte_end":369504,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369505,"byte_end":369508,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369509,"byte_end":369553,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369554,"byte_end":369587,"line_start":148,"line_end":148,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369588,"byte_end":369593,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369594,"byte_end":369597,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369598,"byte_end":369662,"line_start":151,"line_end":151,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369663,"byte_end":369739,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369740,"byte_end":369810,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369811,"byte_end":369880,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369881,"byte_end":369943,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":369944,"byte_end":369951,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1400},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371221,"byte_end":371231,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::streaming::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370273,"byte_end":370345,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370346,"byte_end":370349,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370350,"byte_end":370445,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370446,"byte_end":370487,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370488,"byte_end":370491,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370492,"byte_end":370516,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370517,"byte_end":370633,"line_start":176,"line_end":176,"column_start":1,"column_end":117}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370634,"byte_end":370647,"line_start":177,"line_end":177,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370648,"byte_end":370659,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370660,"byte_end":370696,"line_start":179,"line_end":179,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370697,"byte_end":370753,"line_start":180,"line_end":180,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_while;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370754,"byte_end":370796,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370797,"byte_end":370835,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370836,"byte_end":370839,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370840,"byte_end":370889,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370890,"byte_end":370924,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370925,"byte_end":370930,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370931,"byte_end":370934,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":370935,"byte_end":371004,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371005,"byte_end":371068,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371069,"byte_end":371139,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371140,"byte_end":371205,"line_start":191,"line_end":191,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371206,"byte_end":371213,"line_start":192,"line_end":192,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1407},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372519,"byte_end":372530,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::streaming::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371480,"byte_end":371556,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371557,"byte_end":371560,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371561,"byte_end":371656,"line_start":205,"line_end":205,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371657,"byte_end":371698,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371699,"byte_end":371702,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371703,"byte_end":371797,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371798,"byte_end":371801,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371802,"byte_end":371826,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371827,"byte_end":371946,"line_start":211,"line_end":211,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371947,"byte_end":371950,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371951,"byte_end":371964,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371965,"byte_end":371976,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":371977,"byte_end":372013,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372014,"byte_end":372079,"line_start":216,"line_end":216,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372080,"byte_end":372123,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372124,"byte_end":372162,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372163,"byte_end":372166,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372167,"byte_end":372216,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372217,"byte_end":372252,"line_start":221,"line_end":221,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372253,"byte_end":372258,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372259,"byte_end":372262,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372263,"byte_end":372332,"line_start":224,"line_end":224,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372333,"byte_end":372403,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372404,"byte_end":372503,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372504,"byte_end":372511,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":374073,"byte_end":374087,"line_start":267,"line_end":267,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::streaming::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength,\nF: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372839,"byte_end":372919,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372920,"byte_end":372923,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":372924,"byte_end":373019,"line_start":243,"line_end":243,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373020,"byte_end":373061,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373062,"byte_end":373065,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373066,"byte_end":373156,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373157,"byte_end":373181,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373182,"byte_end":373315,"line_start":248,"line_end":248,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373316,"byte_end":373319,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373320,"byte_end":373333,"line_start":250,"line_end":250,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373334,"byte_end":373345,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373346,"byte_end":373382,"line_start":252,"line_end":252,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373383,"byte_end":373448,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while_m_n;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373449,"byte_end":373495,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373496,"byte_end":373534,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373535,"byte_end":373538,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373539,"byte_end":373594,"line_start":257,"line_end":257,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373595,"byte_end":373639,"line_start":258,"line_end":258,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373640,"byte_end":373645,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373646,"byte_end":373649,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373650,"byte_end":373725,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373726,"byte_end":373799,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373800,"byte_end":373876,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373877,"byte_end":373950,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":373951,"byte_end":374057,"line_start":265,"line_end":265,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":374058,"byte_end":374065,"line_start":266,"line_end":266,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376685,"byte_end":376694,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::streaming::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375738,"byte_end":375807,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375808,"byte_end":375811,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375812,"byte_end":375899,"line_start":329,"line_end":329,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375900,"byte_end":375941,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375942,"byte_end":375945,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375946,"byte_end":375970,"line_start":332,"line_end":332,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":375971,"byte_end":376067,"line_start":333,"line_end":333,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376068,"byte_end":376111,"line_start":334,"line_end":334,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376112,"byte_end":376115,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376116,"byte_end":376129,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376130,"byte_end":376141,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376142,"byte_end":376178,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376179,"byte_end":376235,"line_start":339,"line_end":339,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_till;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376236,"byte_end":376277,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376278,"byte_end":376281,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376282,"byte_end":376333,"line_start":342,"line_end":342,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376334,"byte_end":376366,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376367,"byte_end":376372,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376373,"byte_end":376376,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376377,"byte_end":376440,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376441,"byte_end":376524,"line_start":347,"line_end":347,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376525,"byte_end":376599,"line_start":348,"line_end":348,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376600,"byte_end":376669,"line_start":349,"line_end":349,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376670,"byte_end":376677,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1428},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377931,"byte_end":377941,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::streaming::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":376942,"byte_end":377015,"line_start":361,"line_end":361,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377016,"byte_end":377019,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377020,"byte_end":377107,"line_start":363,"line_end":363,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377108,"byte_end":377149,"line_start":364,"line_end":364,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377150,"byte_end":377153,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377154,"byte_end":377178,"line_start":366,"line_end":366,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377179,"byte_end":377275,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377276,"byte_end":377319,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377320,"byte_end":377333,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377334,"byte_end":377345,"line_start":370,"line_end":370,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377346,"byte_end":377382,"line_start":371,"line_end":371,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377383,"byte_end":377448,"line_start":372,"line_end":372,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_till1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377449,"byte_end":377491,"line_start":373,"line_end":373,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377492,"byte_end":377495,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377496,"byte_end":377547,"line_start":375,"line_end":375,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377548,"byte_end":377581,"line_start":376,"line_end":376,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377582,"byte_end":377587,"line_start":377,"line_end":377,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377588,"byte_end":377591,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377592,"byte_end":377655,"line_start":379,"line_end":379,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377656,"byte_end":377770,"line_start":380,"line_end":380,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377771,"byte_end":377845,"line_start":381,"line_end":381,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377846,"byte_end":377915,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":377916,"byte_end":377923,"line_start":383,"line_end":383,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379232,"byte_end":379236,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::streaming::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake + InputLength, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378248,"byte_end":378326,"line_start":397,"line_end":397,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378327,"byte_end":378330,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378331,"byte_end":378355,"line_start":399,"line_end":399,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* if the input has less than N elements, `take` will","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378356,"byte_end":378430,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ return a `Err::Incomplete(Needed::new(M))` where M is the number of","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378431,"byte_end":378502,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/ additional bytes the parser would need to succeed.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378503,"byte_end":378557,"line_start":402,"line_end":402,"column_start":1,"column_end":55}},{"value":"/ It is well defined for `&[u8]` as the number of elements is the byte size,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378558,"byte_end":378636,"line_start":403,"line_end":403,"column_start":1,"column_end":79}},{"value":"/ but for types like `&str`, we cannot know how many bytes correspond for","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378637,"byte_end":378712,"line_start":404,"line_end":404,"column_start":1,"column_end":76}},{"value":"/ the next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378713,"byte_end":378793,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378794,"byte_end":378797,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378798,"byte_end":378811,"line_start":407,"line_end":407,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378812,"byte_end":378823,"line_start":408,"line_end":408,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378824,"byte_end":378860,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378861,"byte_end":378917,"line_start":410,"line_end":410,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378918,"byte_end":378954,"line_start":411,"line_end":411,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378955,"byte_end":378958,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":378959,"byte_end":379005,"line_start":413,"line_end":413,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379006,"byte_end":379027,"line_start":414,"line_end":414,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379028,"byte_end":379033,"line_start":415,"line_end":415,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379034,"byte_end":379037,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379038,"byte_end":379092,"line_start":417,"line_end":417,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379093,"byte_end":379145,"line_start":418,"line_end":418,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379146,"byte_end":379216,"line_start":419,"line_end":419,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379217,"byte_end":379224,"line_start":420,"line_end":420,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380439,"byte_end":380449,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::streaming::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379565,"byte_end":379635,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379636,"byte_end":379639,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379640,"byte_end":379675,"line_start":437,"line_end":437,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379676,"byte_end":379679,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379680,"byte_end":379704,"line_start":439,"line_end":439,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379705,"byte_end":379797,"line_start":440,"line_end":440,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379798,"byte_end":379866,"line_start":441,"line_end":441,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379867,"byte_end":379880,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379881,"byte_end":379892,"line_start":443,"line_end":443,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379893,"byte_end":379929,"line_start":444,"line_end":444,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379930,"byte_end":379986,"line_start":445,"line_end":445,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_until;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":379987,"byte_end":380029,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380030,"byte_end":380033,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380034,"byte_end":380084,"line_start":448,"line_end":448,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380085,"byte_end":380111,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380112,"byte_end":380117,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380118,"byte_end":380121,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380122,"byte_end":380196,"line_start":452,"line_end":452,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380197,"byte_end":380278,"line_start":453,"line_end":453,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380279,"byte_end":380362,"line_start":454,"line_end":454,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380363,"byte_end":380423,"line_start":455,"line_end":455,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380424,"byte_end":380431,"line_start":456,"line_end":456,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1447},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381615,"byte_end":381622,"line_start":496,"line_end":496,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::streaming::escaped","value":"pub fn escaped<Input, Error, F, G, O1, O2>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380853,"byte_end":380903,"line_start":475,"line_end":475,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380904,"byte_end":380907,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":380908,"byte_end":381005,"line_start":477,"line_end":477,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381006,"byte_end":381085,"line_start":478,"line_end":478,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381086,"byte_end":381141,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381142,"byte_end":381155,"line_start":480,"line_end":480,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381156,"byte_end":381163,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381164,"byte_end":381200,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381201,"byte_end":381257,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381258,"byte_end":381301,"line_start":484,"line_end":484,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::streaming::escaped;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381302,"byte_end":381341,"line_start":485,"line_end":485,"column_start":1,"column_end":40}},{"value":"/ use nom::character::streaming::one_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381342,"byte_end":381384,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381385,"byte_end":381388,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381389,"byte_end":381433,"line_start":488,"line_end":488,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381434,"byte_end":381481,"line_start":489,"line_end":489,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381482,"byte_end":381487,"line_start":490,"line_end":490,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381488,"byte_end":381491,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381492,"byte_end":381538,"line_start":492,"line_end":492,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381539,"byte_end":381595,"line_start":493,"line_end":493,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381596,"byte_end":381603,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":381604,"byte_end":381607,"line_start":495,"line_end":495,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/streaming.rs","byte_start":383378,"byte_end":383386,"line_start":562,"line_end":562,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::streaming::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1464},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1470},{"krate":0,"index":1503},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1557},{"krate":0,"index":1563},{"krate":0,"index":1571}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16664,"byte_end":16676,"line_start":501,"line_end":501,"column_start":1,"column_end":13}},{"value":"! Bit level parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388124,"byte_end":388145,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388146,"byte_end":388149,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1470},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bits::complete","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1495}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"! Bit level parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":400147,"byte_end":400168,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":400169,"byte_end":400172,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1488},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":400431,"byte_end":400435,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::complete::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":400381,"byte_end":400423,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":401987,"byte_end":401990,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::complete::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/complete.rs","byte_start":401905,"byte_end":401979,"line_start":61,"line_end":61,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1503},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bits::streaming","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1529}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"! Bit level parsers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":402574,"byte_end":402595,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":402596,"byte_end":402599,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1522},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":402866,"byte_end":402870,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::streaming::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":402816,"byte_end":402858,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":404368,"byte_end":404371,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::streaming::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/streaming.rs","byte_start":404286,"byte_end":404360,"line_start":58,"line_end":58,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1548},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":389050,"byte_end":389054,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"bits","qualname":"::bits::bits","value":"pub fn bits<I, O, E1: ParseError<(I, usize)> + ErrorConvert<E2>,\n            E2: ParseError<I>, P>(P) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","sig":null,"attributes":[{"value":"/ Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388383,"byte_end":388480,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388481,"byte_end":388484,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Afterwards, the input is converted back to a byte-level parser, with any remaining bits thrown","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388485,"byte_end":388583,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ away.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388584,"byte_end":388593,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388594,"byte_end":388597,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388598,"byte_end":388611,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```ignore","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388612,"byte_end":388625,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388626,"byte_end":388662,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388663,"byte_end":388686,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/ use nom::bits::bits;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388687,"byte_end":388711,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/ use nom::bits::complete::take;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388712,"byte_end":388746,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ use nom::error::Error;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388747,"byte_end":388773,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388774,"byte_end":388777,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn take_4_bits(input: &[u8]) -> IResult<&[u8], u64> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388778,"byte_end":388835,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/   bits(take::<_, _, _, Error<_>>(4usize))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388836,"byte_end":388888,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388889,"byte_end":388894,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388895,"byte_end":388898,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let input = vec![0xAB, 0xCD, 0xEF, 0x12];","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388899,"byte_end":388944,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ let sl    = &input[..];","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388945,"byte_end":388972,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388973,"byte_end":388976,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take_4_bits( sl ), Ok( (&sl[1..], 0xA) ));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388977,"byte_end":389034,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":389035,"byte_end":389042,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1557},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":389707,"byte_end":389712,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"bitsc","qualname":"::bits::bitsc","value":"pub fn bitsc<I, O, E1: ParseError<(I, usize)> + ErrorConvert<E2>,\n             E2: ParseError<I>, P>(I, P) -> IResult<I, O, E2> where\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1563},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390782,"byte_end":390787,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"bytes","qualname":"::bits::bytes","value":"pub fn bytes<I, O, E1: ParseError<I> + ErrorConvert<E2>,\n             E2: ParseError<(I, usize)>, P>(P) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + Clone, P: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\n parser, allowing byte-slice parsers to work on bit streams.","sig":null,"attributes":[{"value":"/ Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":389954,"byte_end":390057,"line_start":67,"line_end":67,"column_start":1,"column_end":104}},{"value":"/ parser, allowing byte-slice parsers to work on bit streams.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390058,"byte_end":390121,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390122,"byte_end":390125,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ A partial byte remaining in the input will be ignored and the given parser will start parsing","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390126,"byte_end":390223,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ at the next full byte.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390224,"byte_end":390250,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390251,"byte_end":390254,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390255,"byte_end":390268,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390269,"byte_end":390305,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390306,"byte_end":390329,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ # use nom::combinator::rest;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390330,"byte_end":390362,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # use nom::sequence::tuple;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390363,"byte_end":390394,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ use nom::bits::{bits, bytes, streaming::take_bits};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390395,"byte_end":390450,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390451,"byte_end":390454,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390455,"byte_end":390518,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/   bits(tuple((","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390519,"byte_end":390537,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/     take_bits(4usize),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390538,"byte_end":390564,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/     take_bits(8usize),","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390565,"byte_end":390591,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/     bytes(rest)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390592,"byte_end":390611,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/   )))(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390612,"byte_end":390628,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390629,"byte_end":390634,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390635,"byte_end":390638,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let input = &[0xde, 0xad, 0xbe, 0xaf];","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390639,"byte_end":390681,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390682,"byte_end":390685,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse( input ), Ok(( &[][..], (0xd, 0xea, &[0xbe, 0xaf][..]) )));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390686,"byte_end":390766,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":390767,"byte_end":390774,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1571},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":391753,"byte_end":391759,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"bytesc","qualname":"::bits::bytesc","value":"pub fn bytesc<I, O, E1: ParseError<I> + ErrorConvert<E2>,\n              E2: ParseError<(I, usize)>, P>((I, usize), P)\n-> IResult<(I, usize), O, E2> where I: Slice<RangeFrom<usize>> + Clone,\nP: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1577},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"character","qualname":"::character","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":1704},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833}],"decl_id":null,"docs":" Character specific parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16692,"byte_end":16704,"line_start":504,"line_end":504,"column_start":1,"column_end":13}},{"value":"! Character specific parsers and combinators","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":404955,"byte_end":405001,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405002,"byte_end":405005,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Functions recognizing specific characters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405006,"byte_end":405051,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1582},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::character::complete","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1622},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1652},{"krate":0,"index":1656},{"krate":0,"index":1660},{"krate":0,"index":1664},{"krate":0,"index":1668},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":1684},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1700}],"decl_id":null,"docs":" Character specific parsers and combinators, complete input version.","sig":null,"attributes":[{"value":"! Character specific parsers and combinators, complete input version.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410506,"byte_end":410577,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410578,"byte_end":410581,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Functions recognizing specific characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410582,"byte_end":410628,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1602},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411542,"byte_end":411546,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::complete::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410919,"byte_end":410948,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410949,"byte_end":410952,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":410953,"byte_end":411031,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411032,"byte_end":411045,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411046,"byte_end":411049,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411050,"byte_end":411057,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411058,"byte_end":411115,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::char;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411116,"byte_end":411157,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411158,"byte_end":411205,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411206,"byte_end":411226,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411227,"byte_end":411232,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411233,"byte_end":411280,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411281,"byte_end":411366,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411367,"byte_end":411448,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411449,"byte_end":411526,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411527,"byte_end":411534,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1608},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412549,"byte_end":412556,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::complete::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":411931,"byte_end":412000,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412001,"byte_end":412004,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412005,"byte_end":412083,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412084,"byte_end":412097,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412098,"byte_end":412101,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412102,"byte_end":412109,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412110,"byte_end":412175,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::satisfy;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412176,"byte_end":412220,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412221,"byte_end":412268,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412269,"byte_end":412313,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412314,"byte_end":412319,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412320,"byte_end":412367,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412368,"byte_end":412452,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412453,"byte_end":412533,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412534,"byte_end":412541,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1615},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413534,"byte_end":413540,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::complete::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":412995,"byte_end":413041,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413042,"byte_end":413045,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413046,"byte_end":413124,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413125,"byte_end":413138,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413139,"byte_end":413142,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413143,"byte_end":413150,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413151,"byte_end":413190,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::one_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413191,"byte_end":413234,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413235,"byte_end":413312,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413313,"byte_end":413417,"line_start":82,"line_end":82,"column_start":1,"column_end":105}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413418,"byte_end":413518,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413519,"byte_end":413526,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1622},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414536,"byte_end":414543,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::complete::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":413972,"byte_end":414038,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414039,"byte_end":414042,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414043,"byte_end":414121,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414122,"byte_end":414135,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414136,"byte_end":414139,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414140,"byte_end":414147,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414148,"byte_end":414187,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::none_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414188,"byte_end":414232,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414233,"byte_end":414311,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414312,"byte_end":414417,"line_start":106,"line_end":106,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414418,"byte_end":414520,"line_start":107,"line_end":107,"column_start":1,"column_end":103}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414521,"byte_end":414528,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1629},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415539,"byte_end":415543,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::complete::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>>, T: InputIter,\nT: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":414977,"byte_end":415010,"line_start":121,"line_end":121,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415011,"byte_end":415014,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415015,"byte_end":415093,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415094,"byte_end":415107,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415108,"byte_end":415111,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415112,"byte_end":415119,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415120,"byte_end":415177,"line_start":127,"line_end":127,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::crlf;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415178,"byte_end":415219,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415220,"byte_end":415271,"line_start":129,"line_end":129,"column_start":1,"column_end":52}},{"value":"/     crlf(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415272,"byte_end":415291,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415292,"byte_end":415297,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415298,"byte_end":415301,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415302,"byte_end":415353,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415354,"byte_end":415445,"line_start":134,"line_end":134,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415446,"byte_end":415523,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415524,"byte_end":415531,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1632},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416522,"byte_end":416537,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::complete::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r' or '\\n'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":415992,"byte_end":416048,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416049,"byte_end":416052,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416053,"byte_end":416131,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416132,"byte_end":416145,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416146,"byte_end":416149,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416150,"byte_end":416157,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416158,"byte_end":416214,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::not_line_ending;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416215,"byte_end":416267,"line_start":161,"line_end":161,"column_start":1,"column_end":53}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416268,"byte_end":416319,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/     not_line_ending(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416320,"byte_end":416350,"line_start":163,"line_end":163,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416351,"byte_end":416356,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416357,"byte_end":416360,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416361,"byte_end":416416,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416417,"byte_end":416464,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416465,"byte_end":416506,"line_start":168,"line_end":168,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":416507,"byte_end":416514,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1636},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418173,"byte_end":418184,"line_start":220,"line_end":220,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::complete::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417569,"byte_end":417622,"line_start":204,"line_end":204,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417623,"byte_end":417626,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417627,"byte_end":417705,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417706,"byte_end":417719,"line_start":207,"line_end":207,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417720,"byte_end":417723,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417724,"byte_end":417731,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417732,"byte_end":417797,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::line_ending;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417798,"byte_end":417846,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417847,"byte_end":417898,"line_start":212,"line_end":212,"column_start":1,"column_end":52}},{"value":"/     line_ending(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417899,"byte_end":417925,"line_start":213,"line_end":213,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417926,"byte_end":417931,"line_start":214,"line_end":214,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417932,"byte_end":417935,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417936,"byte_end":417987,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":417988,"byte_end":418079,"line_start":217,"line_end":217,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418080,"byte_end":418157,"line_start":218,"line_end":218,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418158,"byte_end":418165,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1639},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419417,"byte_end":419424,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::complete::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\n'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418845,"byte_end":418882,"line_start":239,"line_end":239,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418883,"byte_end":418886,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418887,"byte_end":418965,"line_start":241,"line_end":241,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418966,"byte_end":418979,"line_start":242,"line_end":242,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418980,"byte_end":418983,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418984,"byte_end":418991,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":418992,"byte_end":419057,"line_start":245,"line_end":245,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::newline;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419058,"byte_end":419102,"line_start":246,"line_end":246,"column_start":1,"column_end":45}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419103,"byte_end":419154,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/     newline(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419155,"byte_end":419177,"line_start":248,"line_end":248,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419178,"byte_end":419183,"line_start":249,"line_end":249,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419184,"byte_end":419187,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419188,"byte_end":419235,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419236,"byte_end":419323,"line_start":252,"line_end":252,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419324,"byte_end":419401,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419402,"byte_end":419409,"line_start":254,"line_end":254,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420154,"byte_end":420157,"line_start":279,"line_end":279,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::complete::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419594,"byte_end":419627,"line_start":263,"line_end":263,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419628,"byte_end":419631,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419632,"byte_end":419710,"line_start":265,"line_end":265,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419711,"byte_end":419724,"line_start":266,"line_end":266,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419725,"byte_end":419728,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419729,"byte_end":419736,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419737,"byte_end":419802,"line_start":269,"line_end":269,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::tab;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419803,"byte_end":419843,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419844,"byte_end":419895,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/     tab(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419896,"byte_end":419914,"line_start":272,"line_end":272,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419915,"byte_end":419920,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419921,"byte_end":419924,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419925,"byte_end":419972,"line_start":275,"line_end":275,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":419973,"byte_end":420060,"line_start":276,"line_end":276,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420061,"byte_end":420138,"line_start":277,"line_end":277,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420139,"byte_end":420146,"line_start":278,"line_end":278,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1645},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420885,"byte_end":420892,"line_start":302,"line_end":302,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::complete::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420327,"byte_end":420393,"line_start":287,"line_end":287,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420394,"byte_end":420463,"line_start":288,"line_end":288,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420464,"byte_end":420467,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420468,"byte_end":420546,"line_start":290,"line_end":290,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420547,"byte_end":420560,"line_start":291,"line_end":291,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420561,"byte_end":420564,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420565,"byte_end":420572,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420573,"byte_end":420660,"line_start":294,"line_end":294,"column_start":1,"column_end":88}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420661,"byte_end":420712,"line_start":295,"line_end":295,"column_start":1,"column_end":52}},{"value":"/     anychar(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420713,"byte_end":420735,"line_start":296,"line_end":296,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420736,"byte_end":420741,"line_start":297,"line_end":297,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420742,"byte_end":420745,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420746,"byte_end":420792,"line_start":299,"line_end":299,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420793,"byte_end":420869,"line_start":300,"line_end":300,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":420870,"byte_end":420877,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1648},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421933,"byte_end":421939,"line_start":334,"line_end":334,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::complete::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421356,"byte_end":421445,"line_start":317,"line_end":317,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421446,"byte_end":421449,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421450,"byte_end":421541,"line_start":319,"line_end":319,"column_start":1,"column_end":92}},{"value":"/ alphabetic character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421542,"byte_end":421568,"line_start":320,"line_end":320,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421569,"byte_end":421582,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421583,"byte_end":421586,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421587,"byte_end":421594,"line_start":323,"line_end":323,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421595,"byte_end":421651,"line_start":324,"line_end":324,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alpha0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421652,"byte_end":421695,"line_start":325,"line_end":325,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421696,"byte_end":421747,"line_start":326,"line_end":326,"column_start":1,"column_end":52}},{"value":"/     alpha0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421748,"byte_end":421769,"line_start":327,"line_end":327,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421770,"byte_end":421775,"line_start":328,"line_end":328,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421776,"byte_end":421779,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421780,"byte_end":421829,"line_start":330,"line_end":330,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421830,"byte_end":421875,"line_start":331,"line_end":331,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421876,"byte_end":421917,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":421918,"byte_end":421925,"line_start":333,"line_end":333,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1652},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422838,"byte_end":422844,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::complete::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422132,"byte_end":422220,"line_start":342,"line_end":342,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422221,"byte_end":422224,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422225,"byte_end":422303,"line_start":344,"line_end":344,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found  (a non alphabetic character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422304,"byte_end":422390,"line_start":345,"line_end":345,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422391,"byte_end":422404,"line_start":346,"line_end":346,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422405,"byte_end":422408,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422409,"byte_end":422416,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422417,"byte_end":422482,"line_start":349,"line_end":349,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422483,"byte_end":422526,"line_start":350,"line_end":350,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422527,"byte_end":422578,"line_start":351,"line_end":351,"column_start":1,"column_end":52}},{"value":"/     alpha1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422579,"byte_end":422600,"line_start":352,"line_end":352,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422601,"byte_end":422606,"line_start":353,"line_end":353,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422607,"byte_end":422610,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422611,"byte_end":422660,"line_start":355,"line_end":355,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422661,"byte_end":422743,"line_start":356,"line_end":356,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422744,"byte_end":422822,"line_start":357,"line_end":357,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":422823,"byte_end":422830,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1656},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423692,"byte_end":423698,"line_start":385,"line_end":385,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::complete::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423056,"byte_end":423115,"line_start":367,"line_end":367,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423116,"byte_end":423119,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423120,"byte_end":423198,"line_start":369,"line_end":369,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423199,"byte_end":423279,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423280,"byte_end":423293,"line_start":371,"line_end":371,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423294,"byte_end":423297,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423298,"byte_end":423305,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423306,"byte_end":423362,"line_start":374,"line_end":374,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423363,"byte_end":423406,"line_start":375,"line_end":375,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423407,"byte_end":423458,"line_start":376,"line_end":376,"column_start":1,"column_end":52}},{"value":"/     digit0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423459,"byte_end":423480,"line_start":377,"line_end":377,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423481,"byte_end":423486,"line_start":378,"line_end":378,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423487,"byte_end":423490,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423491,"byte_end":423538,"line_start":380,"line_end":380,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"21\"), Ok((\"\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423539,"byte_end":423584,"line_start":381,"line_end":381,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423585,"byte_end":423634,"line_start":382,"line_end":382,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423635,"byte_end":423676,"line_start":383,"line_end":383,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423677,"byte_end":423684,"line_start":384,"line_end":384,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1660},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424563,"byte_end":424569,"line_start":410,"line_end":410,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::complete::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423895,"byte_end":423953,"line_start":393,"line_end":393,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423954,"byte_end":423957,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":423958,"byte_end":424036,"line_start":395,"line_end":395,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424037,"byte_end":424117,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424118,"byte_end":424131,"line_start":397,"line_end":397,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424132,"byte_end":424135,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424136,"byte_end":424143,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424144,"byte_end":424209,"line_start":400,"line_end":400,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424210,"byte_end":424253,"line_start":401,"line_end":401,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424254,"byte_end":424305,"line_start":402,"line_end":402,"column_start":1,"column_end":52}},{"value":"/     digit1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424306,"byte_end":424327,"line_start":403,"line_end":403,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424328,"byte_end":424333,"line_start":404,"line_end":404,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424334,"byte_end":424337,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424338,"byte_end":424385,"line_start":406,"line_end":406,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424386,"byte_end":424468,"line_start":407,"line_end":407,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424469,"byte_end":424547,"line_start":408,"line_end":408,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424548,"byte_end":424555,"line_start":409,"line_end":409,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425369,"byte_end":425379,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::complete::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424785,"byte_end":424866,"line_start":418,"line_end":418,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424867,"byte_end":424870,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424871,"byte_end":424992,"line_start":420,"line_end":420,"column_start":1,"column_end":122}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":424993,"byte_end":425006,"line_start":421,"line_end":421,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425007,"byte_end":425010,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425011,"byte_end":425018,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425019,"byte_end":425075,"line_start":424,"line_end":424,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::hex_digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425076,"byte_end":425123,"line_start":425,"line_end":425,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425124,"byte_end":425175,"line_start":426,"line_end":426,"column_start":1,"column_end":52}},{"value":"/     hex_digit0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425176,"byte_end":425201,"line_start":427,"line_end":427,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425202,"byte_end":425207,"line_start":428,"line_end":428,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425208,"byte_end":425211,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425212,"byte_end":425261,"line_start":430,"line_end":430,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425262,"byte_end":425311,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425312,"byte_end":425353,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425354,"byte_end":425361,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1668},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426293,"byte_end":426303,"line_start":458,"line_end":458,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::complete::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425575,"byte_end":425655,"line_start":441,"line_end":441,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425656,"byte_end":425659,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425660,"byte_end":425738,"line_start":443,"line_end":443,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425739,"byte_end":425831,"line_start":444,"line_end":444,"column_start":1,"column_end":93}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425832,"byte_end":425845,"line_start":445,"line_end":445,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425846,"byte_end":425849,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425850,"byte_end":425857,"line_start":447,"line_end":447,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425858,"byte_end":425923,"line_start":448,"line_end":448,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::hex_digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425924,"byte_end":425971,"line_start":449,"line_end":449,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":425972,"byte_end":426023,"line_start":450,"line_end":450,"column_start":1,"column_end":52}},{"value":"/     hex_digit1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426024,"byte_end":426049,"line_start":451,"line_end":451,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426050,"byte_end":426055,"line_start":452,"line_end":452,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426056,"byte_end":426059,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426060,"byte_end":426109,"line_start":454,"line_end":454,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426110,"byte_end":426195,"line_start":455,"line_end":455,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426196,"byte_end":426277,"line_start":456,"line_end":456,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426278,"byte_end":426285,"line_start":457,"line_end":457,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427072,"byte_end":427082,"line_start":483,"line_end":483,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::complete::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426522,"byte_end":426571,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426572,"byte_end":426575,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non octal","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426576,"byte_end":426673,"line_start":468,"line_end":468,"column_start":1,"column_end":98}},{"value":"/ digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426674,"byte_end":426695,"line_start":469,"line_end":469,"column_start":1,"column_end":22}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426696,"byte_end":426709,"line_start":470,"line_end":470,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426710,"byte_end":426713,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426714,"byte_end":426721,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426722,"byte_end":426778,"line_start":473,"line_end":473,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::oct_digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426779,"byte_end":426826,"line_start":474,"line_end":474,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426827,"byte_end":426878,"line_start":475,"line_end":475,"column_start":1,"column_end":52}},{"value":"/     oct_digit0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426879,"byte_end":426904,"line_start":476,"line_end":476,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426905,"byte_end":426910,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426911,"byte_end":426914,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426915,"byte_end":426964,"line_start":479,"line_end":479,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":426965,"byte_end":427014,"line_start":480,"line_end":480,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427015,"byte_end":427056,"line_start":481,"line_end":481,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427057,"byte_end":427064,"line_start":482,"line_end":482,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1676},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427959,"byte_end":427969,"line_start":508,"line_end":508,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::complete::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427279,"byte_end":427327,"line_start":491,"line_end":491,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427328,"byte_end":427331,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427332,"byte_end":427410,"line_start":493,"line_end":493,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427411,"byte_end":427497,"line_start":494,"line_end":494,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427498,"byte_end":427511,"line_start":495,"line_end":495,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427512,"byte_end":427515,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427516,"byte_end":427523,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427524,"byte_end":427589,"line_start":498,"line_end":498,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::oct_digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427590,"byte_end":427637,"line_start":499,"line_end":499,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427638,"byte_end":427689,"line_start":500,"line_end":500,"column_start":1,"column_end":52}},{"value":"/     oct_digit1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427690,"byte_end":427715,"line_start":501,"line_end":501,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427716,"byte_end":427721,"line_start":502,"line_end":502,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427722,"byte_end":427725,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427726,"byte_end":427775,"line_start":504,"line_end":504,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427776,"byte_end":427861,"line_start":505,"line_end":505,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427862,"byte_end":427943,"line_start":506,"line_end":506,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":427944,"byte_end":427951,"line_start":507,"line_end":507,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1680},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428788,"byte_end":428801,"line_start":533,"line_end":533,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::complete::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428188,"byte_end":428272,"line_start":516,"line_end":516,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428273,"byte_end":428276,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428277,"byte_end":428368,"line_start":518,"line_end":518,"column_start":1,"column_end":92}},{"value":"/ alphanumerical character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428369,"byte_end":428399,"line_start":519,"line_end":519,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428400,"byte_end":428413,"line_start":520,"line_end":520,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428414,"byte_end":428417,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428418,"byte_end":428425,"line_start":522,"line_end":522,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428426,"byte_end":428482,"line_start":523,"line_end":523,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alphanumeric0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428483,"byte_end":428533,"line_start":524,"line_end":524,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428534,"byte_end":428585,"line_start":525,"line_end":525,"column_start":1,"column_end":52}},{"value":"/     alphanumeric0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428586,"byte_end":428614,"line_start":526,"line_end":526,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428615,"byte_end":428620,"line_start":527,"line_end":527,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428621,"byte_end":428624,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428625,"byte_end":428678,"line_start":529,"line_end":529,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428679,"byte_end":428730,"line_start":530,"line_end":530,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428731,"byte_end":428772,"line_start":531,"line_end":531,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428773,"byte_end":428780,"line_start":532,"line_end":532,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429735,"byte_end":429748,"line_start":558,"line_end":558,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::complete::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":428997,"byte_end":429080,"line_start":541,"line_end":541,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429081,"byte_end":429084,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429085,"byte_end":429163,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429164,"byte_end":429253,"line_start":544,"line_end":544,"column_start":1,"column_end":90}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429254,"byte_end":429267,"line_start":545,"line_end":545,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429268,"byte_end":429271,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429272,"byte_end":429279,"line_start":547,"line_end":547,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429280,"byte_end":429345,"line_start":548,"line_end":548,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alphanumeric1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429346,"byte_end":429396,"line_start":549,"line_end":549,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429397,"byte_end":429448,"line_start":550,"line_end":550,"column_start":1,"column_end":52}},{"value":"/     alphanumeric1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429449,"byte_end":429477,"line_start":551,"line_end":551,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429478,"byte_end":429483,"line_start":552,"line_end":552,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429484,"byte_end":429487,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429488,"byte_end":429541,"line_start":554,"line_end":554,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429542,"byte_end":429633,"line_start":555,"line_end":555,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429634,"byte_end":429719,"line_start":556,"line_end":556,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429720,"byte_end":429727,"line_start":557,"line_end":557,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1688},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430505,"byte_end":430511,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::complete::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":429970,"byte_end":430014,"line_start":566,"line_end":566,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430015,"byte_end":430018,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430019,"byte_end":430116,"line_start":568,"line_end":568,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430117,"byte_end":430132,"line_start":569,"line_end":569,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430133,"byte_end":430146,"line_start":570,"line_end":570,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430147,"byte_end":430150,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430151,"byte_end":430158,"line_start":572,"line_end":572,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430159,"byte_end":430215,"line_start":573,"line_end":573,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::space0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430216,"byte_end":430259,"line_start":574,"line_end":574,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430260,"byte_end":430311,"line_start":575,"line_end":575,"column_start":1,"column_end":52}},{"value":"/     space0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430312,"byte_end":430333,"line_start":576,"line_end":576,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430334,"byte_end":430339,"line_start":577,"line_end":577,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430340,"byte_end":430343,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430344,"byte_end":430397,"line_start":579,"line_end":579,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430398,"byte_end":430447,"line_start":580,"line_end":580,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430448,"byte_end":430489,"line_start":581,"line_end":581,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430490,"byte_end":430497,"line_start":582,"line_end":582,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1692},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431417,"byte_end":431423,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::complete::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430758,"byte_end":430801,"line_start":594,"line_end":594,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430802,"byte_end":430805,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430806,"byte_end":430884,"line_start":596,"line_end":596,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430885,"byte_end":430965,"line_start":597,"line_end":597,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430966,"byte_end":430979,"line_start":598,"line_end":598,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430980,"byte_end":430983,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430984,"byte_end":430991,"line_start":600,"line_end":600,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":430992,"byte_end":431057,"line_start":601,"line_end":601,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::space1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431058,"byte_end":431101,"line_start":602,"line_end":602,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431102,"byte_end":431153,"line_start":603,"line_end":603,"column_start":1,"column_end":52}},{"value":"/     space1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431154,"byte_end":431175,"line_start":604,"line_end":604,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431176,"byte_end":431181,"line_start":605,"line_end":605,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431182,"byte_end":431185,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431186,"byte_end":431239,"line_start":607,"line_end":607,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431240,"byte_end":431322,"line_start":608,"line_end":608,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431323,"byte_end":431401,"line_start":609,"line_end":609,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431402,"byte_end":431409,"line_start":610,"line_end":610,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1696},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432291,"byte_end":432302,"line_start":642,"line_end":642,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::complete::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431708,"byte_end":431782,"line_start":625,"line_end":625,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431783,"byte_end":431786,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431787,"byte_end":431884,"line_start":627,"line_end":627,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431885,"byte_end":431900,"line_start":628,"line_end":628,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431901,"byte_end":431914,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431915,"byte_end":431918,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431919,"byte_end":431926,"line_start":631,"line_end":631,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431927,"byte_end":431983,"line_start":632,"line_end":632,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::multispace0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":431984,"byte_end":432032,"line_start":633,"line_end":633,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432033,"byte_end":432084,"line_start":634,"line_end":634,"column_start":1,"column_end":52}},{"value":"/     multispace0(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432085,"byte_end":432111,"line_start":635,"line_end":635,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432112,"byte_end":432117,"line_start":636,"line_end":636,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432118,"byte_end":432121,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432122,"byte_end":432183,"line_start":638,"line_end":638,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432184,"byte_end":432233,"line_start":639,"line_end":639,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432234,"byte_end":432275,"line_start":640,"line_end":640,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432276,"byte_end":432283,"line_start":641,"line_end":641,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1700},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433292,"byte_end":433303,"line_start":670,"line_end":670,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::complete::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432575,"byte_end":432648,"line_start":653,"line_end":653,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432649,"byte_end":432652,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return an error if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432653,"byte_end":432731,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432732,"byte_end":432812,"line_start":656,"line_end":656,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432813,"byte_end":432826,"line_start":657,"line_end":657,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432827,"byte_end":432830,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432831,"byte_end":432838,"line_start":659,"line_end":659,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432839,"byte_end":432904,"line_start":660,"line_end":660,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::multispace1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432905,"byte_end":432953,"line_start":661,"line_end":661,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":432954,"byte_end":433005,"line_start":662,"line_end":662,"column_start":1,"column_end":52}},{"value":"/     multispace1(input)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433006,"byte_end":433032,"line_start":663,"line_end":663,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433033,"byte_end":433038,"line_start":664,"line_end":664,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433039,"byte_end":433042,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433043,"byte_end":433104,"line_start":666,"line_end":666,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433105,"byte_end":433192,"line_start":667,"line_end":667,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433193,"byte_end":433276,"line_start":668,"line_end":668,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/complete.rs","byte_start":433277,"byte_end":433284,"line_start":669,"line_end":669,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1704},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::character::streaming","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1731},{"krate":0,"index":1738},{"krate":0,"index":1745},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1775},{"krate":0,"index":1779},{"krate":0,"index":1783},{"krate":0,"index":1787},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1799},{"krate":0,"index":1803},{"krate":0,"index":1807},{"krate":0,"index":1811},{"krate":0,"index":1815},{"krate":0,"index":1819},{"krate":0,"index":1823}],"decl_id":null,"docs":" Character specific parsers and combinators, streaming version","sig":null,"attributes":[{"value":"! Character specific parsers and combinators, streaming version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445086,"byte_end":445151,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445152,"byte_end":445155,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Functions recognizing specific characters","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445156,"byte_end":445201,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1725},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446058,"byte_end":446062,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::streaming::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445501,"byte_end":445530,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445531,"byte_end":445534,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445535,"byte_end":445636,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445637,"byte_end":445650,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445651,"byte_end":445654,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445655,"byte_end":445662,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445663,"byte_end":445728,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::char;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445729,"byte_end":445771,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445772,"byte_end":445819,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445820,"byte_end":445840,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445841,"byte_end":445846,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445847,"byte_end":445894,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445895,"byte_end":445976,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":445977,"byte_end":446042,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446043,"byte_end":446050,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1731},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447176,"byte_end":447183,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::streaming::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446548,"byte_end":446617,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446618,"byte_end":446621,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446622,"byte_end":446723,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446724,"byte_end":446737,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446738,"byte_end":446741,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446742,"byte_end":446749,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446750,"byte_end":446815,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::satisfy;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446816,"byte_end":446861,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446862,"byte_end":446909,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446910,"byte_end":446954,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446955,"byte_end":446960,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":446961,"byte_end":447008,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447009,"byte_end":447093,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447094,"byte_end":447160,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447161,"byte_end":447168,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1738},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448247,"byte_end":448253,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::streaming::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447688,"byte_end":447734,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447735,"byte_end":447738,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447739,"byte_end":447840,"line_start":77,"line_end":77,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447841,"byte_end":447854,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447855,"byte_end":447858,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447859,"byte_end":447866,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447867,"byte_end":447914,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::one_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447915,"byte_end":447959,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":447960,"byte_end":448034,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448035,"byte_end":448136,"line_start":84,"line_end":84,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448137,"byte_end":448231,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448232,"byte_end":448239,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1745},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449333,"byte_end":449340,"line_start":112,"line_end":112,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::streaming::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448750,"byte_end":448816,"line_start":100,"line_end":100,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448817,"byte_end":448820,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448821,"byte_end":448922,"line_start":102,"line_end":102,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448923,"byte_end":448936,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448937,"byte_end":448940,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448941,"byte_end":448948,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448949,"byte_end":448996,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::none_of;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":448997,"byte_end":449042,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449043,"byte_end":449118,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449119,"byte_end":449221,"line_start":109,"line_end":109,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449222,"byte_end":449317,"line_start":110,"line_end":110,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449318,"byte_end":449325,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1752},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450377,"byte_end":450381,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::streaming::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449839,"byte_end":449872,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449873,"byte_end":449876,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449877,"byte_end":449978,"line_start":127,"line_end":127,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449979,"byte_end":449992,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449993,"byte_end":449996,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":449997,"byte_end":450004,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450005,"byte_end":450061,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::crlf;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450062,"byte_end":450104,"line_start":132,"line_end":132,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450105,"byte_end":450175,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450176,"byte_end":450276,"line_start":134,"line_end":134,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450277,"byte_end":450361,"line_start":135,"line_end":135,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450362,"byte_end":450369,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1755},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451505,"byte_end":451520,"line_start":166,"line_end":166,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::streaming::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r' or '\\n'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450907,"byte_end":450963,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450964,"byte_end":450967,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":450968,"byte_end":451069,"line_start":156,"line_end":156,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451070,"byte_end":451083,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451084,"byte_end":451087,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451088,"byte_end":451095,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451096,"byte_end":451152,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::not_line_ending;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451153,"byte_end":451206,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451207,"byte_end":451292,"line_start":162,"line_end":162,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451293,"byte_end":451392,"line_start":163,"line_end":163,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451393,"byte_end":451489,"line_start":164,"line_end":164,"column_start":1,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":451490,"byte_end":451497,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1759},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":453227,"byte_end":453238,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::streaming::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452641,"byte_end":452694,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452695,"byte_end":452698,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452699,"byte_end":452800,"line_start":203,"line_end":203,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452801,"byte_end":452814,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452815,"byte_end":452818,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452819,"byte_end":452826,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452827,"byte_end":452883,"line_start":207,"line_end":207,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::line_ending;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452884,"byte_end":452933,"line_start":208,"line_end":208,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":452934,"byte_end":453011,"line_start":209,"line_end":209,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":453012,"byte_end":453119,"line_start":210,"line_end":210,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":453120,"byte_end":453211,"line_start":211,"line_end":211,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":453212,"byte_end":453219,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1762},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454517,"byte_end":454524,"line_start":245,"line_end":245,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::streaming::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\\\n'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":453970,"byte_end":454008,"line_start":233,"line_end":233,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454009,"byte_end":454012,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454013,"byte_end":454114,"line_start":235,"line_end":235,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454115,"byte_end":454128,"line_start":236,"line_end":236,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454129,"byte_end":454132,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454133,"byte_end":454140,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454141,"byte_end":454197,"line_start":239,"line_end":239,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::newline;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454198,"byte_end":454243,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454244,"byte_end":454313,"line_start":241,"line_end":241,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454314,"byte_end":454413,"line_start":242,"line_end":242,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454414,"byte_end":454501,"line_start":243,"line_end":243,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454502,"byte_end":454509,"line_start":244,"line_end":244,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1765},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455234,"byte_end":455237,"line_start":265,"line_end":265,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::streaming::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454708,"byte_end":454741,"line_start":253,"line_end":253,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454742,"byte_end":454745,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454746,"byte_end":454847,"line_start":255,"line_end":255,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454848,"byte_end":454861,"line_start":256,"line_end":256,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454862,"byte_end":454865,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454866,"byte_end":454873,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454874,"byte_end":454930,"line_start":259,"line_end":259,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::tab;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454931,"byte_end":454972,"line_start":260,"line_end":260,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":454973,"byte_end":455038,"line_start":261,"line_end":261,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455039,"byte_end":455134,"line_start":262,"line_end":262,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455135,"byte_end":455218,"line_start":263,"line_end":263,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455219,"byte_end":455226,"line_start":264,"line_end":264,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1768},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455950,"byte_end":455957,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::streaming::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455421,"byte_end":455487,"line_start":273,"line_end":273,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455488,"byte_end":455557,"line_start":274,"line_end":274,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455558,"byte_end":455561,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455562,"byte_end":455663,"line_start":276,"line_end":276,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455664,"byte_end":455677,"line_start":277,"line_end":277,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455678,"byte_end":455681,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455682,"byte_end":455689,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455690,"byte_end":455777,"line_start":280,"line_end":280,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455778,"byte_end":455846,"line_start":281,"line_end":281,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455847,"byte_end":455934,"line_start":282,"line_end":282,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":455935,"byte_end":455942,"line_start":283,"line_end":283,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1771},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457033,"byte_end":457039,"line_start":312,"line_end":312,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::streaming::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456399,"byte_end":456488,"line_start":299,"line_end":299,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456489,"byte_end":456492,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456493,"byte_end":456594,"line_start":301,"line_end":301,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456595,"byte_end":456664,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456665,"byte_end":456678,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456679,"byte_end":456682,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456683,"byte_end":456690,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456691,"byte_end":456747,"line_start":306,"line_end":306,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456748,"byte_end":456792,"line_start":307,"line_end":307,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456793,"byte_end":456863,"line_start":308,"line_end":308,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456864,"byte_end":456930,"line_start":309,"line_end":309,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":456931,"byte_end":457017,"line_start":310,"line_end":310,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457018,"byte_end":457025,"line_start":311,"line_end":311,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1775},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457883,"byte_end":457889,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::streaming::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457223,"byte_end":457311,"line_start":320,"line_end":320,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457312,"byte_end":457315,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457316,"byte_end":457417,"line_start":322,"line_end":322,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457418,"byte_end":457487,"line_start":323,"line_end":323,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457488,"byte_end":457501,"line_start":324,"line_end":324,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457502,"byte_end":457505,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457506,"byte_end":457513,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457514,"byte_end":457570,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457571,"byte_end":457615,"line_start":328,"line_end":328,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457616,"byte_end":457686,"line_start":329,"line_end":329,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457687,"byte_end":457780,"line_start":330,"line_end":330,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457781,"byte_end":457867,"line_start":331,"line_end":331,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":457868,"byte_end":457875,"line_start":332,"line_end":332,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1779},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458693,"byte_end":458699,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::streaming::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458092,"byte_end":458151,"line_start":341,"line_end":341,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458152,"byte_end":458155,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458156,"byte_end":458257,"line_start":343,"line_end":343,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458258,"byte_end":458322,"line_start":344,"line_end":344,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458323,"byte_end":458336,"line_start":345,"line_end":345,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458337,"byte_end":458340,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458341,"byte_end":458348,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458349,"byte_end":458405,"line_start":348,"line_end":348,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458406,"byte_end":458450,"line_start":349,"line_end":349,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458451,"byte_end":458519,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458520,"byte_end":458590,"line_start":351,"line_end":351,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458591,"byte_end":458677,"line_start":352,"line_end":352,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458678,"byte_end":458685,"line_start":353,"line_end":353,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1783},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459510,"byte_end":459516,"line_start":375,"line_end":375,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::streaming::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458887,"byte_end":458945,"line_start":362,"line_end":362,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458946,"byte_end":458949,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":458950,"byte_end":459051,"line_start":364,"line_end":364,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459052,"byte_end":459116,"line_start":365,"line_end":365,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459117,"byte_end":459130,"line_start":366,"line_end":366,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459131,"byte_end":459134,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459135,"byte_end":459142,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459143,"byte_end":459199,"line_start":369,"line_end":369,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459200,"byte_end":459244,"line_start":370,"line_end":370,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459245,"byte_end":459313,"line_start":371,"line_end":371,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459314,"byte_end":459407,"line_start":372,"line_end":372,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459408,"byte_end":459494,"line_start":373,"line_end":373,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459495,"byte_end":459502,"line_start":374,"line_end":374,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460376,"byte_end":460386,"line_start":396,"line_end":396,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::streaming::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459723,"byte_end":459804,"line_start":383,"line_end":383,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459805,"byte_end":459808,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459809,"byte_end":459910,"line_start":385,"line_end":385,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459911,"byte_end":459987,"line_start":386,"line_end":386,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":459988,"byte_end":460001,"line_start":387,"line_end":387,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460002,"byte_end":460005,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460006,"byte_end":460013,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460014,"byte_end":460070,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460071,"byte_end":460119,"line_start":391,"line_end":391,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460120,"byte_end":460194,"line_start":392,"line_end":392,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460195,"byte_end":460269,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460270,"byte_end":460360,"line_start":394,"line_end":394,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460361,"byte_end":460368,"line_start":395,"line_end":395,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1791},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461252,"byte_end":461262,"line_start":417,"line_end":417,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::streaming::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460574,"byte_end":460654,"line_start":404,"line_end":404,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460655,"byte_end":460658,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460659,"byte_end":460760,"line_start":406,"line_end":406,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460761,"byte_end":460837,"line_start":407,"line_end":407,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460838,"byte_end":460851,"line_start":408,"line_end":408,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460852,"byte_end":460855,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460856,"byte_end":460863,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460864,"byte_end":460920,"line_start":411,"line_end":411,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460921,"byte_end":460969,"line_start":412,"line_end":412,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":460970,"byte_end":461044,"line_start":413,"line_end":413,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461045,"byte_end":461145,"line_start":414,"line_end":414,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461146,"byte_end":461236,"line_start":415,"line_end":415,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461237,"byte_end":461244,"line_start":416,"line_end":416,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1795},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462087,"byte_end":462097,"line_start":438,"line_end":438,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::streaming::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461472,"byte_end":461521,"line_start":425,"line_end":425,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461522,"byte_end":461525,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461526,"byte_end":461627,"line_start":427,"line_end":427,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461628,"byte_end":461698,"line_start":428,"line_end":428,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461699,"byte_end":461712,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461713,"byte_end":461716,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461717,"byte_end":461724,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461725,"byte_end":461781,"line_start":432,"line_end":432,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461782,"byte_end":461830,"line_start":433,"line_end":433,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461831,"byte_end":461905,"line_start":434,"line_end":434,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461906,"byte_end":461980,"line_start":435,"line_end":435,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":461981,"byte_end":462071,"line_start":436,"line_end":436,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462072,"byte_end":462079,"line_start":437,"line_end":437,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1799},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462925,"byte_end":462935,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::streaming::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462285,"byte_end":462333,"line_start":446,"line_end":446,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462334,"byte_end":462337,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462338,"byte_end":462439,"line_start":448,"line_end":448,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462440,"byte_end":462510,"line_start":449,"line_end":449,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462511,"byte_end":462524,"line_start":450,"line_end":450,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462525,"byte_end":462528,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462529,"byte_end":462536,"line_start":452,"line_end":452,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462537,"byte_end":462593,"line_start":453,"line_end":453,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462594,"byte_end":462642,"line_start":454,"line_end":454,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462643,"byte_end":462717,"line_start":455,"line_end":455,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462718,"byte_end":462818,"line_start":456,"line_end":456,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462819,"byte_end":462909,"line_start":457,"line_end":457,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":462910,"byte_end":462917,"line_start":458,"line_end":458,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463816,"byte_end":463829,"line_start":480,"line_end":480,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::streaming::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463145,"byte_end":463229,"line_start":467,"line_end":467,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463230,"byte_end":463233,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463234,"byte_end":463335,"line_start":469,"line_end":469,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463336,"byte_end":463409,"line_start":470,"line_end":470,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463410,"byte_end":463423,"line_start":471,"line_end":471,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463424,"byte_end":463427,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463428,"byte_end":463435,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463436,"byte_end":463492,"line_start":474,"line_end":474,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463493,"byte_end":463544,"line_start":475,"line_end":475,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463545,"byte_end":463626,"line_start":476,"line_end":476,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463627,"byte_end":463706,"line_start":477,"line_end":477,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463707,"byte_end":463800,"line_start":478,"line_end":478,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":463801,"byte_end":463808,"line_start":479,"line_end":479,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1807},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464716,"byte_end":464729,"line_start":501,"line_end":501,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::streaming::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464016,"byte_end":464099,"line_start":488,"line_end":488,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464100,"byte_end":464103,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464104,"byte_end":464205,"line_start":490,"line_end":490,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464206,"byte_end":464279,"line_start":491,"line_end":491,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464280,"byte_end":464293,"line_start":492,"line_end":492,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464294,"byte_end":464297,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464298,"byte_end":464305,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464306,"byte_end":464362,"line_start":495,"line_end":495,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464363,"byte_end":464414,"line_start":496,"line_end":496,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464415,"byte_end":464496,"line_start":497,"line_end":497,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464497,"byte_end":464606,"line_start":498,"line_end":498,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464607,"byte_end":464700,"line_start":499,"line_end":499,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464701,"byte_end":464708,"line_start":500,"line_end":500,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1811},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465534,"byte_end":465540,"line_start":522,"line_end":522,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::streaming::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464942,"byte_end":464986,"line_start":509,"line_end":509,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464987,"byte_end":464990,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":464991,"byte_end":465092,"line_start":511,"line_end":511,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465093,"byte_end":465157,"line_start":512,"line_end":512,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465158,"byte_end":465171,"line_start":513,"line_end":513,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465172,"byte_end":465175,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465176,"byte_end":465183,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465184,"byte_end":465240,"line_start":516,"line_end":516,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465241,"byte_end":465285,"line_start":517,"line_end":517,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465286,"byte_end":465360,"line_start":518,"line_end":518,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465361,"byte_end":465431,"line_start":519,"line_end":519,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465432,"byte_end":465518,"line_start":520,"line_end":520,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465519,"byte_end":465526,"line_start":521,"line_end":521,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1815},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466391,"byte_end":466397,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::streaming::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465777,"byte_end":465820,"line_start":532,"line_end":532,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465821,"byte_end":465824,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465825,"byte_end":465926,"line_start":534,"line_end":534,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465927,"byte_end":465991,"line_start":535,"line_end":535,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":465992,"byte_end":466005,"line_start":536,"line_end":536,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466006,"byte_end":466009,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466010,"byte_end":466017,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466018,"byte_end":466074,"line_start":539,"line_end":539,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466075,"byte_end":466119,"line_start":540,"line_end":540,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466120,"byte_end":466194,"line_start":541,"line_end":541,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466195,"byte_end":466288,"line_start":542,"line_end":542,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466289,"byte_end":466375,"line_start":543,"line_end":543,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466376,"byte_end":466383,"line_start":544,"line_end":544,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1819},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467323,"byte_end":467334,"line_start":572,"line_end":572,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::streaming::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466673,"byte_end":466747,"line_start":559,"line_end":559,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466748,"byte_end":466751,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466752,"byte_end":466853,"line_start":561,"line_end":561,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466854,"byte_end":466918,"line_start":562,"line_end":562,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466919,"byte_end":466932,"line_start":563,"line_end":563,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466933,"byte_end":466936,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466937,"byte_end":466944,"line_start":565,"line_end":565,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":466945,"byte_end":467001,"line_start":566,"line_end":566,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace0;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467002,"byte_end":467051,"line_start":567,"line_end":567,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467052,"byte_end":467139,"line_start":568,"line_end":568,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467140,"byte_end":467215,"line_start":569,"line_end":569,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467216,"byte_end":467307,"line_start":570,"line_end":570,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467308,"byte_end":467315,"line_start":571,"line_end":571,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1823},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":468275,"byte_end":468286,"line_start":596,"line_end":596,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::streaming::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467598,"byte_end":467671,"line_start":583,"line_end":583,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467672,"byte_end":467675,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467676,"byte_end":467777,"line_start":585,"line_end":585,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467778,"byte_end":467842,"line_start":586,"line_end":586,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467843,"byte_end":467856,"line_start":587,"line_end":587,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467857,"byte_end":467860,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467861,"byte_end":467868,"line_start":589,"line_end":589,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467869,"byte_end":467925,"line_start":590,"line_end":590,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace1;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467926,"byte_end":467975,"line_start":591,"line_end":591,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":467976,"byte_end":468063,"line_start":592,"line_end":592,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":468064,"byte_end":468167,"line_start":593,"line_end":593,"column_start":1,"column_end":104}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":468168,"byte_end":468259,"line_start":594,"line_end":594,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/streaming.rs","byte_start":468260,"byte_end":468267,"line_start":595,"line_end":595,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1827},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405348,"byte_end":405361,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::character::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405117,"byte_end":405164,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405165,"byte_end":405168,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405169,"byte_end":405182,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405183,"byte_end":405186,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405187,"byte_end":405194,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphabetic;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405195,"byte_end":405235,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_alphabetic(b'9'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405236,"byte_end":405279,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(is_alphabetic(b'a'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405280,"byte_end":405322,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405323,"byte_end":405330,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405331,"byte_end":405340,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1828},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405653,"byte_end":405661,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::character::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405447,"byte_end":405484,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405485,"byte_end":405488,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405489,"byte_end":405502,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405503,"byte_end":405506,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405507,"byte_end":405514,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_digit;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405515,"byte_end":405550,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_digit(b'a'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405551,"byte_end":405589,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(is_digit(b'9'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405590,"byte_end":405627,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405628,"byte_end":405635,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405636,"byte_end":405645,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1829},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406029,"byte_end":406041,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::character::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405713,"byte_end":405764,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405765,"byte_end":405768,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405769,"byte_end":405782,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405783,"byte_end":405786,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405787,"byte_end":405794,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_hex_digit;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405795,"byte_end":405834,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_hex_digit(b'a'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405835,"byte_end":405876,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'9'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405877,"byte_end":405918,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'A'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405919,"byte_end":405960,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'x'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405961,"byte_end":406003,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406004,"byte_end":406011,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406012,"byte_end":406021,"line_start":50,"line_end":50,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1830},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406426,"byte_end":406438,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::character::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406159,"byte_end":406202,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406203,"byte_end":406206,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406207,"byte_end":406220,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406221,"byte_end":406224,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406225,"byte_end":406232,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_oct_digit;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406233,"byte_end":406272,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_oct_digit(b'a'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406273,"byte_end":406315,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'9'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406316,"byte_end":406358,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'6'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406359,"byte_end":406400,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406401,"byte_end":406408,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406409,"byte_end":406418,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1831},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406824,"byte_end":406839,"line_start":82,"line_end":82,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::character::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406490,"byte_end":406544,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406545,"byte_end":406548,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406549,"byte_end":406562,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406563,"byte_end":406566,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406567,"byte_end":406574,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphanumeric;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406575,"byte_end":406617,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_alphanumeric(b'-'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406618,"byte_end":406663,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(is_alphanumeric(b'a'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406664,"byte_end":406708,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'9'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406709,"byte_end":406753,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'A'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406754,"byte_end":406798,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406799,"byte_end":406806,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406807,"byte_end":406816,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407188,"byte_end":407196,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_space","qualname":"::character::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406900,"byte_end":406939,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406940,"byte_end":406943,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406944,"byte_end":406957,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406958,"byte_end":406961,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406962,"byte_end":406969,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_space;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":406970,"byte_end":407005,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_space(b'\\n'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407006,"byte_end":407045,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b'\\r'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407046,"byte_end":407085,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b' '), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407086,"byte_end":407123,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_space(b'\\t'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407124,"byte_end":407162,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407163,"byte_end":407170,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407171,"byte_end":407180,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1833},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407547,"byte_end":407557,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"is_newline","qualname":"::character::is_newline","value":"pub fn is_newline(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII newline: \\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII newline: \\n","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407249,"byte_end":407287,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407288,"byte_end":407291,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407292,"byte_end":407305,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407306,"byte_end":407309,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407310,"byte_end":407317,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_newline;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407318,"byte_end":407355,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_newline(b'\\n'), true);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407356,"byte_end":407396,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\r'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407397,"byte_end":407438,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_newline(b' '), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407439,"byte_end":407479,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\t'), false);","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407480,"byte_end":407521,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407522,"byte_end":407529,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":407530,"byte_end":407539,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":1835},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1845},{"krate":0,"index":2010},{"krate":0,"index":5414},{"krate":0,"index":5430},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5422},{"krate":0,"index":5421}],"decl_id":null,"docs":" Parsers recognizing numbers\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16854,"byte_end":16866,"line_start":514,"line_end":514,"column_start":1,"column_end":13}},{"value":"! Parsers recognizing numbers","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493719,"byte_end":493750,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1845},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::number::complete","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":5378},{"krate":0,"index":2004},{"krate":0,"index":2007}],"decl_id":null,"docs":" Parsers recognizing numbers, complete input version\n","sig":null,"attributes":[{"value":"! Parsers recognizing numbers, complete input version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":503907,"byte_end":503962,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":1874},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504865,"byte_end":504870,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::complete::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504379,"byte_end":504421,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504422,"byte_end":504425,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504426,"byte_end":504501,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504502,"byte_end":504513,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504514,"byte_end":504561,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504562,"byte_end":504590,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504591,"byte_end":504628,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504629,"byte_end":504632,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504633,"byte_end":504655,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/   be_u8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504656,"byte_end":504670,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504671,"byte_end":504677,"line_start":24,"line_end":24,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504678,"byte_end":504681,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504682,"byte_end":504761,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504762,"byte_end":504839,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504840,"byte_end":504847,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":504848,"byte_end":504857,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1877},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505723,"byte_end":505729,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::complete::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505218,"byte_end":505271,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505272,"byte_end":505275,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505276,"byte_end":505351,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505352,"byte_end":505363,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505364,"byte_end":505411,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505412,"byte_end":505440,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505441,"byte_end":505479,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505480,"byte_end":505483,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505484,"byte_end":505506,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/   be_u16(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505507,"byte_end":505522,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505523,"byte_end":505529,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505530,"byte_end":505533,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505534,"byte_end":505611,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505612,"byte_end":505697,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505698,"byte_end":505705,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":505706,"byte_end":505715,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1880},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506655,"byte_end":506661,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::complete::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506145,"byte_end":506197,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506198,"byte_end":506201,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506202,"byte_end":506277,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506278,"byte_end":506289,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506290,"byte_end":506337,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506338,"byte_end":506366,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506367,"byte_end":506405,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506406,"byte_end":506409,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506410,"byte_end":506432,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/   be_u24(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506433,"byte_end":506448,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506449,"byte_end":506455,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506456,"byte_end":506459,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506460,"byte_end":506543,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506544,"byte_end":506629,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506630,"byte_end":506637,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":506638,"byte_end":506647,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1883},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507594,"byte_end":507600,"line_start":126,"line_end":126,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::complete::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507077,"byte_end":507130,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507131,"byte_end":507134,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507135,"byte_end":507210,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507211,"byte_end":507222,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507223,"byte_end":507270,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507271,"byte_end":507299,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507300,"byte_end":507338,"line_start":116,"line_end":116,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507339,"byte_end":507342,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507343,"byte_end":507365,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/   be_u32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507366,"byte_end":507381,"line_start":119,"line_end":119,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507382,"byte_end":507388,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507389,"byte_end":507392,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507393,"byte_end":507482,"line_start":122,"line_end":122,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507483,"byte_end":507568,"line_start":123,"line_end":123,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507569,"byte_end":507576,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":507577,"byte_end":507586,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1886},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508557,"byte_end":508563,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::complete::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508016,"byte_end":508069,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508070,"byte_end":508073,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508074,"byte_end":508149,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508150,"byte_end":508161,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508162,"byte_end":508209,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508210,"byte_end":508238,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508239,"byte_end":508277,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508278,"byte_end":508281,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508282,"byte_end":508304,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/   be_u64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508305,"byte_end":508320,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508321,"byte_end":508327,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508328,"byte_end":508331,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508332,"byte_end":508445,"line_start":155,"line_end":155,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508446,"byte_end":508531,"line_start":156,"line_end":156,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508532,"byte_end":508539,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508540,"byte_end":508549,"line_start":158,"line_end":158,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1889},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509591,"byte_end":509598,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::complete::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":508979,"byte_end":509033,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509034,"byte_end":509037,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509038,"byte_end":509113,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509114,"byte_end":509125,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509126,"byte_end":509173,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509174,"byte_end":509202,"line_start":181,"line_end":181,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509203,"byte_end":509242,"line_start":182,"line_end":182,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509243,"byte_end":509246,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509247,"byte_end":509269,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/   be_u128(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509270,"byte_end":509286,"line_start":185,"line_end":185,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509287,"byte_end":509293,"line_start":186,"line_end":186,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509294,"byte_end":509297,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509298,"byte_end":509459,"line_start":188,"line_end":188,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509460,"byte_end":509545,"line_start":189,"line_end":189,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509546,"byte_end":509553,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509554,"byte_end":509563,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":509564,"byte_end":509583,"line_start":192,"line_end":192,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1892},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510501,"byte_end":510506,"line_start":226,"line_end":226,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::complete::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510018,"byte_end":510057,"line_start":210,"line_end":210,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510058,"byte_end":510061,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510062,"byte_end":510137,"line_start":212,"line_end":212,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510138,"byte_end":510149,"line_start":213,"line_end":213,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510150,"byte_end":510197,"line_start":214,"line_end":214,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510198,"byte_end":510226,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510227,"byte_end":510264,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510265,"byte_end":510268,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510269,"byte_end":510291,"line_start":218,"line_end":218,"column_start":1,"column_end":23}},{"value":"/   be_i8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510292,"byte_end":510306,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510307,"byte_end":510313,"line_start":220,"line_end":220,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510314,"byte_end":510317,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510318,"byte_end":510397,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510398,"byte_end":510475,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510476,"byte_end":510483,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510484,"byte_end":510493,"line_start":225,"line_end":225,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1895},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511174,"byte_end":511180,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::complete::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510671,"byte_end":510722,"line_start":233,"line_end":233,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510723,"byte_end":510726,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510727,"byte_end":510802,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510803,"byte_end":510814,"line_start":236,"line_end":236,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510815,"byte_end":510862,"line_start":237,"line_end":237,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510863,"byte_end":510891,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510892,"byte_end":510930,"line_start":239,"line_end":239,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510931,"byte_end":510934,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510935,"byte_end":510957,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"/   be_i16(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510958,"byte_end":510973,"line_start":242,"line_end":242,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510974,"byte_end":510980,"line_start":243,"line_end":243,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510981,"byte_end":510984,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":510985,"byte_end":511062,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511063,"byte_end":511148,"line_start":246,"line_end":246,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511149,"byte_end":511156,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511157,"byte_end":511166,"line_start":248,"line_end":248,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1898},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511857,"byte_end":511863,"line_start":272,"line_end":272,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::complete::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511348,"byte_end":511399,"line_start":256,"line_end":256,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511400,"byte_end":511403,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511404,"byte_end":511479,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511480,"byte_end":511491,"line_start":259,"line_end":259,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511492,"byte_end":511539,"line_start":260,"line_end":260,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511540,"byte_end":511568,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511569,"byte_end":511607,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511608,"byte_end":511611,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511612,"byte_end":511634,"line_start":264,"line_end":264,"column_start":1,"column_end":23}},{"value":"/   be_i24(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511635,"byte_end":511650,"line_start":265,"line_end":265,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511651,"byte_end":511657,"line_start":266,"line_end":266,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511658,"byte_end":511661,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511662,"byte_end":511745,"line_start":268,"line_end":268,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511746,"byte_end":511831,"line_start":269,"line_end":269,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511832,"byte_end":511839,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":511840,"byte_end":511849,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1901},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512696,"byte_end":512702,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::complete::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512181,"byte_end":512232,"line_start":284,"line_end":284,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512233,"byte_end":512236,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Teturns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512237,"byte_end":512312,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512313,"byte_end":512324,"line_start":287,"line_end":287,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512325,"byte_end":512372,"line_start":288,"line_end":288,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512373,"byte_end":512401,"line_start":289,"line_end":289,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512402,"byte_end":512440,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512441,"byte_end":512444,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512445,"byte_end":512467,"line_start":292,"line_end":292,"column_start":1,"column_end":23}},{"value":"/   be_i32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512468,"byte_end":512483,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512484,"byte_end":512490,"line_start":294,"line_end":294,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512491,"byte_end":512494,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512495,"byte_end":512584,"line_start":296,"line_end":296,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512585,"byte_end":512670,"line_start":297,"line_end":297,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512671,"byte_end":512678,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512679,"byte_end":512688,"line_start":299,"line_end":299,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513409,"byte_end":513415,"line_start":323,"line_end":323,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::complete::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512870,"byte_end":512921,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512922,"byte_end":512925,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":512926,"byte_end":513001,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513002,"byte_end":513013,"line_start":310,"line_end":310,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513014,"byte_end":513061,"line_start":311,"line_end":311,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513062,"byte_end":513090,"line_start":312,"line_end":312,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513091,"byte_end":513129,"line_start":313,"line_end":313,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513130,"byte_end":513133,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513134,"byte_end":513156,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/   be_i64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513157,"byte_end":513172,"line_start":316,"line_end":316,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513173,"byte_end":513179,"line_start":317,"line_end":317,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513180,"byte_end":513183,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513184,"byte_end":513297,"line_start":319,"line_end":319,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513298,"byte_end":513383,"line_start":320,"line_end":320,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513384,"byte_end":513391,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513392,"byte_end":513401,"line_start":322,"line_end":322,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514193,"byte_end":514200,"line_start":347,"line_end":347,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::complete::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513583,"byte_end":513635,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513636,"byte_end":513639,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513640,"byte_end":513715,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513716,"byte_end":513727,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513728,"byte_end":513775,"line_start":334,"line_end":334,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513776,"byte_end":513804,"line_start":335,"line_end":335,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513805,"byte_end":513844,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513845,"byte_end":513848,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513849,"byte_end":513871,"line_start":338,"line_end":338,"column_start":1,"column_end":23}},{"value":"/   be_i128(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513872,"byte_end":513888,"line_start":339,"line_end":339,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513889,"byte_end":513895,"line_start":340,"line_end":340,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513896,"byte_end":513899,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":513900,"byte_end":514061,"line_start":342,"line_end":342,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514062,"byte_end":514147,"line_start":343,"line_end":343,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514148,"byte_end":514155,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514156,"byte_end":514165,"line_start":345,"line_end":345,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514166,"byte_end":514185,"line_start":346,"line_end":346,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514857,"byte_end":514862,"line_start":370,"line_end":370,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::complete::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514371,"byte_end":514413,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514414,"byte_end":514417,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514418,"byte_end":514493,"line_start":356,"line_end":356,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514494,"byte_end":514505,"line_start":357,"line_end":357,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514506,"byte_end":514553,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514554,"byte_end":514582,"line_start":359,"line_end":359,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514583,"byte_end":514620,"line_start":360,"line_end":360,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514621,"byte_end":514624,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514625,"byte_end":514647,"line_start":362,"line_end":362,"column_start":1,"column_end":23}},{"value":"/   le_u8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514648,"byte_end":514662,"line_start":363,"line_end":363,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514663,"byte_end":514669,"line_start":364,"line_end":364,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514670,"byte_end":514673,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514674,"byte_end":514753,"line_start":366,"line_end":366,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514754,"byte_end":514831,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514832,"byte_end":514839,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":514840,"byte_end":514849,"line_start":369,"line_end":369,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1913},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515718,"byte_end":515724,"line_start":400,"line_end":400,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::complete::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515210,"byte_end":515266,"line_start":384,"line_end":384,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515267,"byte_end":515270,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515271,"byte_end":515346,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515347,"byte_end":515358,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515359,"byte_end":515406,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515407,"byte_end":515435,"line_start":389,"line_end":389,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515436,"byte_end":515474,"line_start":390,"line_end":390,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515475,"byte_end":515478,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515479,"byte_end":515501,"line_start":392,"line_end":392,"column_start":1,"column_end":23}},{"value":"/   le_u16(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515502,"byte_end":515517,"line_start":393,"line_end":393,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515518,"byte_end":515524,"line_start":394,"line_end":394,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515525,"byte_end":515528,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515529,"byte_end":515606,"line_start":396,"line_end":396,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515607,"byte_end":515692,"line_start":397,"line_end":397,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515693,"byte_end":515700,"line_start":398,"line_end":398,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":515701,"byte_end":515710,"line_start":399,"line_end":399,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1916},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516666,"byte_end":516672,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::complete::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516153,"byte_end":516208,"line_start":417,"line_end":417,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516209,"byte_end":516212,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516213,"byte_end":516288,"line_start":419,"line_end":419,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516289,"byte_end":516300,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516301,"byte_end":516348,"line_start":421,"line_end":421,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516349,"byte_end":516377,"line_start":422,"line_end":422,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516378,"byte_end":516416,"line_start":423,"line_end":423,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516417,"byte_end":516420,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516421,"byte_end":516443,"line_start":425,"line_end":425,"column_start":1,"column_end":23}},{"value":"/   le_u24(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516444,"byte_end":516459,"line_start":426,"line_end":426,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516460,"byte_end":516466,"line_start":427,"line_end":427,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516467,"byte_end":516470,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516471,"byte_end":516554,"line_start":429,"line_end":429,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516555,"byte_end":516640,"line_start":430,"line_end":430,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516641,"byte_end":516648,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":516649,"byte_end":516658,"line_start":432,"line_end":432,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1919},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517621,"byte_end":517627,"line_start":466,"line_end":466,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::complete::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517101,"byte_end":517157,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517158,"byte_end":517161,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517162,"byte_end":517237,"line_start":452,"line_end":452,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517238,"byte_end":517249,"line_start":453,"line_end":453,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517250,"byte_end":517297,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517298,"byte_end":517326,"line_start":455,"line_end":455,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517327,"byte_end":517365,"line_start":456,"line_end":456,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517366,"byte_end":517369,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517370,"byte_end":517392,"line_start":458,"line_end":458,"column_start":1,"column_end":23}},{"value":"/   le_u32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517393,"byte_end":517408,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517409,"byte_end":517415,"line_start":460,"line_end":460,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517416,"byte_end":517419,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517420,"byte_end":517509,"line_start":462,"line_end":462,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517510,"byte_end":517595,"line_start":463,"line_end":463,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517596,"byte_end":517603,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":517604,"byte_end":517613,"line_start":465,"line_end":465,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1922},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518600,"byte_end":518606,"line_start":499,"line_end":499,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::complete::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518056,"byte_end":518112,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518113,"byte_end":518116,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518117,"byte_end":518192,"line_start":485,"line_end":485,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518193,"byte_end":518204,"line_start":486,"line_end":486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518205,"byte_end":518252,"line_start":487,"line_end":487,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518253,"byte_end":518281,"line_start":488,"line_end":488,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518282,"byte_end":518320,"line_start":489,"line_end":489,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518321,"byte_end":518324,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518325,"byte_end":518347,"line_start":491,"line_end":491,"column_start":1,"column_end":23}},{"value":"/   le_u64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518348,"byte_end":518363,"line_start":492,"line_end":492,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518364,"byte_end":518370,"line_start":493,"line_end":493,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518371,"byte_end":518374,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518375,"byte_end":518488,"line_start":495,"line_end":495,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518489,"byte_end":518574,"line_start":496,"line_end":496,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518575,"byte_end":518582,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":518583,"byte_end":518592,"line_start":498,"line_end":498,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1925},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519650,"byte_end":519657,"line_start":533,"line_end":533,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::complete::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519035,"byte_end":519092,"line_start":516,"line_end":516,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519093,"byte_end":519096,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519097,"byte_end":519172,"line_start":518,"line_end":518,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519173,"byte_end":519184,"line_start":519,"line_end":519,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519185,"byte_end":519232,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519233,"byte_end":519261,"line_start":521,"line_end":521,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519262,"byte_end":519301,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519302,"byte_end":519305,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519306,"byte_end":519328,"line_start":524,"line_end":524,"column_start":1,"column_end":23}},{"value":"/   le_u128(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519329,"byte_end":519345,"line_start":525,"line_end":525,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519346,"byte_end":519352,"line_start":526,"line_end":526,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519353,"byte_end":519356,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519357,"byte_end":519518,"line_start":528,"line_end":528,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519519,"byte_end":519604,"line_start":529,"line_end":529,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519605,"byte_end":519612,"line_start":530,"line_end":530,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519613,"byte_end":519622,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":519623,"byte_end":519642,"line_start":532,"line_end":532,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1928},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520573,"byte_end":520578,"line_start":566,"line_end":566,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::complete::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520090,"byte_end":520129,"line_start":550,"line_end":550,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520130,"byte_end":520133,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520134,"byte_end":520209,"line_start":552,"line_end":552,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520210,"byte_end":520221,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520222,"byte_end":520269,"line_start":554,"line_end":554,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520270,"byte_end":520298,"line_start":555,"line_end":555,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520299,"byte_end":520336,"line_start":556,"line_end":556,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520337,"byte_end":520340,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520341,"byte_end":520363,"line_start":558,"line_end":558,"column_start":1,"column_end":23}},{"value":"/   le_i8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520364,"byte_end":520378,"line_start":559,"line_end":559,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520379,"byte_end":520385,"line_start":560,"line_end":560,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520386,"byte_end":520389,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520390,"byte_end":520469,"line_start":562,"line_end":562,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520470,"byte_end":520547,"line_start":563,"line_end":563,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520548,"byte_end":520555,"line_start":564,"line_end":564,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520556,"byte_end":520565,"line_start":565,"line_end":565,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1931},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521249,"byte_end":521255,"line_start":589,"line_end":589,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::complete::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520743,"byte_end":520797,"line_start":573,"line_end":573,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520798,"byte_end":520801,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520802,"byte_end":520877,"line_start":575,"line_end":575,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520878,"byte_end":520889,"line_start":576,"line_end":576,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520890,"byte_end":520937,"line_start":577,"line_end":577,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520938,"byte_end":520966,"line_start":578,"line_end":578,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":520967,"byte_end":521005,"line_start":579,"line_end":579,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521006,"byte_end":521009,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521010,"byte_end":521032,"line_start":581,"line_end":581,"column_start":1,"column_end":23}},{"value":"/   le_i16(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521033,"byte_end":521048,"line_start":582,"line_end":582,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521049,"byte_end":521055,"line_start":583,"line_end":583,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521056,"byte_end":521059,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521060,"byte_end":521137,"line_start":585,"line_end":585,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521138,"byte_end":521223,"line_start":586,"line_end":586,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521224,"byte_end":521231,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521232,"byte_end":521241,"line_start":588,"line_end":588,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1934},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521935,"byte_end":521941,"line_start":612,"line_end":612,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::complete::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521423,"byte_end":521477,"line_start":596,"line_end":596,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521478,"byte_end":521481,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521482,"byte_end":521557,"line_start":598,"line_end":598,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521558,"byte_end":521569,"line_start":599,"line_end":599,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521570,"byte_end":521617,"line_start":600,"line_end":600,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521618,"byte_end":521646,"line_start":601,"line_end":601,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521647,"byte_end":521685,"line_start":602,"line_end":602,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521686,"byte_end":521689,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521690,"byte_end":521712,"line_start":604,"line_end":604,"column_start":1,"column_end":23}},{"value":"/   le_i24(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521713,"byte_end":521728,"line_start":605,"line_end":605,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521729,"byte_end":521735,"line_start":606,"line_end":606,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521736,"byte_end":521739,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521740,"byte_end":521823,"line_start":608,"line_end":608,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521824,"byte_end":521909,"line_start":609,"line_end":609,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521910,"byte_end":521917,"line_start":610,"line_end":610,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":521918,"byte_end":521927,"line_start":611,"line_end":611,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1937},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522777,"byte_end":522783,"line_start":640,"line_end":640,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::complete::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522259,"byte_end":522313,"line_start":624,"line_end":624,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522314,"byte_end":522317,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522318,"byte_end":522393,"line_start":626,"line_end":626,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522394,"byte_end":522405,"line_start":627,"line_end":627,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522406,"byte_end":522453,"line_start":628,"line_end":628,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522454,"byte_end":522482,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522483,"byte_end":522521,"line_start":630,"line_end":630,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522522,"byte_end":522525,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522526,"byte_end":522548,"line_start":632,"line_end":632,"column_start":1,"column_end":23}},{"value":"/   le_i32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522549,"byte_end":522564,"line_start":633,"line_end":633,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522565,"byte_end":522571,"line_start":634,"line_end":634,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522572,"byte_end":522575,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522576,"byte_end":522665,"line_start":636,"line_end":636,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522666,"byte_end":522751,"line_start":637,"line_end":637,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522752,"byte_end":522759,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522760,"byte_end":522769,"line_start":639,"line_end":639,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1940},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523493,"byte_end":523499,"line_start":663,"line_end":663,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::complete::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":522951,"byte_end":523005,"line_start":647,"line_end":647,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523006,"byte_end":523009,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523010,"byte_end":523085,"line_start":649,"line_end":649,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523086,"byte_end":523097,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523098,"byte_end":523145,"line_start":651,"line_end":651,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523146,"byte_end":523174,"line_start":652,"line_end":652,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523175,"byte_end":523213,"line_start":653,"line_end":653,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523214,"byte_end":523217,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523218,"byte_end":523240,"line_start":655,"line_end":655,"column_start":1,"column_end":23}},{"value":"/   le_i64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523241,"byte_end":523256,"line_start":656,"line_end":656,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523257,"byte_end":523263,"line_start":657,"line_end":657,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523264,"byte_end":523267,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523268,"byte_end":523381,"line_start":659,"line_end":659,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523382,"byte_end":523467,"line_start":660,"line_end":660,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523468,"byte_end":523475,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523476,"byte_end":523485,"line_start":662,"line_end":662,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1943},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524280,"byte_end":524287,"line_start":687,"line_end":687,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::complete::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523667,"byte_end":523722,"line_start":670,"line_end":670,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523723,"byte_end":523726,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523727,"byte_end":523802,"line_start":672,"line_end":672,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523803,"byte_end":523814,"line_start":673,"line_end":673,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523815,"byte_end":523862,"line_start":674,"line_end":674,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523863,"byte_end":523891,"line_start":675,"line_end":675,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523892,"byte_end":523931,"line_start":676,"line_end":676,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523932,"byte_end":523935,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523936,"byte_end":523958,"line_start":678,"line_end":678,"column_start":1,"column_end":23}},{"value":"/   le_i128(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523959,"byte_end":523975,"line_start":679,"line_end":679,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523976,"byte_end":523982,"line_start":680,"line_end":680,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523983,"byte_end":523986,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":523987,"byte_end":524148,"line_start":682,"line_end":682,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524149,"byte_end":524234,"line_start":683,"line_end":683,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524235,"byte_end":524242,"line_start":684,"line_end":684,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524243,"byte_end":524252,"line_start":685,"line_end":685,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524253,"byte_end":524272,"line_start":686,"line_end":686,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1946},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524995,"byte_end":524997,"line_start":711,"line_end":711,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::complete::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524458,"byte_end":524499,"line_start":694,"line_end":694,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524500,"byte_end":524503,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524504,"byte_end":524562,"line_start":696,"line_end":696,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524563,"byte_end":524637,"line_start":697,"line_end":697,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524638,"byte_end":524649,"line_start":698,"line_end":698,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524650,"byte_end":524697,"line_start":699,"line_end":699,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524698,"byte_end":524726,"line_start":700,"line_end":700,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524727,"byte_end":524761,"line_start":701,"line_end":701,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524762,"byte_end":524765,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524766,"byte_end":524788,"line_start":703,"line_end":703,"column_start":1,"column_end":23}},{"value":"/   u8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524789,"byte_end":524800,"line_start":704,"line_end":704,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524801,"byte_end":524807,"line_start":705,"line_end":705,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524808,"byte_end":524811,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524812,"byte_end":524891,"line_start":707,"line_end":707,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524892,"byte_end":524969,"line_start":708,"line_end":708,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524970,"byte_end":524977,"line_start":709,"line_end":709,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":524978,"byte_end":524987,"line_start":710,"line_end":710,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1949},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526272,"byte_end":526275,"line_start":751,"line_end":751,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::complete::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525345,"byte_end":525387,"line_start":725,"line_end":725,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525388,"byte_end":525391,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525392,"byte_end":525471,"line_start":727,"line_end":727,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525472,"byte_end":525549,"line_start":728,"line_end":728,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525550,"byte_end":525624,"line_start":729,"line_end":729,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525625,"byte_end":525628,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525629,"byte_end":525640,"line_start":731,"line_end":731,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525641,"byte_end":525688,"line_start":732,"line_end":732,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525689,"byte_end":525717,"line_start":733,"line_end":733,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525718,"byte_end":525753,"line_start":734,"line_end":734,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525754,"byte_end":525757,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525758,"byte_end":525780,"line_start":736,"line_end":736,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525781,"byte_end":525823,"line_start":737,"line_end":737,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525824,"byte_end":525830,"line_start":738,"line_end":738,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525831,"byte_end":525834,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525835,"byte_end":525912,"line_start":740,"line_end":740,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525913,"byte_end":525998,"line_start":741,"line_end":741,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":525999,"byte_end":526002,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526003,"byte_end":526025,"line_start":743,"line_end":743,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526026,"byte_end":526071,"line_start":744,"line_end":744,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526072,"byte_end":526078,"line_start":745,"line_end":745,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526079,"byte_end":526082,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526083,"byte_end":526160,"line_start":747,"line_end":747,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526161,"byte_end":526246,"line_start":748,"line_end":748,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526247,"byte_end":526254,"line_start":749,"line_end":749,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526255,"byte_end":526264,"line_start":750,"line_end":750,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1952},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527660,"byte_end":527663,"line_start":790,"line_end":790,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::complete::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526726,"byte_end":526767,"line_start":765,"line_end":765,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526768,"byte_end":526771,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526772,"byte_end":526851,"line_start":767,"line_end":767,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526852,"byte_end":526929,"line_start":768,"line_end":768,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":526930,"byte_end":527004,"line_start":769,"line_end":769,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527005,"byte_end":527016,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527017,"byte_end":527064,"line_start":771,"line_end":771,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527065,"byte_end":527093,"line_start":772,"line_end":772,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527094,"byte_end":527129,"line_start":773,"line_end":773,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527130,"byte_end":527133,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527134,"byte_end":527156,"line_start":775,"line_end":775,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527157,"byte_end":527199,"line_start":776,"line_end":776,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527200,"byte_end":527206,"line_start":777,"line_end":777,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527207,"byte_end":527210,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527211,"byte_end":527294,"line_start":779,"line_end":779,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527295,"byte_end":527380,"line_start":780,"line_end":780,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527381,"byte_end":527384,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527385,"byte_end":527407,"line_start":782,"line_end":782,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527408,"byte_end":527453,"line_start":783,"line_end":783,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527454,"byte_end":527460,"line_start":784,"line_end":784,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527461,"byte_end":527464,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527465,"byte_end":527548,"line_start":786,"line_end":786,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527549,"byte_end":527634,"line_start":787,"line_end":787,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527635,"byte_end":527642,"line_start":788,"line_end":788,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":527643,"byte_end":527652,"line_start":789,"line_end":789,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1955},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529060,"byte_end":529063,"line_start":829,"line_end":829,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::complete::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528114,"byte_end":528155,"line_start":804,"line_end":804,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528156,"byte_end":528159,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528160,"byte_end":528239,"line_start":806,"line_end":806,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528240,"byte_end":528317,"line_start":807,"line_end":807,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528318,"byte_end":528392,"line_start":808,"line_end":808,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528393,"byte_end":528404,"line_start":809,"line_end":809,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528405,"byte_end":528452,"line_start":810,"line_end":810,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528453,"byte_end":528481,"line_start":811,"line_end":811,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528482,"byte_end":528517,"line_start":812,"line_end":812,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528518,"byte_end":528521,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528522,"byte_end":528544,"line_start":814,"line_end":814,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528545,"byte_end":528587,"line_start":815,"line_end":815,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528588,"byte_end":528594,"line_start":816,"line_end":816,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528595,"byte_end":528598,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528599,"byte_end":528688,"line_start":818,"line_end":818,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528689,"byte_end":528774,"line_start":819,"line_end":819,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528775,"byte_end":528778,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528779,"byte_end":528801,"line_start":821,"line_end":821,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528802,"byte_end":528847,"line_start":822,"line_end":822,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528848,"byte_end":528854,"line_start":823,"line_end":823,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528855,"byte_end":528858,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528859,"byte_end":528948,"line_start":825,"line_end":825,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":528949,"byte_end":529034,"line_start":826,"line_end":826,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529035,"byte_end":529042,"line_start":827,"line_end":827,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529043,"byte_end":529052,"line_start":828,"line_end":828,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1958},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530508,"byte_end":530511,"line_start":868,"line_end":868,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::complete::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529514,"byte_end":529555,"line_start":843,"line_end":843,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529556,"byte_end":529559,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529560,"byte_end":529639,"line_start":845,"line_end":845,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529640,"byte_end":529717,"line_start":846,"line_end":846,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529718,"byte_end":529792,"line_start":847,"line_end":847,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529793,"byte_end":529804,"line_start":848,"line_end":848,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529805,"byte_end":529852,"line_start":849,"line_end":849,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529853,"byte_end":529881,"line_start":850,"line_end":850,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529882,"byte_end":529917,"line_start":851,"line_end":851,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529918,"byte_end":529921,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529922,"byte_end":529944,"line_start":853,"line_end":853,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529945,"byte_end":529987,"line_start":854,"line_end":854,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529988,"byte_end":529994,"line_start":855,"line_end":855,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529995,"byte_end":529998,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":529999,"byte_end":530112,"line_start":857,"line_end":857,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530113,"byte_end":530198,"line_start":858,"line_end":858,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530199,"byte_end":530202,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530203,"byte_end":530225,"line_start":860,"line_end":860,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530226,"byte_end":530271,"line_start":861,"line_end":861,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530272,"byte_end":530278,"line_start":862,"line_end":862,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530279,"byte_end":530282,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530283,"byte_end":530396,"line_start":864,"line_end":864,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530397,"byte_end":530482,"line_start":865,"line_end":865,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530483,"byte_end":530490,"line_start":866,"line_end":866,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530491,"byte_end":530500,"line_start":867,"line_end":867,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1961},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532084,"byte_end":532088,"line_start":908,"line_end":908,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::complete::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":530962,"byte_end":531004,"line_start":882,"line_end":882,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531005,"byte_end":531008,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531009,"byte_end":531089,"line_start":884,"line_end":884,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531090,"byte_end":531168,"line_start":885,"line_end":885,"column_start":1,"column_end":79}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531169,"byte_end":531243,"line_start":886,"line_end":886,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531244,"byte_end":531255,"line_start":887,"line_end":887,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531256,"byte_end":531303,"line_start":888,"line_end":888,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531304,"byte_end":531332,"line_start":889,"line_end":889,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531333,"byte_end":531369,"line_start":890,"line_end":890,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531370,"byte_end":531373,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531374,"byte_end":531397,"line_start":892,"line_end":892,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531398,"byte_end":531441,"line_start":893,"line_end":893,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531442,"byte_end":531448,"line_start":894,"line_end":894,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531449,"byte_end":531452,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531453,"byte_end":531615,"line_start":896,"line_end":896,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531616,"byte_end":531702,"line_start":897,"line_end":897,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531703,"byte_end":531706,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531707,"byte_end":531730,"line_start":899,"line_end":899,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531731,"byte_end":531777,"line_start":900,"line_end":900,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531778,"byte_end":531784,"line_start":901,"line_end":901,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531785,"byte_end":531788,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531789,"byte_end":531951,"line_start":903,"line_end":903,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":531952,"byte_end":532038,"line_start":904,"line_end":904,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532039,"byte_end":532046,"line_start":905,"line_end":905,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532047,"byte_end":532056,"line_start":906,"line_end":906,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532057,"byte_end":532076,"line_start":907,"line_end":907,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1964},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533078,"byte_end":533080,"line_start":939,"line_end":939,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::complete::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532544,"byte_end":532582,"line_start":922,"line_end":922,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532583,"byte_end":532586,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532587,"byte_end":532645,"line_start":924,"line_end":924,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532646,"byte_end":532720,"line_start":925,"line_end":925,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532721,"byte_end":532732,"line_start":926,"line_end":926,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532733,"byte_end":532780,"line_start":927,"line_end":927,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532781,"byte_end":532809,"line_start":928,"line_end":928,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532810,"byte_end":532844,"line_start":929,"line_end":929,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532845,"byte_end":532848,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532849,"byte_end":532871,"line_start":931,"line_end":931,"column_start":1,"column_end":23}},{"value":"/   i8(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532872,"byte_end":532883,"line_start":932,"line_end":932,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532884,"byte_end":532890,"line_start":933,"line_end":933,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532891,"byte_end":532894,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532895,"byte_end":532974,"line_start":935,"line_end":935,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":532975,"byte_end":533052,"line_start":936,"line_end":936,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533053,"byte_end":533060,"line_start":937,"line_end":937,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533061,"byte_end":533070,"line_start":938,"line_end":938,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1967},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534153,"byte_end":534156,"line_start":971,"line_end":971,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::complete::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533234,"byte_end":533272,"line_start":946,"line_end":946,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533273,"byte_end":533276,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533277,"byte_end":533356,"line_start":948,"line_end":948,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533357,"byte_end":533434,"line_start":949,"line_end":949,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533435,"byte_end":533509,"line_start":950,"line_end":950,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533510,"byte_end":533521,"line_start":951,"line_end":951,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533522,"byte_end":533569,"line_start":952,"line_end":952,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533570,"byte_end":533598,"line_start":953,"line_end":953,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533599,"byte_end":533634,"line_start":954,"line_end":954,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533635,"byte_end":533638,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533639,"byte_end":533661,"line_start":956,"line_end":956,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533662,"byte_end":533704,"line_start":957,"line_end":957,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533705,"byte_end":533711,"line_start":958,"line_end":958,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533712,"byte_end":533715,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533716,"byte_end":533793,"line_start":960,"line_end":960,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533794,"byte_end":533879,"line_start":961,"line_end":961,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533880,"byte_end":533883,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533884,"byte_end":533906,"line_start":963,"line_end":963,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533907,"byte_end":533952,"line_start":964,"line_end":964,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533953,"byte_end":533959,"line_start":965,"line_end":965,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533960,"byte_end":533963,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":533964,"byte_end":534041,"line_start":967,"line_end":967,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534042,"byte_end":534127,"line_start":968,"line_end":968,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534128,"byte_end":534135,"line_start":969,"line_end":969,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534136,"byte_end":534145,"line_start":970,"line_end":970,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1970},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535538,"byte_end":535541,"line_start":1010,"line_end":1010,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::complete::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534607,"byte_end":534645,"line_start":985,"line_end":985,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534646,"byte_end":534649,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534650,"byte_end":534729,"line_start":987,"line_end":987,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534730,"byte_end":534807,"line_start":988,"line_end":988,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534808,"byte_end":534882,"line_start":989,"line_end":989,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534883,"byte_end":534894,"line_start":990,"line_end":990,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534895,"byte_end":534942,"line_start":991,"line_end":991,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534943,"byte_end":534971,"line_start":992,"line_end":992,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":534972,"byte_end":535007,"line_start":993,"line_end":993,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535008,"byte_end":535011,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535012,"byte_end":535034,"line_start":995,"line_end":995,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535035,"byte_end":535077,"line_start":996,"line_end":996,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535078,"byte_end":535084,"line_start":997,"line_end":997,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535085,"byte_end":535088,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535089,"byte_end":535172,"line_start":999,"line_end":999,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535173,"byte_end":535258,"line_start":1000,"line_end":1000,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535259,"byte_end":535262,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535263,"byte_end":535285,"line_start":1002,"line_end":1002,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535286,"byte_end":535331,"line_start":1003,"line_end":1003,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535332,"byte_end":535338,"line_start":1004,"line_end":1004,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535339,"byte_end":535342,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535343,"byte_end":535426,"line_start":1006,"line_end":1006,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535427,"byte_end":535512,"line_start":1007,"line_end":1007,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535513,"byte_end":535520,"line_start":1008,"line_end":1008,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535521,"byte_end":535530,"line_start":1009,"line_end":1009,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1973},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536935,"byte_end":536938,"line_start":1049,"line_end":1049,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::complete::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":535992,"byte_end":536030,"line_start":1024,"line_end":1024,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536031,"byte_end":536034,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536035,"byte_end":536114,"line_start":1026,"line_end":1026,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536115,"byte_end":536192,"line_start":1027,"line_end":1027,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536193,"byte_end":536267,"line_start":1028,"line_end":1028,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536268,"byte_end":536279,"line_start":1029,"line_end":1029,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536280,"byte_end":536327,"line_start":1030,"line_end":1030,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536328,"byte_end":536356,"line_start":1031,"line_end":1031,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536357,"byte_end":536392,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536393,"byte_end":536396,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536397,"byte_end":536419,"line_start":1034,"line_end":1034,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536420,"byte_end":536462,"line_start":1035,"line_end":1035,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536463,"byte_end":536469,"line_start":1036,"line_end":1036,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536470,"byte_end":536473,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536474,"byte_end":536563,"line_start":1038,"line_end":1038,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536564,"byte_end":536649,"line_start":1039,"line_end":1039,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536650,"byte_end":536653,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536654,"byte_end":536676,"line_start":1041,"line_end":1041,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536677,"byte_end":536722,"line_start":1042,"line_end":1042,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536723,"byte_end":536729,"line_start":1043,"line_end":1043,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536730,"byte_end":536733,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536734,"byte_end":536823,"line_start":1045,"line_end":1045,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536824,"byte_end":536909,"line_start":1046,"line_end":1046,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536910,"byte_end":536917,"line_start":1047,"line_end":1047,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":536918,"byte_end":536927,"line_start":1048,"line_end":1048,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1976},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538380,"byte_end":538383,"line_start":1088,"line_end":1088,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::complete::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537389,"byte_end":537427,"line_start":1063,"line_end":1063,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537428,"byte_end":537431,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537432,"byte_end":537511,"line_start":1065,"line_end":1065,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537512,"byte_end":537589,"line_start":1066,"line_end":1066,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537590,"byte_end":537664,"line_start":1067,"line_end":1067,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537665,"byte_end":537676,"line_start":1068,"line_end":1068,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537677,"byte_end":537724,"line_start":1069,"line_end":1069,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537725,"byte_end":537753,"line_start":1070,"line_end":1070,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537754,"byte_end":537789,"line_start":1071,"line_end":1071,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537790,"byte_end":537793,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537794,"byte_end":537816,"line_start":1073,"line_end":1073,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537817,"byte_end":537859,"line_start":1074,"line_end":1074,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537860,"byte_end":537866,"line_start":1075,"line_end":1075,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537867,"byte_end":537870,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537871,"byte_end":537984,"line_start":1077,"line_end":1077,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":537985,"byte_end":538070,"line_start":1078,"line_end":1078,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538071,"byte_end":538074,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538075,"byte_end":538097,"line_start":1080,"line_end":1080,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538098,"byte_end":538143,"line_start":1081,"line_end":1081,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538144,"byte_end":538150,"line_start":1082,"line_end":1082,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538151,"byte_end":538154,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538155,"byte_end":538268,"line_start":1084,"line_end":1084,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538269,"byte_end":538354,"line_start":1085,"line_end":1085,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538355,"byte_end":538362,"line_start":1086,"line_end":1086,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538363,"byte_end":538372,"line_start":1087,"line_end":1087,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1979},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539953,"byte_end":539957,"line_start":1128,"line_end":1128,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::complete::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538834,"byte_end":538873,"line_start":1102,"line_end":1102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538874,"byte_end":538877,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538878,"byte_end":538958,"line_start":1104,"line_end":1104,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":538959,"byte_end":539037,"line_start":1105,"line_end":1105,"column_start":1,"column_end":79}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539038,"byte_end":539112,"line_start":1106,"line_end":1106,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539113,"byte_end":539124,"line_start":1107,"line_end":1107,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539125,"byte_end":539172,"line_start":1108,"line_end":1108,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539173,"byte_end":539201,"line_start":1109,"line_end":1109,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539202,"byte_end":539238,"line_start":1110,"line_end":1110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539239,"byte_end":539242,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539243,"byte_end":539266,"line_start":1112,"line_end":1112,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539267,"byte_end":539310,"line_start":1113,"line_end":1113,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539311,"byte_end":539317,"line_start":1114,"line_end":1114,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539318,"byte_end":539321,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539322,"byte_end":539484,"line_start":1116,"line_end":1116,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539485,"byte_end":539571,"line_start":1117,"line_end":1117,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539572,"byte_end":539575,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539576,"byte_end":539599,"line_start":1119,"line_end":1119,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539600,"byte_end":539646,"line_start":1120,"line_end":1120,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539647,"byte_end":539653,"line_start":1121,"line_end":1121,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539654,"byte_end":539657,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539658,"byte_end":539820,"line_start":1123,"line_end":1123,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539821,"byte_end":539907,"line_start":1124,"line_end":1124,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539908,"byte_end":539915,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539916,"byte_end":539925,"line_start":1126,"line_end":1126,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":539926,"byte_end":539945,"line_start":1127,"line_end":1127,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1982},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540921,"byte_end":540927,"line_start":1158,"line_end":1158,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::complete::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540413,"byte_end":540471,"line_start":1142,"line_end":1142,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540472,"byte_end":540475,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540476,"byte_end":540551,"line_start":1144,"line_end":1144,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540552,"byte_end":540563,"line_start":1145,"line_end":1145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540564,"byte_end":540611,"line_start":1146,"line_end":1146,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540612,"byte_end":540640,"line_start":1147,"line_end":1147,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540641,"byte_end":540679,"line_start":1148,"line_end":1148,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540680,"byte_end":540683,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540684,"byte_end":540706,"line_start":1150,"line_end":1150,"column_start":1,"column_end":23}},{"value":"/   be_f32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540707,"byte_end":540722,"line_start":1151,"line_end":1151,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540723,"byte_end":540729,"line_start":1152,"line_end":1152,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540730,"byte_end":540733,"line_start":1153,"line_end":1153,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540734,"byte_end":540810,"line_start":1154,"line_end":1154,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540811,"byte_end":540895,"line_start":1155,"line_end":1155,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540896,"byte_end":540903,"line_start":1156,"line_end":1156,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":540904,"byte_end":540913,"line_start":1157,"line_end":1157,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1985},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541687,"byte_end":541693,"line_start":1184,"line_end":1184,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::complete::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541155,"byte_end":541213,"line_start":1168,"line_end":1168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541214,"byte_end":541217,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541218,"byte_end":541293,"line_start":1170,"line_end":1170,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541294,"byte_end":541305,"line_start":1171,"line_end":1171,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541306,"byte_end":541353,"line_start":1172,"line_end":1172,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541354,"byte_end":541382,"line_start":1173,"line_end":1173,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541383,"byte_end":541421,"line_start":1174,"line_end":1174,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541422,"byte_end":541425,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541426,"byte_end":541448,"line_start":1176,"line_end":1176,"column_start":1,"column_end":23}},{"value":"/   be_f64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541449,"byte_end":541464,"line_start":1177,"line_end":1177,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541465,"byte_end":541471,"line_start":1178,"line_end":1178,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541472,"byte_end":541475,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541476,"byte_end":541576,"line_start":1180,"line_end":1180,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541577,"byte_end":541661,"line_start":1181,"line_end":1181,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541662,"byte_end":541669,"line_start":1182,"line_end":1182,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541670,"byte_end":541679,"line_start":1183,"line_end":1183,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1988},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542432,"byte_end":542438,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::complete::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541921,"byte_end":541982,"line_start":1194,"line_end":1194,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541983,"byte_end":541986,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":541987,"byte_end":542062,"line_start":1196,"line_end":1196,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542063,"byte_end":542074,"line_start":1197,"line_end":1197,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542075,"byte_end":542122,"line_start":1198,"line_end":1198,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542123,"byte_end":542151,"line_start":1199,"line_end":1199,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542152,"byte_end":542190,"line_start":1200,"line_end":1200,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542191,"byte_end":542194,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542195,"byte_end":542217,"line_start":1202,"line_end":1202,"column_start":1,"column_end":23}},{"value":"/   le_f32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542218,"byte_end":542233,"line_start":1203,"line_end":1203,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542234,"byte_end":542240,"line_start":1204,"line_end":1204,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542241,"byte_end":542244,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542245,"byte_end":542321,"line_start":1206,"line_end":1206,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542322,"byte_end":542406,"line_start":1207,"line_end":1207,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542407,"byte_end":542414,"line_start":1208,"line_end":1208,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542415,"byte_end":542424,"line_start":1209,"line_end":1209,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1991},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543201,"byte_end":543207,"line_start":1236,"line_end":1236,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::complete::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542666,"byte_end":542727,"line_start":1220,"line_end":1220,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542728,"byte_end":542731,"line_start":1221,"line_end":1221,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542732,"byte_end":542807,"line_start":1222,"line_end":1222,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542808,"byte_end":542819,"line_start":1223,"line_end":1223,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542820,"byte_end":542867,"line_start":1224,"line_end":1224,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542868,"byte_end":542896,"line_start":1225,"line_end":1225,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542897,"byte_end":542935,"line_start":1226,"line_end":1226,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542936,"byte_end":542939,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542940,"byte_end":542962,"line_start":1228,"line_end":1228,"column_start":1,"column_end":23}},{"value":"/   le_f64(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542963,"byte_end":542978,"line_start":1229,"line_end":1229,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542979,"byte_end":542985,"line_start":1230,"line_end":1230,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542986,"byte_end":542989,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":542990,"byte_end":543090,"line_start":1232,"line_end":1232,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543091,"byte_end":543175,"line_start":1233,"line_end":1233,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543176,"byte_end":543183,"line_start":1234,"line_end":1234,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543184,"byte_end":543193,"line_start":1235,"line_end":1235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1994},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544353,"byte_end":544356,"line_start":1271,"line_end":1271,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::complete::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543435,"byte_end":543480,"line_start":1246,"line_end":1246,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543481,"byte_end":543484,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543485,"byte_end":543562,"line_start":1248,"line_end":1248,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543563,"byte_end":543638,"line_start":1249,"line_end":1249,"column_start":1,"column_end":76}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543639,"byte_end":543713,"line_start":1250,"line_end":1250,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543714,"byte_end":543725,"line_start":1251,"line_end":1251,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543726,"byte_end":543773,"line_start":1252,"line_end":1252,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543774,"byte_end":543802,"line_start":1253,"line_end":1253,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543803,"byte_end":543838,"line_start":1254,"line_end":1254,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543839,"byte_end":543842,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543843,"byte_end":543865,"line_start":1256,"line_end":1256,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543866,"byte_end":543908,"line_start":1257,"line_end":1257,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543909,"byte_end":543915,"line_start":1258,"line_end":1258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543916,"byte_end":543919,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543920,"byte_end":543996,"line_start":1260,"line_end":1260,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":543997,"byte_end":544081,"line_start":1261,"line_end":1261,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544082,"byte_end":544085,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544086,"byte_end":544108,"line_start":1263,"line_end":1263,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544109,"byte_end":544154,"line_start":1264,"line_end":1264,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544155,"byte_end":544161,"line_start":1265,"line_end":1265,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544162,"byte_end":544165,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544166,"byte_end":544242,"line_start":1267,"line_end":1267,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544243,"byte_end":544327,"line_start":1268,"line_end":1268,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544328,"byte_end":544335,"line_start":1269,"line_end":1269,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544336,"byte_end":544345,"line_start":1270,"line_end":1270,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1997},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545774,"byte_end":545777,"line_start":1310,"line_end":1310,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::complete::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544807,"byte_end":544853,"line_start":1285,"line_end":1285,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544854,"byte_end":544857,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544858,"byte_end":544935,"line_start":1287,"line_end":1287,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":544936,"byte_end":545011,"line_start":1288,"line_end":1288,"column_start":1,"column_end":76}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545012,"byte_end":545086,"line_start":1289,"line_end":1289,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545087,"byte_end":545098,"line_start":1290,"line_end":1290,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545099,"byte_end":545146,"line_start":1291,"line_end":1291,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545147,"byte_end":545175,"line_start":1292,"line_end":1292,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545176,"byte_end":545211,"line_start":1293,"line_end":1293,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545212,"byte_end":545215,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545216,"byte_end":545238,"line_start":1295,"line_end":1295,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545239,"byte_end":545281,"line_start":1296,"line_end":1296,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545282,"byte_end":545288,"line_start":1297,"line_end":1297,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545289,"byte_end":545292,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545293,"byte_end":545393,"line_start":1299,"line_end":1299,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545394,"byte_end":545478,"line_start":1300,"line_end":1300,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545479,"byte_end":545482,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545483,"byte_end":545505,"line_start":1302,"line_end":1302,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545506,"byte_end":545551,"line_start":1303,"line_end":1303,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545552,"byte_end":545558,"line_start":1304,"line_end":1304,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545559,"byte_end":545562,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545563,"byte_end":545663,"line_start":1306,"line_end":1306,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545664,"byte_end":545748,"line_start":1307,"line_end":1307,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545749,"byte_end":545756,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":545757,"byte_end":545766,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546774,"byte_end":546781,"line_start":1341,"line_end":1341,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::complete::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546228,"byte_end":546265,"line_start":1324,"line_end":1324,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546266,"byte_end":546269,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will parse until the end of input if it has less than 8 bytes.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546270,"byte_end":546356,"line_start":1326,"line_end":1326,"column_start":1,"column_end":87}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546357,"byte_end":546368,"line_start":1327,"line_end":1327,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546369,"byte_end":546416,"line_start":1328,"line_end":1328,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546417,"byte_end":546445,"line_start":1329,"line_end":1329,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::hex_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546446,"byte_end":546485,"line_start":1330,"line_end":1330,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546486,"byte_end":546489,"line_start":1331,"line_end":1331,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546490,"byte_end":546512,"line_start":1332,"line_end":1332,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546513,"byte_end":546529,"line_start":1333,"line_end":1333,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546530,"byte_end":546536,"line_start":1334,"line_end":1334,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546537,"byte_end":546540,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546541,"byte_end":546602,"line_start":1336,"line_end":1336,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546603,"byte_end":546663,"line_start":1337,"line_end":1337,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546664,"byte_end":546748,"line_start":1338,"line_end":1338,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546749,"byte_end":546756,"line_start":1339,"line_end":1339,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":546757,"byte_end":546766,"line_start":1340,"line_end":1340,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":5378},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547956,"byte_end":547971,"line_start":1383,"line_end":1383,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::complete::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns the corresponding slice.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns the corresponding slice.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547304,"byte_end":547394,"line_start":1363,"line_end":1363,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547395,"byte_end":547398,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547399,"byte_end":547456,"line_start":1365,"line_end":1365,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547457,"byte_end":547460,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547461,"byte_end":547472,"line_start":1367,"line_end":1367,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547473,"byte_end":547520,"line_start":1368,"line_end":1368,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547521,"byte_end":547549,"line_start":1369,"line_end":1369,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::recognize_float;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547550,"byte_end":547597,"line_start":1370,"line_end":1370,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547598,"byte_end":547601,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547602,"byte_end":547624,"line_start":1372,"line_end":1372,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547625,"byte_end":547649,"line_start":1373,"line_end":1373,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547650,"byte_end":547656,"line_start":1374,"line_end":1374,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547657,"byte_end":547660,"line_start":1375,"line_end":1375,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547661,"byte_end":547712,"line_start":1376,"line_end":1376,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547713,"byte_end":547768,"line_start":1377,"line_end":1377,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547769,"byte_end":547824,"line_start":1378,"line_end":1378,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547825,"byte_end":547898,"line_start":1379,"line_end":1379,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547899,"byte_end":547906,"line_start":1380,"line_end":1380,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547907,"byte_end":547931,"line_start":1381,"line_end":1381,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":547932,"byte_end":547948,"line_start":1382,"line_end":1382,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2004},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":549173,"byte_end":549178,"line_start":1426,"line_end":1426,"column_start":8,"column_end":13},"name":"float","qualname":"::number::complete::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f32>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f32.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548581,"byte_end":548653,"line_start":1408,"line_end":1408,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548654,"byte_end":548657,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548658,"byte_end":548715,"line_start":1410,"line_end":1410,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548716,"byte_end":548727,"line_start":1411,"line_end":1411,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548728,"byte_end":548775,"line_start":1412,"line_end":1412,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548776,"byte_end":548804,"line_start":1413,"line_end":1413,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548805,"byte_end":548842,"line_start":1414,"line_end":1414,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548843,"byte_end":548846,"line_start":1415,"line_end":1415,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548847,"byte_end":548869,"line_start":1416,"line_end":1416,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548870,"byte_end":548884,"line_start":1417,"line_end":1417,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548885,"byte_end":548891,"line_start":1418,"line_end":1418,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548892,"byte_end":548895,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548896,"byte_end":548943,"line_start":1420,"line_end":1420,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548944,"byte_end":548994,"line_start":1421,"line_end":1421,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":548995,"byte_end":549050,"line_start":1422,"line_end":1422,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":549051,"byte_end":549124,"line_start":1423,"line_end":1423,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":549125,"byte_end":549132,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":549133,"byte_end":549165,"line_start":1425,"line_end":1425,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":2007},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551357,"byte_end":551363,"line_start":1493,"line_end":1493,"column_start":8,"column_end":14},"name":"double","qualname":"::number::complete::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f64>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f64.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f64.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550763,"byte_end":550835,"line_start":1475,"line_end":1475,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550836,"byte_end":550839,"line_start":1476,"line_end":1476,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550840,"byte_end":550897,"line_start":1477,"line_end":1477,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550898,"byte_end":550909,"line_start":1478,"line_end":1478,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550910,"byte_end":550957,"line_start":1479,"line_end":1479,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550958,"byte_end":550986,"line_start":1480,"line_end":1480,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::double;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":550987,"byte_end":551025,"line_start":1481,"line_end":1481,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551026,"byte_end":551029,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551030,"byte_end":551052,"line_start":1483,"line_end":1483,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551053,"byte_end":551068,"line_start":1484,"line_end":1484,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551069,"byte_end":551075,"line_start":1485,"line_end":1485,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551076,"byte_end":551079,"line_start":1486,"line_end":1486,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551080,"byte_end":551127,"line_start":1487,"line_end":1487,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551128,"byte_end":551178,"line_start":1488,"line_end":1488,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551179,"byte_end":551234,"line_start":1489,"line_end":1489,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551235,"byte_end":551308,"line_start":1490,"line_end":1490,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551309,"byte_end":551316,"line_start":1491,"line_end":1491,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/complete.rs","byte_start":551317,"byte_end":551349,"line_start":1492,"line_end":1492,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":2010},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::number::streaming","value":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":5409},{"krate":0,"index":2168},{"krate":0,"index":2171}],"decl_id":null,"docs":" Parsers recognizing numbers, streaming version\n","sig":null,"attributes":[{"value":"! Parsers recognizing numbers, streaming version","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":562940,"byte_end":562990,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2038},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563868,"byte_end":563873,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::streaming::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563378,"byte_end":563420,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563421,"byte_end":563424,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563425,"byte_end":563521,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563522,"byte_end":563533,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563534,"byte_end":563581,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563582,"byte_end":563620,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563621,"byte_end":563624,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563625,"byte_end":563647,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   be_u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563648,"byte_end":563683,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563684,"byte_end":563690,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563691,"byte_end":563694,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563695,"byte_end":563770,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563771,"byte_end":563842,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563843,"byte_end":563850,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":563851,"byte_end":563860,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2041},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564716,"byte_end":564722,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::streaming::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564207,"byte_end":564260,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564261,"byte_end":564264,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564265,"byte_end":564361,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564362,"byte_end":564365,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564366,"byte_end":564377,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564378,"byte_end":564425,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564426,"byte_end":564465,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564466,"byte_end":564469,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564470,"byte_end":564492,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/   be_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564493,"byte_end":564529,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564530,"byte_end":564536,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564537,"byte_end":564540,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564541,"byte_end":564614,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564615,"byte_end":564690,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564691,"byte_end":564698,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":564699,"byte_end":564708,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2044},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565662,"byte_end":565668,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::streaming::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565148,"byte_end":565200,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565201,"byte_end":565204,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565205,"byte_end":565301,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565302,"byte_end":565305,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565306,"byte_end":565317,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565318,"byte_end":565365,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565366,"byte_end":565405,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565406,"byte_end":565409,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565410,"byte_end":565432,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/   be_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565433,"byte_end":565469,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565470,"byte_end":565476,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565477,"byte_end":565480,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565481,"byte_end":565560,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565561,"byte_end":565636,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565637,"byte_end":565644,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":565645,"byte_end":565654,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2047},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566615,"byte_end":566621,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::streaming::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566094,"byte_end":566147,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566148,"byte_end":566151,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566152,"byte_end":566248,"line_start":110,"line_end":110,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566249,"byte_end":566252,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566253,"byte_end":566264,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566265,"byte_end":566312,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566313,"byte_end":566352,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566353,"byte_end":566356,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566357,"byte_end":566379,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/   be_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566380,"byte_end":566416,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566417,"byte_end":566423,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566424,"byte_end":566427,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566428,"byte_end":566513,"line_start":120,"line_end":120,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566514,"byte_end":566589,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566590,"byte_end":566597,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":566598,"byte_end":566607,"line_start":123,"line_end":123,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2050},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567592,"byte_end":567598,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::streaming::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567047,"byte_end":567100,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567101,"byte_end":567104,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567105,"byte_end":567201,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567202,"byte_end":567205,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567206,"byte_end":567217,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567218,"byte_end":567265,"line_start":146,"line_end":146,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567266,"byte_end":567305,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567306,"byte_end":567309,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567310,"byte_end":567332,"line_start":149,"line_end":149,"column_start":1,"column_end":23}},{"value":"/   be_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567333,"byte_end":567369,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567370,"byte_end":567376,"line_start":151,"line_end":151,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567377,"byte_end":567380,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567381,"byte_end":567490,"line_start":153,"line_end":153,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567491,"byte_end":567566,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567567,"byte_end":567574,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":567575,"byte_end":567584,"line_start":156,"line_end":156,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568637,"byte_end":568644,"line_start":190,"line_end":190,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::streaming::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568024,"byte_end":568078,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568079,"byte_end":568082,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568083,"byte_end":568179,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568180,"byte_end":568191,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568192,"byte_end":568239,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568240,"byte_end":568280,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568281,"byte_end":568284,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568285,"byte_end":568307,"line_start":181,"line_end":181,"column_start":1,"column_end":23}},{"value":"/   be_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568308,"byte_end":568345,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568346,"byte_end":568352,"line_start":183,"line_end":183,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568353,"byte_end":568356,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568357,"byte_end":568514,"line_start":185,"line_end":185,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568515,"byte_end":568591,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568592,"byte_end":568599,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568600,"byte_end":568609,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":568610,"byte_end":568629,"line_start":189,"line_end":189,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2056},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569540,"byte_end":569545,"line_start":220,"line_end":220,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::streaming::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569074,"byte_end":569113,"line_start":207,"line_end":207,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569114,"byte_end":569117,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569118,"byte_end":569214,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569215,"byte_end":569226,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569227,"byte_end":569274,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569275,"byte_end":569313,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569314,"byte_end":569317,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569318,"byte_end":569362,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569363,"byte_end":569366,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569367,"byte_end":569442,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569443,"byte_end":569514,"line_start":217,"line_end":217,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569515,"byte_end":569522,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569523,"byte_end":569532,"line_start":219,"line_end":219,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2059},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570188,"byte_end":570194,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::streaming::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569710,"byte_end":569761,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569762,"byte_end":569765,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569766,"byte_end":569862,"line_start":229,"line_end":229,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569863,"byte_end":569874,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569875,"byte_end":569922,"line_start":231,"line_end":231,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569923,"byte_end":569962,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569963,"byte_end":569966,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i16::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":569967,"byte_end":570012,"line_start":234,"line_end":234,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570013,"byte_end":570016,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570017,"byte_end":570090,"line_start":236,"line_end":236,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570091,"byte_end":570162,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570163,"byte_end":570170,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570171,"byte_end":570180,"line_start":239,"line_end":239,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2062},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570846,"byte_end":570852,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::streaming::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570362,"byte_end":570413,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570414,"byte_end":570417,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570418,"byte_end":570514,"line_start":249,"line_end":249,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570515,"byte_end":570526,"line_start":250,"line_end":250,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570527,"byte_end":570574,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570575,"byte_end":570614,"line_start":252,"line_end":252,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570615,"byte_end":570618,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i24::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570619,"byte_end":570664,"line_start":254,"line_end":254,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570665,"byte_end":570668,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570669,"byte_end":570748,"line_start":256,"line_end":256,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570749,"byte_end":570820,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570821,"byte_end":570828,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":570829,"byte_end":570838,"line_start":259,"line_end":259,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2065},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571660,"byte_end":571666,"line_start":285,"line_end":285,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::streaming::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571170,"byte_end":571221,"line_start":272,"line_end":272,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571222,"byte_end":571225,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571226,"byte_end":571322,"line_start":274,"line_end":274,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571323,"byte_end":571334,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571335,"byte_end":571382,"line_start":276,"line_end":276,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571383,"byte_end":571422,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571423,"byte_end":571426,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i32::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571427,"byte_end":571472,"line_start":279,"line_end":279,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571473,"byte_end":571476,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571477,"byte_end":571562,"line_start":281,"line_end":281,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571563,"byte_end":571634,"line_start":282,"line_end":282,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571635,"byte_end":571642,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571643,"byte_end":571652,"line_start":284,"line_end":284,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2068},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572356,"byte_end":572362,"line_start":306,"line_end":306,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::streaming::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571834,"byte_end":571885,"line_start":292,"line_end":292,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571886,"byte_end":571889,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571890,"byte_end":571986,"line_start":294,"line_end":294,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571987,"byte_end":571990,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":571991,"byte_end":572002,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572003,"byte_end":572050,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572051,"byte_end":572090,"line_start":298,"line_end":298,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572091,"byte_end":572094,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i64::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572095,"byte_end":572140,"line_start":300,"line_end":300,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572141,"byte_end":572144,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572145,"byte_end":572254,"line_start":302,"line_end":302,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572255,"byte_end":572330,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572331,"byte_end":572338,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572339,"byte_end":572348,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2071},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573120,"byte_end":573127,"line_start":327,"line_end":327,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::streaming::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572530,"byte_end":572582,"line_start":313,"line_end":313,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572583,"byte_end":572586,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572587,"byte_end":572683,"line_start":315,"line_end":315,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572684,"byte_end":572695,"line_start":316,"line_end":316,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572696,"byte_end":572743,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572744,"byte_end":572784,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572785,"byte_end":572788,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i128::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572789,"byte_end":572835,"line_start":320,"line_end":320,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572836,"byte_end":572839,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572840,"byte_end":572997,"line_start":322,"line_end":322,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":572998,"byte_end":573074,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573075,"byte_end":573082,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573083,"byte_end":573092,"line_start":325,"line_end":325,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573093,"byte_end":573112,"line_start":326,"line_end":326,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2074},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573767,"byte_end":573772,"line_start":347,"line_end":347,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::streaming::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573298,"byte_end":573340,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573341,"byte_end":573344,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573345,"byte_end":573441,"line_start":336,"line_end":336,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573442,"byte_end":573453,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573454,"byte_end":573501,"line_start":338,"line_end":338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573502,"byte_end":573540,"line_start":339,"line_end":339,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573541,"byte_end":573544,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ let parser = le_u8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573545,"byte_end":573589,"line_start":341,"line_end":341,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573590,"byte_end":573593,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573594,"byte_end":573669,"line_start":343,"line_end":343,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573670,"byte_end":573741,"line_start":344,"line_end":344,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573742,"byte_end":573749,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":573750,"byte_end":573759,"line_start":346,"line_end":346,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2077},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574618,"byte_end":574624,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::streaming::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574106,"byte_end":574162,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574163,"byte_end":574166,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574167,"byte_end":574263,"line_start":363,"line_end":363,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574264,"byte_end":574267,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574268,"byte_end":574279,"line_start":365,"line_end":365,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574280,"byte_end":574327,"line_start":366,"line_end":366,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574328,"byte_end":574367,"line_start":367,"line_end":367,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574368,"byte_end":574371,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574372,"byte_end":574394,"line_start":369,"line_end":369,"column_start":1,"column_end":23}},{"value":"/   le_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574395,"byte_end":574431,"line_start":370,"line_end":370,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574432,"byte_end":574438,"line_start":371,"line_end":371,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574439,"byte_end":574442,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574443,"byte_end":574516,"line_start":373,"line_end":373,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574517,"byte_end":574592,"line_start":374,"line_end":374,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574593,"byte_end":574600,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":574601,"byte_end":574610,"line_start":376,"line_end":376,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2080},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575581,"byte_end":575587,"line_start":410,"line_end":410,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::streaming::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575063,"byte_end":575119,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575120,"byte_end":575123,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575124,"byte_end":575220,"line_start":396,"line_end":396,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575221,"byte_end":575224,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575225,"byte_end":575236,"line_start":398,"line_end":398,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575237,"byte_end":575284,"line_start":399,"line_end":399,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575285,"byte_end":575324,"line_start":400,"line_end":400,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575325,"byte_end":575328,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575329,"byte_end":575351,"line_start":402,"line_end":402,"column_start":1,"column_end":23}},{"value":"/   le_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575352,"byte_end":575388,"line_start":403,"line_end":403,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575389,"byte_end":575395,"line_start":404,"line_end":404,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575396,"byte_end":575399,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575400,"byte_end":575479,"line_start":406,"line_end":406,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575480,"byte_end":575555,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575556,"byte_end":575563,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":575564,"byte_end":575573,"line_start":409,"line_end":409,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2083},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576550,"byte_end":576556,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::streaming::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576026,"byte_end":576082,"line_start":427,"line_end":427,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576083,"byte_end":576086,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576087,"byte_end":576183,"line_start":429,"line_end":429,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576184,"byte_end":576187,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576188,"byte_end":576199,"line_start":431,"line_end":431,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576200,"byte_end":576247,"line_start":432,"line_end":432,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576248,"byte_end":576287,"line_start":433,"line_end":433,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576288,"byte_end":576291,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576292,"byte_end":576314,"line_start":435,"line_end":435,"column_start":1,"column_end":23}},{"value":"/   le_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576315,"byte_end":576351,"line_start":436,"line_end":436,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576352,"byte_end":576358,"line_start":437,"line_end":437,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576359,"byte_end":576362,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576363,"byte_end":576448,"line_start":439,"line_end":439,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576449,"byte_end":576524,"line_start":440,"line_end":440,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576525,"byte_end":576532,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576533,"byte_end":576542,"line_start":442,"line_end":442,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2086},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577543,"byte_end":577549,"line_start":476,"line_end":476,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::streaming::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":576995,"byte_end":577051,"line_start":460,"line_end":460,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577052,"byte_end":577055,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577056,"byte_end":577152,"line_start":462,"line_end":462,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577153,"byte_end":577156,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577157,"byte_end":577168,"line_start":464,"line_end":464,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577169,"byte_end":577216,"line_start":465,"line_end":465,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577217,"byte_end":577256,"line_start":466,"line_end":466,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577257,"byte_end":577260,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577261,"byte_end":577283,"line_start":468,"line_end":468,"column_start":1,"column_end":23}},{"value":"/   le_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577284,"byte_end":577320,"line_start":469,"line_end":469,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577321,"byte_end":577327,"line_start":470,"line_end":470,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577328,"byte_end":577331,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577332,"byte_end":577441,"line_start":472,"line_end":472,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577442,"byte_end":577517,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577518,"byte_end":577525,"line_start":474,"line_end":474,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577526,"byte_end":577535,"line_start":475,"line_end":475,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2089},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578608,"byte_end":578615,"line_start":510,"line_end":510,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::streaming::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":577988,"byte_end":578045,"line_start":493,"line_end":493,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578046,"byte_end":578049,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578050,"byte_end":578146,"line_start":495,"line_end":495,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578147,"byte_end":578150,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578151,"byte_end":578162,"line_start":497,"line_end":497,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578163,"byte_end":578210,"line_start":498,"line_end":498,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578211,"byte_end":578251,"line_start":499,"line_end":499,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578252,"byte_end":578255,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578256,"byte_end":578278,"line_start":501,"line_end":501,"column_start":1,"column_end":23}},{"value":"/   le_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578279,"byte_end":578316,"line_start":502,"line_end":502,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578317,"byte_end":578323,"line_start":503,"line_end":503,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578324,"byte_end":578327,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578328,"byte_end":578485,"line_start":505,"line_end":505,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578486,"byte_end":578562,"line_start":506,"line_end":506,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578563,"byte_end":578570,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578571,"byte_end":578580,"line_start":508,"line_end":508,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":578581,"byte_end":578600,"line_start":509,"line_end":509,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2092},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579524,"byte_end":579529,"line_start":540,"line_end":540,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::streaming::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579058,"byte_end":579097,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579098,"byte_end":579101,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579102,"byte_end":579198,"line_start":529,"line_end":529,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579199,"byte_end":579210,"line_start":530,"line_end":530,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579211,"byte_end":579258,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579259,"byte_end":579297,"line_start":532,"line_end":532,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579298,"byte_end":579301,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ let parser = le_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579302,"byte_end":579346,"line_start":534,"line_end":534,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579347,"byte_end":579350,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579351,"byte_end":579426,"line_start":536,"line_end":536,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579427,"byte_end":579498,"line_start":537,"line_end":537,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579499,"byte_end":579506,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579507,"byte_end":579516,"line_start":539,"line_end":539,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2095},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580204,"byte_end":580210,"line_start":563,"line_end":563,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::streaming::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579694,"byte_end":579748,"line_start":547,"line_end":547,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579749,"byte_end":579752,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579753,"byte_end":579849,"line_start":549,"line_end":549,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579850,"byte_end":579853,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579854,"byte_end":579865,"line_start":551,"line_end":551,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579866,"byte_end":579913,"line_start":552,"line_end":552,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579914,"byte_end":579953,"line_start":553,"line_end":553,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579954,"byte_end":579957,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579958,"byte_end":579980,"line_start":555,"line_end":555,"column_start":1,"column_end":23}},{"value":"/   le_i16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":579981,"byte_end":580017,"line_start":556,"line_end":556,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580018,"byte_end":580024,"line_start":557,"line_end":557,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580025,"byte_end":580028,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580029,"byte_end":580102,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580103,"byte_end":580178,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580179,"byte_end":580186,"line_start":561,"line_end":561,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580187,"byte_end":580196,"line_start":562,"line_end":562,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2098},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580894,"byte_end":580900,"line_start":586,"line_end":586,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::streaming::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580378,"byte_end":580432,"line_start":570,"line_end":570,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580433,"byte_end":580436,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580437,"byte_end":580533,"line_start":572,"line_end":572,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580534,"byte_end":580537,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580538,"byte_end":580549,"line_start":574,"line_end":574,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580550,"byte_end":580597,"line_start":575,"line_end":575,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580598,"byte_end":580637,"line_start":576,"line_end":576,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580638,"byte_end":580641,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580642,"byte_end":580664,"line_start":578,"line_end":578,"column_start":1,"column_end":23}},{"value":"/   le_i24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580665,"byte_end":580701,"line_start":579,"line_end":579,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580702,"byte_end":580708,"line_start":580,"line_end":580,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580709,"byte_end":580712,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580713,"byte_end":580792,"line_start":582,"line_end":582,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580793,"byte_end":580868,"line_start":583,"line_end":583,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580869,"byte_end":580876,"line_start":584,"line_end":584,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":580877,"byte_end":580886,"line_start":585,"line_end":585,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2101},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581740,"byte_end":581746,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::streaming::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581218,"byte_end":581272,"line_start":598,"line_end":598,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581273,"byte_end":581276,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581277,"byte_end":581373,"line_start":600,"line_end":600,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581374,"byte_end":581377,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581378,"byte_end":581389,"line_start":602,"line_end":602,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581390,"byte_end":581437,"line_start":603,"line_end":603,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581438,"byte_end":581477,"line_start":604,"line_end":604,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581478,"byte_end":581481,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581482,"byte_end":581504,"line_start":606,"line_end":606,"column_start":1,"column_end":23}},{"value":"/   le_i32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581505,"byte_end":581541,"line_start":607,"line_end":607,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581542,"byte_end":581548,"line_start":608,"line_end":608,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581549,"byte_end":581552,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581553,"byte_end":581638,"line_start":610,"line_end":610,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581639,"byte_end":581714,"line_start":611,"line_end":611,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581715,"byte_end":581722,"line_start":612,"line_end":612,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581723,"byte_end":581732,"line_start":613,"line_end":613,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2104},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582460,"byte_end":582466,"line_start":637,"line_end":637,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::streaming::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581914,"byte_end":581968,"line_start":621,"line_end":621,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581969,"byte_end":581972,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":581973,"byte_end":582069,"line_start":623,"line_end":623,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582070,"byte_end":582073,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582074,"byte_end":582085,"line_start":625,"line_end":625,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582086,"byte_end":582133,"line_start":626,"line_end":626,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582134,"byte_end":582173,"line_start":627,"line_end":627,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582174,"byte_end":582177,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582178,"byte_end":582200,"line_start":629,"line_end":629,"column_start":1,"column_end":23}},{"value":"/   le_i64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582201,"byte_end":582237,"line_start":630,"line_end":630,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582238,"byte_end":582244,"line_start":631,"line_end":631,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582245,"byte_end":582248,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582249,"byte_end":582358,"line_start":633,"line_end":633,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582359,"byte_end":582434,"line_start":634,"line_end":634,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582435,"byte_end":582442,"line_start":635,"line_end":635,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582443,"byte_end":582452,"line_start":636,"line_end":636,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2107},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583252,"byte_end":583259,"line_start":661,"line_end":661,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::streaming::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582634,"byte_end":582689,"line_start":644,"line_end":644,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582690,"byte_end":582693,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582694,"byte_end":582790,"line_start":646,"line_end":646,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582791,"byte_end":582794,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582795,"byte_end":582806,"line_start":648,"line_end":648,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582807,"byte_end":582854,"line_start":649,"line_end":649,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582855,"byte_end":582895,"line_start":650,"line_end":650,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582896,"byte_end":582899,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582900,"byte_end":582922,"line_start":652,"line_end":652,"column_start":1,"column_end":23}},{"value":"/   le_i128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582923,"byte_end":582960,"line_start":653,"line_end":653,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582961,"byte_end":582967,"line_start":654,"line_end":654,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582968,"byte_end":582971,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":582972,"byte_end":583129,"line_start":656,"line_end":656,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583130,"byte_end":583206,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583207,"byte_end":583214,"line_start":658,"line_end":658,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583215,"byte_end":583224,"line_start":659,"line_end":659,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583225,"byte_end":583244,"line_start":660,"line_end":660,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2110},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584005,"byte_end":584007,"line_start":685,"line_end":685,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::streaming::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583430,"byte_end":583471,"line_start":668,"line_end":668,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583472,"byte_end":583475,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583476,"byte_end":583534,"line_start":670,"line_end":670,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583535,"byte_end":583631,"line_start":671,"line_end":671,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583632,"byte_end":583643,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583644,"byte_end":583691,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583692,"byte_end":583720,"line_start":674,"line_end":674,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583721,"byte_end":583756,"line_start":675,"line_end":675,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583757,"byte_end":583760,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583761,"byte_end":583783,"line_start":677,"line_end":677,"column_start":1,"column_end":23}},{"value":"/   u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583784,"byte_end":583816,"line_start":678,"line_end":678,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583817,"byte_end":583823,"line_start":679,"line_end":679,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583824,"byte_end":583827,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583828,"byte_end":583907,"line_start":681,"line_end":681,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583908,"byte_end":583979,"line_start":682,"line_end":682,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583980,"byte_end":583987,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":583988,"byte_end":583997,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2113},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585313,"byte_end":585316,"line_start":725,"line_end":725,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::streaming::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584341,"byte_end":584383,"line_start":699,"line_end":699,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584384,"byte_end":584387,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584388,"byte_end":584467,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584468,"byte_end":584545,"line_start":702,"line_end":702,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584546,"byte_end":584642,"line_start":703,"line_end":703,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584643,"byte_end":584646,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584647,"byte_end":584658,"line_start":705,"line_end":705,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584659,"byte_end":584706,"line_start":706,"line_end":706,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584707,"byte_end":584735,"line_start":707,"line_end":707,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584736,"byte_end":584772,"line_start":708,"line_end":708,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584773,"byte_end":584776,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584777,"byte_end":584799,"line_start":710,"line_end":710,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584800,"byte_end":584863,"line_start":711,"line_end":711,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584864,"byte_end":584870,"line_start":712,"line_end":712,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584871,"byte_end":584874,"line_start":713,"line_end":713,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584875,"byte_end":584952,"line_start":714,"line_end":714,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":584953,"byte_end":585028,"line_start":715,"line_end":715,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585029,"byte_end":585032,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585033,"byte_end":585055,"line_start":717,"line_end":717,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585056,"byte_end":585122,"line_start":718,"line_end":718,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585123,"byte_end":585129,"line_start":719,"line_end":719,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585130,"byte_end":585133,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585134,"byte_end":585211,"line_start":721,"line_end":721,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585212,"byte_end":585287,"line_start":722,"line_end":722,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585288,"byte_end":585295,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585296,"byte_end":585305,"line_start":724,"line_end":724,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2116},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586745,"byte_end":586748,"line_start":764,"line_end":764,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::streaming::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585767,"byte_end":585808,"line_start":739,"line_end":739,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585809,"byte_end":585812,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585813,"byte_end":585892,"line_start":741,"line_end":741,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585893,"byte_end":585970,"line_start":742,"line_end":742,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":585971,"byte_end":586067,"line_start":743,"line_end":743,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586068,"byte_end":586079,"line_start":744,"line_end":744,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586080,"byte_end":586127,"line_start":745,"line_end":745,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586128,"byte_end":586156,"line_start":746,"line_end":746,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586157,"byte_end":586193,"line_start":747,"line_end":747,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586194,"byte_end":586197,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586198,"byte_end":586220,"line_start":749,"line_end":749,"column_start":1,"column_end":23}},{"value":"/   u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586221,"byte_end":586283,"line_start":750,"line_end":750,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586284,"byte_end":586290,"line_start":751,"line_end":751,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586291,"byte_end":586294,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586295,"byte_end":586378,"line_start":753,"line_end":753,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586379,"byte_end":586454,"line_start":754,"line_end":754,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586455,"byte_end":586458,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586459,"byte_end":586481,"line_start":756,"line_end":756,"column_start":1,"column_end":23}},{"value":"/   u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586482,"byte_end":586548,"line_start":757,"line_end":757,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586549,"byte_end":586555,"line_start":758,"line_end":758,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586556,"byte_end":586559,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586560,"byte_end":586643,"line_start":760,"line_end":760,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586644,"byte_end":586719,"line_start":761,"line_end":761,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586720,"byte_end":586727,"line_start":762,"line_end":762,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":586728,"byte_end":586737,"line_start":763,"line_end":763,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2119},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588190,"byte_end":588193,"line_start":803,"line_end":803,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::streaming::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587199,"byte_end":587240,"line_start":778,"line_end":778,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587241,"byte_end":587244,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587245,"byte_end":587324,"line_start":780,"line_end":780,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587325,"byte_end":587402,"line_start":781,"line_end":781,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587403,"byte_end":587499,"line_start":782,"line_end":782,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587500,"byte_end":587511,"line_start":783,"line_end":783,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587512,"byte_end":587559,"line_start":784,"line_end":784,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587560,"byte_end":587588,"line_start":785,"line_end":785,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587589,"byte_end":587625,"line_start":786,"line_end":786,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587626,"byte_end":587629,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587630,"byte_end":587652,"line_start":788,"line_end":788,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587653,"byte_end":587716,"line_start":789,"line_end":789,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587717,"byte_end":587723,"line_start":790,"line_end":790,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587724,"byte_end":587727,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587728,"byte_end":587817,"line_start":792,"line_end":792,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587818,"byte_end":587893,"line_start":793,"line_end":793,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587894,"byte_end":587897,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587898,"byte_end":587920,"line_start":795,"line_end":795,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587921,"byte_end":587987,"line_start":796,"line_end":796,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587988,"byte_end":587994,"line_start":797,"line_end":797,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587995,"byte_end":587998,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":587999,"byte_end":588088,"line_start":799,"line_end":799,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588089,"byte_end":588164,"line_start":800,"line_end":800,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588165,"byte_end":588172,"line_start":801,"line_end":801,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588173,"byte_end":588182,"line_start":802,"line_end":802,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2122},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589683,"byte_end":589686,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::streaming::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588644,"byte_end":588685,"line_start":817,"line_end":817,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588686,"byte_end":588689,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588690,"byte_end":588769,"line_start":819,"line_end":819,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588770,"byte_end":588847,"line_start":820,"line_end":820,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588848,"byte_end":588944,"line_start":821,"line_end":821,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588945,"byte_end":588956,"line_start":822,"line_end":822,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":588957,"byte_end":589004,"line_start":823,"line_end":823,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589005,"byte_end":589033,"line_start":824,"line_end":824,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589034,"byte_end":589070,"line_start":825,"line_end":825,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589071,"byte_end":589074,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589075,"byte_end":589097,"line_start":827,"line_end":827,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589098,"byte_end":589161,"line_start":828,"line_end":828,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589162,"byte_end":589168,"line_start":829,"line_end":829,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589169,"byte_end":589172,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589173,"byte_end":589286,"line_start":831,"line_end":831,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589287,"byte_end":589362,"line_start":832,"line_end":832,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589363,"byte_end":589366,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589367,"byte_end":589389,"line_start":834,"line_end":834,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589390,"byte_end":589456,"line_start":835,"line_end":835,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589457,"byte_end":589463,"line_start":836,"line_end":836,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589464,"byte_end":589467,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589468,"byte_end":589581,"line_start":838,"line_end":838,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589582,"byte_end":589657,"line_start":839,"line_end":839,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589658,"byte_end":589665,"line_start":840,"line_end":840,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":589666,"byte_end":589675,"line_start":841,"line_end":841,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2125},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591306,"byte_end":591310,"line_start":882,"line_end":882,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::streaming::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590137,"byte_end":590179,"line_start":856,"line_end":856,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590180,"byte_end":590183,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590184,"byte_end":590264,"line_start":858,"line_end":858,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590265,"byte_end":590343,"line_start":859,"line_end":859,"column_start":1,"column_end":79}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590344,"byte_end":590440,"line_start":860,"line_end":860,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590441,"byte_end":590452,"line_start":861,"line_end":861,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590453,"byte_end":590500,"line_start":862,"line_end":862,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590501,"byte_end":590529,"line_start":863,"line_end":863,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590530,"byte_end":590567,"line_start":864,"line_end":864,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590568,"byte_end":590571,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590572,"byte_end":590595,"line_start":866,"line_end":866,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590596,"byte_end":590660,"line_start":867,"line_end":867,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590661,"byte_end":590667,"line_start":868,"line_end":868,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590668,"byte_end":590671,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590672,"byte_end":590834,"line_start":870,"line_end":870,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590835,"byte_end":590912,"line_start":871,"line_end":871,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590913,"byte_end":590916,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590917,"byte_end":590940,"line_start":873,"line_end":873,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":590941,"byte_end":591008,"line_start":874,"line_end":874,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591009,"byte_end":591015,"line_start":875,"line_end":875,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591016,"byte_end":591019,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591020,"byte_end":591182,"line_start":877,"line_end":877,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591183,"byte_end":591260,"line_start":878,"line_end":878,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591261,"byte_end":591268,"line_start":879,"line_end":879,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591269,"byte_end":591278,"line_start":880,"line_end":880,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591279,"byte_end":591298,"line_start":881,"line_end":881,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592338,"byte_end":592340,"line_start":913,"line_end":913,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::streaming::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591766,"byte_end":591804,"line_start":896,"line_end":896,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591805,"byte_end":591808,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591809,"byte_end":591867,"line_start":898,"line_end":898,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591868,"byte_end":591964,"line_start":899,"line_end":899,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591965,"byte_end":591976,"line_start":900,"line_end":900,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":591977,"byte_end":592024,"line_start":901,"line_end":901,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592025,"byte_end":592053,"line_start":902,"line_end":902,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i8;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592054,"byte_end":592089,"line_start":903,"line_end":903,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592090,"byte_end":592093,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592094,"byte_end":592116,"line_start":905,"line_end":905,"column_start":1,"column_end":23}},{"value":"/   i8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592117,"byte_end":592149,"line_start":906,"line_end":906,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592150,"byte_end":592156,"line_start":907,"line_end":907,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592157,"byte_end":592160,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592161,"byte_end":592240,"line_start":909,"line_end":909,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592241,"byte_end":592312,"line_start":910,"line_end":910,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592313,"byte_end":592320,"line_start":911,"line_end":911,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592321,"byte_end":592330,"line_start":912,"line_end":912,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2131},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593458,"byte_end":593461,"line_start":945,"line_end":945,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::streaming::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592494,"byte_end":592532,"line_start":920,"line_end":920,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592533,"byte_end":592536,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592537,"byte_end":592616,"line_start":922,"line_end":922,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592617,"byte_end":592694,"line_start":923,"line_end":923,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592695,"byte_end":592791,"line_start":924,"line_end":924,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592792,"byte_end":592803,"line_start":925,"line_end":925,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592804,"byte_end":592851,"line_start":926,"line_end":926,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592852,"byte_end":592880,"line_start":927,"line_end":927,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i16;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592881,"byte_end":592917,"line_start":928,"line_end":928,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592918,"byte_end":592921,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592922,"byte_end":592944,"line_start":930,"line_end":930,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":592945,"byte_end":593008,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593009,"byte_end":593015,"line_start":932,"line_end":932,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593016,"byte_end":593019,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593020,"byte_end":593097,"line_start":934,"line_end":934,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593098,"byte_end":593173,"line_start":935,"line_end":935,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593174,"byte_end":593177,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593178,"byte_end":593200,"line_start":937,"line_end":937,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593201,"byte_end":593267,"line_start":938,"line_end":938,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593268,"byte_end":593274,"line_start":939,"line_end":939,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593275,"byte_end":593278,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593279,"byte_end":593356,"line_start":941,"line_end":941,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593357,"byte_end":593432,"line_start":942,"line_end":942,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593433,"byte_end":593440,"line_start":943,"line_end":943,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593441,"byte_end":593450,"line_start":944,"line_end":944,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2134},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594888,"byte_end":594891,"line_start":984,"line_end":984,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::streaming::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593912,"byte_end":593950,"line_start":959,"line_end":959,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593951,"byte_end":593954,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":593955,"byte_end":594034,"line_start":961,"line_end":961,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594035,"byte_end":594112,"line_start":962,"line_end":962,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594113,"byte_end":594209,"line_start":963,"line_end":963,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594210,"byte_end":594221,"line_start":964,"line_end":964,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594222,"byte_end":594269,"line_start":965,"line_end":965,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594270,"byte_end":594298,"line_start":966,"line_end":966,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i24;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594299,"byte_end":594335,"line_start":967,"line_end":967,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594336,"byte_end":594339,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594340,"byte_end":594362,"line_start":969,"line_end":969,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594363,"byte_end":594426,"line_start":970,"line_end":970,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594427,"byte_end":594433,"line_start":971,"line_end":971,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594434,"byte_end":594437,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594438,"byte_end":594521,"line_start":973,"line_end":973,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594522,"byte_end":594597,"line_start":974,"line_end":974,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594598,"byte_end":594601,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594602,"byte_end":594624,"line_start":976,"line_end":976,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594625,"byte_end":594691,"line_start":977,"line_end":977,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594692,"byte_end":594698,"line_start":978,"line_end":978,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594699,"byte_end":594702,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594703,"byte_end":594786,"line_start":980,"line_end":980,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594787,"byte_end":594862,"line_start":981,"line_end":981,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594863,"byte_end":594870,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":594871,"byte_end":594880,"line_start":983,"line_end":983,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2137},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596330,"byte_end":596333,"line_start":1023,"line_end":1023,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::streaming::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595342,"byte_end":595380,"line_start":998,"line_end":998,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595381,"byte_end":595384,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595385,"byte_end":595464,"line_start":1000,"line_end":1000,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595465,"byte_end":595542,"line_start":1001,"line_end":1001,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595543,"byte_end":595639,"line_start":1002,"line_end":1002,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595640,"byte_end":595651,"line_start":1003,"line_end":1003,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595652,"byte_end":595699,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595700,"byte_end":595728,"line_start":1005,"line_end":1005,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595729,"byte_end":595765,"line_start":1006,"line_end":1006,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595766,"byte_end":595769,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595770,"byte_end":595792,"line_start":1008,"line_end":1008,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595793,"byte_end":595856,"line_start":1009,"line_end":1009,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595857,"byte_end":595863,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595864,"byte_end":595867,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595868,"byte_end":595957,"line_start":1012,"line_end":1012,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":595958,"byte_end":596033,"line_start":1013,"line_end":1013,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596034,"byte_end":596037,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596038,"byte_end":596060,"line_start":1015,"line_end":1015,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596061,"byte_end":596127,"line_start":1016,"line_end":1016,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596128,"byte_end":596134,"line_start":1017,"line_end":1017,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596135,"byte_end":596138,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596139,"byte_end":596228,"line_start":1019,"line_end":1019,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596229,"byte_end":596304,"line_start":1020,"line_end":1020,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596305,"byte_end":596312,"line_start":1021,"line_end":1021,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596313,"byte_end":596322,"line_start":1022,"line_end":1022,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2140},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597820,"byte_end":597823,"line_start":1062,"line_end":1062,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::streaming::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596784,"byte_end":596822,"line_start":1037,"line_end":1037,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596823,"byte_end":596826,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596827,"byte_end":596906,"line_start":1039,"line_end":1039,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596907,"byte_end":596984,"line_start":1040,"line_end":1040,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":596985,"byte_end":597081,"line_start":1041,"line_end":1041,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597082,"byte_end":597093,"line_start":1042,"line_end":1042,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597094,"byte_end":597141,"line_start":1043,"line_end":1043,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597142,"byte_end":597170,"line_start":1044,"line_end":1044,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597171,"byte_end":597207,"line_start":1045,"line_end":1045,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597208,"byte_end":597211,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597212,"byte_end":597234,"line_start":1047,"line_end":1047,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597235,"byte_end":597298,"line_start":1048,"line_end":1048,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597299,"byte_end":597305,"line_start":1049,"line_end":1049,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597306,"byte_end":597309,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597310,"byte_end":597423,"line_start":1051,"line_end":1051,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597424,"byte_end":597499,"line_start":1052,"line_end":1052,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597500,"byte_end":597503,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597504,"byte_end":597526,"line_start":1054,"line_end":1054,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597527,"byte_end":597593,"line_start":1055,"line_end":1055,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597594,"byte_end":597600,"line_start":1056,"line_end":1056,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597601,"byte_end":597604,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597605,"byte_end":597718,"line_start":1058,"line_end":1058,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597719,"byte_end":597794,"line_start":1059,"line_end":1059,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597795,"byte_end":597802,"line_start":1060,"line_end":1060,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":597803,"byte_end":597812,"line_start":1061,"line_end":1061,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2143},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599440,"byte_end":599444,"line_start":1102,"line_end":1102,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::streaming::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598274,"byte_end":598313,"line_start":1076,"line_end":1076,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598314,"byte_end":598317,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598318,"byte_end":598398,"line_start":1078,"line_end":1078,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598399,"byte_end":598477,"line_start":1079,"line_end":1079,"column_start":1,"column_end":79}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598478,"byte_end":598574,"line_start":1080,"line_end":1080,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598575,"byte_end":598586,"line_start":1081,"line_end":1081,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598587,"byte_end":598634,"line_start":1082,"line_end":1082,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598635,"byte_end":598663,"line_start":1083,"line_end":1083,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i128;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598664,"byte_end":598701,"line_start":1084,"line_end":1084,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598702,"byte_end":598705,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598706,"byte_end":598729,"line_start":1086,"line_end":1086,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598730,"byte_end":598794,"line_start":1087,"line_end":1087,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598795,"byte_end":598801,"line_start":1088,"line_end":1088,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598802,"byte_end":598805,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598806,"byte_end":598968,"line_start":1090,"line_end":1090,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":598969,"byte_end":599046,"line_start":1091,"line_end":1091,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599047,"byte_end":599050,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599051,"byte_end":599074,"line_start":1093,"line_end":1093,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599075,"byte_end":599142,"line_start":1094,"line_end":1094,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599143,"byte_end":599149,"line_start":1095,"line_end":1095,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599150,"byte_end":599153,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599154,"byte_end":599316,"line_start":1097,"line_end":1097,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599317,"byte_end":599394,"line_start":1098,"line_end":1098,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599395,"byte_end":599402,"line_start":1099,"line_end":1099,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599403,"byte_end":599412,"line_start":1100,"line_end":1100,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599413,"byte_end":599432,"line_start":1101,"line_end":1101,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2146},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600416,"byte_end":600422,"line_start":1131,"line_end":1131,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::streaming::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599900,"byte_end":599958,"line_start":1116,"line_end":1116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599959,"byte_end":599962,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":599963,"byte_end":600059,"line_start":1118,"line_end":1118,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600060,"byte_end":600071,"line_start":1119,"line_end":1119,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600072,"byte_end":600119,"line_start":1120,"line_end":1120,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600120,"byte_end":600159,"line_start":1121,"line_end":1121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600160,"byte_end":600163,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600164,"byte_end":600186,"line_start":1123,"line_end":1123,"column_start":1,"column_end":23}},{"value":"/   be_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600187,"byte_end":600223,"line_start":1124,"line_end":1124,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600224,"byte_end":600230,"line_start":1125,"line_end":1125,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600231,"byte_end":600234,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600235,"byte_end":600315,"line_start":1127,"line_end":1127,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600316,"byte_end":600390,"line_start":1128,"line_end":1128,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600391,"byte_end":600398,"line_start":1129,"line_end":1129,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600399,"byte_end":600408,"line_start":1130,"line_end":1130,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2149},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601186,"byte_end":601192,"line_start":1156,"line_end":1156,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::streaming::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600650,"byte_end":600708,"line_start":1141,"line_end":1141,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600709,"byte_end":600712,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600713,"byte_end":600809,"line_start":1143,"line_end":1143,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600810,"byte_end":600821,"line_start":1144,"line_end":1144,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600822,"byte_end":600869,"line_start":1145,"line_end":1145,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600870,"byte_end":600909,"line_start":1146,"line_end":1146,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600910,"byte_end":600913,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600914,"byte_end":600936,"line_start":1148,"line_end":1148,"column_start":1,"column_end":23}},{"value":"/   be_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600937,"byte_end":600973,"line_start":1149,"line_end":1149,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600974,"byte_end":600980,"line_start":1150,"line_end":1150,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600981,"byte_end":600984,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":600985,"byte_end":601085,"line_start":1152,"line_end":1152,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601086,"byte_end":601160,"line_start":1153,"line_end":1153,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601161,"byte_end":601168,"line_start":1154,"line_end":1154,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601169,"byte_end":601178,"line_start":1155,"line_end":1155,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2152},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601935,"byte_end":601941,"line_start":1181,"line_end":1181,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::streaming::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601420,"byte_end":601481,"line_start":1166,"line_end":1166,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601482,"byte_end":601485,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601486,"byte_end":601582,"line_start":1168,"line_end":1168,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601583,"byte_end":601594,"line_start":1169,"line_end":1169,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601595,"byte_end":601642,"line_start":1170,"line_end":1170,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601643,"byte_end":601682,"line_start":1171,"line_end":1171,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601683,"byte_end":601686,"line_start":1172,"line_end":1172,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601687,"byte_end":601709,"line_start":1173,"line_end":1173,"column_start":1,"column_end":23}},{"value":"/   le_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601710,"byte_end":601746,"line_start":1174,"line_end":1174,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601747,"byte_end":601753,"line_start":1175,"line_end":1175,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601754,"byte_end":601757,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601758,"byte_end":601834,"line_start":1177,"line_end":1177,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601835,"byte_end":601909,"line_start":1178,"line_end":1178,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601910,"byte_end":601917,"line_start":1179,"line_end":1179,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":601918,"byte_end":601927,"line_start":1180,"line_end":1180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2155},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602713,"byte_end":602719,"line_start":1206,"line_end":1206,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::streaming::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602169,"byte_end":602230,"line_start":1191,"line_end":1191,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602231,"byte_end":602234,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602235,"byte_end":602331,"line_start":1193,"line_end":1193,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602332,"byte_end":602343,"line_start":1194,"line_end":1194,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602344,"byte_end":602391,"line_start":1195,"line_end":1195,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602392,"byte_end":602431,"line_start":1196,"line_end":1196,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602432,"byte_end":602435,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602436,"byte_end":602458,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/   le_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602459,"byte_end":602495,"line_start":1199,"line_end":1199,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602496,"byte_end":602502,"line_start":1200,"line_end":1200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602503,"byte_end":602506,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602507,"byte_end":602612,"line_start":1202,"line_end":1202,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602613,"byte_end":602687,"line_start":1203,"line_end":1203,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602688,"byte_end":602695,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602696,"byte_end":602705,"line_start":1205,"line_end":1205,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2158},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603910,"byte_end":603913,"line_start":1241,"line_end":1241,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::streaming::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602947,"byte_end":602992,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602993,"byte_end":602996,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":602997,"byte_end":603074,"line_start":1218,"line_end":1218,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603075,"byte_end":603150,"line_start":1219,"line_end":1219,"column_start":1,"column_end":76}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603151,"byte_end":603247,"line_start":1220,"line_end":1220,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603248,"byte_end":603259,"line_start":1221,"line_end":1221,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603260,"byte_end":603307,"line_start":1222,"line_end":1222,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603308,"byte_end":603336,"line_start":1223,"line_end":1223,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603337,"byte_end":603373,"line_start":1224,"line_end":1224,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603374,"byte_end":603377,"line_start":1225,"line_end":1225,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603378,"byte_end":603400,"line_start":1226,"line_end":1226,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603401,"byte_end":603464,"line_start":1227,"line_end":1227,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603465,"byte_end":603471,"line_start":1228,"line_end":1228,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603472,"byte_end":603475,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603476,"byte_end":603552,"line_start":1230,"line_end":1230,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603553,"byte_end":603627,"line_start":1231,"line_end":1231,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603628,"byte_end":603631,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603632,"byte_end":603654,"line_start":1233,"line_end":1233,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603655,"byte_end":603721,"line_start":1234,"line_end":1234,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603722,"byte_end":603728,"line_start":1235,"line_end":1235,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603729,"byte_end":603732,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603733,"byte_end":603809,"line_start":1237,"line_end":1237,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603810,"byte_end":603884,"line_start":1238,"line_end":1238,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603885,"byte_end":603892,"line_start":1239,"line_end":1239,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":603893,"byte_end":603902,"line_start":1240,"line_end":1240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2161},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605376,"byte_end":605379,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::streaming::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604364,"byte_end":604410,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604411,"byte_end":604414,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604415,"byte_end":604492,"line_start":1257,"line_end":1257,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604493,"byte_end":604568,"line_start":1258,"line_end":1258,"column_start":1,"column_end":76}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604569,"byte_end":604665,"line_start":1259,"line_end":1259,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604666,"byte_end":604677,"line_start":1260,"line_end":1260,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604678,"byte_end":604725,"line_start":1261,"line_end":1261,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604726,"byte_end":604754,"line_start":1262,"line_end":1262,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f64;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604755,"byte_end":604791,"line_start":1263,"line_end":1263,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604792,"byte_end":604795,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604796,"byte_end":604818,"line_start":1265,"line_end":1265,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604819,"byte_end":604882,"line_start":1266,"line_end":1266,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604883,"byte_end":604889,"line_start":1267,"line_end":1267,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604890,"byte_end":604893,"line_start":1268,"line_end":1268,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604894,"byte_end":604994,"line_start":1269,"line_end":1269,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":604995,"byte_end":605069,"line_start":1270,"line_end":1270,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605070,"byte_end":605073,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605074,"byte_end":605096,"line_start":1272,"line_end":1272,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605097,"byte_end":605163,"line_start":1273,"line_end":1273,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605164,"byte_end":605170,"line_start":1274,"line_end":1274,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605171,"byte_end":605174,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605175,"byte_end":605275,"line_start":1276,"line_end":1276,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605276,"byte_end":605350,"line_start":1277,"line_end":1277,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605351,"byte_end":605358,"line_start":1278,"line_end":1278,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605359,"byte_end":605368,"line_start":1279,"line_end":1279,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2164},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606359,"byte_end":606366,"line_start":1310,"line_end":1310,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::streaming::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605830,"byte_end":605867,"line_start":1294,"line_end":1294,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605868,"byte_end":605871,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605872,"byte_end":605968,"line_start":1296,"line_end":1296,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605969,"byte_end":605980,"line_start":1297,"line_end":1297,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":605981,"byte_end":606028,"line_start":1298,"line_end":1298,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::hex_u32;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606029,"byte_end":606069,"line_start":1299,"line_end":1299,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606070,"byte_end":606073,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606074,"byte_end":606096,"line_start":1301,"line_end":1301,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606097,"byte_end":606113,"line_start":1302,"line_end":1302,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606114,"byte_end":606120,"line_start":1303,"line_end":1303,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606121,"byte_end":606124,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606125,"byte_end":606183,"line_start":1305,"line_end":1305,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606184,"byte_end":606253,"line_start":1306,"line_end":1306,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606254,"byte_end":606333,"line_start":1307,"line_end":1307,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606334,"byte_end":606341,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606342,"byte_end":606351,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":5409},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607573,"byte_end":607588,"line_start":1352,"line_end":1352,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::streaming::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the corresponding part of the input.","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the corresponding part of the input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606891,"byte_end":606993,"line_start":1333,"line_end":1333,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606994,"byte_end":606997,"line_start":1334,"line_end":1334,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":606998,"byte_end":607097,"line_start":1335,"line_end":1335,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607098,"byte_end":607101,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607102,"byte_end":607113,"line_start":1337,"line_end":1337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607114,"byte_end":607161,"line_start":1338,"line_end":1338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::recognize_float;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607162,"byte_end":607210,"line_start":1339,"line_end":1339,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607211,"byte_end":607214,"line_start":1340,"line_end":1340,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607215,"byte_end":607237,"line_start":1341,"line_end":1341,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607238,"byte_end":607262,"line_start":1342,"line_end":1342,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607263,"byte_end":607269,"line_start":1343,"line_end":1343,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607270,"byte_end":607273,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607274,"byte_end":607327,"line_start":1345,"line_end":1345,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607328,"byte_end":607385,"line_start":1346,"line_end":1346,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607386,"byte_end":607441,"line_start":1347,"line_end":1347,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607442,"byte_end":607515,"line_start":1348,"line_end":1348,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607516,"byte_end":607523,"line_start":1349,"line_end":1349,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607524,"byte_end":607548,"line_start":1350,"line_end":1350,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":607549,"byte_end":607565,"line_start":1351,"line_end":1351,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608823,"byte_end":608828,"line_start":1394,"line_end":1394,"column_start":8,"column_end":13},"name":"float","qualname":"::number::streaming::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f32>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f32`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f32`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608211,"byte_end":608285,"line_start":1377,"line_end":1377,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608286,"byte_end":608289,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608290,"byte_end":608389,"line_start":1379,"line_end":1379,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608390,"byte_end":608401,"line_start":1380,"line_end":1380,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608402,"byte_end":608449,"line_start":1381,"line_end":1381,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::float;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608450,"byte_end":608488,"line_start":1382,"line_end":1382,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608489,"byte_end":608492,"line_start":1383,"line_end":1383,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608493,"byte_end":608515,"line_start":1384,"line_end":1384,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608516,"byte_end":608530,"line_start":1385,"line_end":1385,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608531,"byte_end":608537,"line_start":1386,"line_end":1386,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608538,"byte_end":608541,"line_start":1387,"line_end":1387,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608542,"byte_end":608591,"line_start":1388,"line_end":1388,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608592,"byte_end":608644,"line_start":1389,"line_end":1389,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608645,"byte_end":608700,"line_start":1390,"line_end":1390,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608701,"byte_end":608774,"line_start":1391,"line_end":1391,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608775,"byte_end":608782,"line_start":1392,"line_end":1392,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":608783,"byte_end":608815,"line_start":1393,"line_end":1393,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":2171},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":611172,"byte_end":611178,"line_start":1465,"line_end":1465,"column_start":8,"column_end":14},"name":"double","qualname":"::number::streaming::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f64>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f64`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f64`.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610558,"byte_end":610632,"line_start":1448,"line_end":1448,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610633,"byte_end":610636,"line_start":1449,"line_end":1449,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610637,"byte_end":610736,"line_start":1450,"line_end":1450,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610737,"byte_end":610748,"line_start":1451,"line_end":1451,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610749,"byte_end":610796,"line_start":1452,"line_end":1452,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::double;","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610797,"byte_end":610836,"line_start":1453,"line_end":1453,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610837,"byte_end":610840,"line_start":1454,"line_end":1454,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610841,"byte_end":610863,"line_start":1455,"line_end":1455,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610864,"byte_end":610879,"line_start":1456,"line_end":1456,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610880,"byte_end":610886,"line_start":1457,"line_end":1457,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610887,"byte_end":610890,"line_start":1458,"line_end":1458,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610891,"byte_end":610940,"line_start":1459,"line_end":1459,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610941,"byte_end":610993,"line_start":1460,"line_end":1460,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":610994,"byte_end":611049,"line_start":1461,"line_end":1461,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":611050,"byte_end":611123,"line_start":1462,"line_end":1462,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":611124,"byte_end":611131,"line_start":1463,"line_end":1463,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/streaming.rs","byte_start":611132,"byte_end":611164,"line_start":1464,"line_end":1464,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5415},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493930,"byte_end":493933,"line_start":13,"line_end":13,"column_start":3,"column_end":6},"name":"Big","qualname":"::number::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":5414},"children":[],"decl_id":null,"docs":" Big endian\n","sig":null,"attributes":[{"value":"/ Big endian","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493913,"byte_end":493927,"line_start":12,"line_end":12,"column_start":3,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5417},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493957,"byte_end":493963,"line_start":15,"line_end":15,"column_start":3,"column_end":9},"name":"Little","qualname":"::number::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":5414},"children":[],"decl_id":null,"docs":" Little endian\n","sig":null,"attributes":[{"value":"/ Little endian","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493937,"byte_end":493954,"line_start":14,"line_end":14,"column_start":3,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5419},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":494006,"byte_end":494012,"line_start":17,"line_end":17,"column_start":3,"column_end":9},"name":"Native","qualname":"::number::Endianness::Native","value":"Endianness::Native","parent":{"krate":0,"index":5414},"children":[],"decl_id":null,"docs":" Will match the host's endianness\n","sig":null,"attributes":[{"value":"/ Will match the host's endianness","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493967,"byte_end":494003,"line_start":16,"line_end":16,"column_start":3,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":5414},"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493898,"byte_end":493908,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::number::Endianness","value":"pub enum Endianness {\n\n    /// Big endian\n    Big,\n\n    /// Little endian\n    Little,\n\n    /// Will match the host's endianness\n    Native,\n}","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5417},{"krate":0,"index":5419}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493816,"byte_end":493843,"line_start":9,"line_end":9,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24836,"byte_end":24841,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24992,"byte_end":24997,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25198,"byte_end":25203,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25250,"byte_end":25255,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25553,"byte_end":25558,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37531,"byte_end":37540,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51839,"byte_end":51846,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52578,"byte_end":52584,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54364,"byte_end":54367,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":55041,"byte_end":55044,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56097,"byte_end":56100,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56133,"byte_end":56136,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58827,"byte_end":58828,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59422,"byte_end":59425,"line_start":309,"line_end":309,"column_start":83,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59869,"byte_end":59876,"line_start":327,"line_end":327,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60267,"byte_end":60274,"line_start":344,"line_end":344,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60642,"byte_end":60645,"line_start":361,"line_end":361,"column_start":7,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61040,"byte_end":61042,"line_start":378,"line_end":378,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61800,"byte_end":61804,"line_start":409,"line_end":409,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77761,"byte_end":77762,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":86161,"byte_end":86162,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":100137,"byte_end":100142,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":100337,"byte_end":100342,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124537,"byte_end":124551,"line_start":854,"line_end":854,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16467,"byte_end":16472,"line_start":485,"line_end":485,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16535,"byte_end":16545,"line_start":491,"line_end":491,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":601}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16568,"byte_end":16574,"line_start":493,"line_end":493,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":928}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16597,"byte_end":16605,"line_start":495,"line_end":495,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":973}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16628,"byte_end":16633,"line_start":497,"line_end":497,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1102}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16657,"byte_end":16662,"line_start":500,"line_end":500,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1226}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/mod.rs","byte_start":310586,"byte_end":310594,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1242}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bytes/mod.rs","byte_start":310604,"byte_end":310613,"line_start":6,"line_end":6,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1353}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16685,"byte_end":16689,"line_start":502,"line_end":502,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1464}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388185,"byte_end":388193,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1470}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/bits/mod.rs","byte_start":388203,"byte_end":388212,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1503}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16713,"byte_end":16722,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1577}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405087,"byte_end":405095,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1582}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/character/mod.rs","byte_start":405105,"byte_end":405114,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1704}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/lib.rs","byte_start":16875,"byte_end":16881,"line_start":515,"line_end":515,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1835}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493786,"byte_end":493794,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1845}},{"kind":"Mod","span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/number/mod.rs","byte_start":493804,"byte_end":493813,"line_start":7,"line_end":7,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2010}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23034,"byte_end":23039,"line_start":16,"line_end":16,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1932},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":23909,"byte_end":23914,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":1932},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24836,"byte_end":24841,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":24992,"byte_end":24997,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25198,"byte_end":25203,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25250,"byte_end":25255,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":25553,"byte_end":25558,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2174},"to":{"krate":1,"index":6208}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/error.rs","byte_start":37531,"byte_end":37540,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":51839,"byte_end":51846,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":111},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":52578,"byte_end":52584,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":54364,"byte_end":54367,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":55041,"byte_end":55044,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56097,"byte_end":56100,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2328},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":56133,"byte_end":56136,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2328},"to":{"krate":1,"index":6208}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":58827,"byte_end":58828,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":176},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59422,"byte_end":59425,"line_start":309,"line_end":309,"column_start":83,"column_end":86},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":59869,"byte_end":59876,"line_start":327,"line_end":327,"column_start":7,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60267,"byte_end":60274,"line_start":344,"line_end":344,"column_start":7,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":60642,"byte_end":60645,"line_start":361,"line_end":361,"column_start":7,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":227},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61040,"byte_end":61042,"line_start":378,"line_end":378,"column_start":23,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":241},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/internal.rs","byte_start":61800,"byte_end":61804,"line_start":409,"line_end":409,"column_start":27,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":254},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":71686,"byte_end":71691,"line_start":407,"line_end":407,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":1932},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":75785,"byte_end":75790,"line_start":578,"line_end":578,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":1932},"to":{"krate":0,"index":416}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":77761,"byte_end":77762,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":431},"to":{"krate":0,"index":416}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":86161,"byte_end":86162,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":492},"to":{"krate":0,"index":479}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":100137,"byte_end":100142,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":585}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/traits.rs","byte_start":100337,"byte_end":100342,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2174},"to":{"krate":0,"index":585}},{"span":{"file_name":"/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.1.2/src/combinator/mod.rs","byte_start":124537,"byte_end":124551,"line_start":854,"line_end":854,"column_start":22,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":890},"to":{"krate":4294967295,"index":4294967295}}]}